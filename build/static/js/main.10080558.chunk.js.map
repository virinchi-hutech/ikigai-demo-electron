{"version":3,"sources":["routes/project/ProjectPage.module.scss","constants/index.js","common/index.ts","actions/index.ts","routes/flow-diagram/help-popover.tsx","components/AlertMsg/index.js","components/IkiFormElements/IkiButton/index.js","components/IkiLayout/IkiDivider/index.js","components/characterCounter/index.js","util/index.ts","components/IkiFormElements/IkiInput/index.js","components/IkiFormElements/IkiChipInput/index.js","components/IkiDialog/index.js","components/IkiFormElements/IkiAutocomplete/index.js","history.js","reducers/flow-reducer.ts","util/cookie.js","reducers/user-reducer.ts","reducers/facet-reducer.ts","services/user.service.ts","sagas/index.ts","reducers/index.ts","store/index.js","services/app-data.service.ts","routes/flow-diagram/update-model-component.tsx","util/cron.js","routes/flow-diagram/schedule/schedule-settings.tsx","routes/flow-diagram/schedule/schedule-flows-list.tsx","routes/flow-diagram/schedule/schedule-dialog.tsx","components/loader/index.tsx","routes/flow-diagram/visualize/visualize-dialog.tsx","components/IkigaiLogo/index.js","components/IkiLoader/index.js","routes/flow-diagram/visualize/viz-central-content.tsx","routes/flow-diagram/visualize/visualize-component.tsx","components/IkiLayout/IkiPopupMenu/index.js","components/IkiLayout/IkiTable/index.js","routes/flow-diagram/peek/peek-component.tsx","components/dialogs/delete-project.tsx","components/dialogs/share-project.tsx","components/dialogs/edit-project.tsx","components/file-input/index.tsx","components/dialogs/add-dataset.tsx","components/dialogs/delete-dataset.tsx","components/dialogs/edit-dataset.tsx","components/dialogs/create-session.tsx","components/dialogs/duplicate-project.tsx","components/dialogs/import-flow.tsx","components/dialogs/clone-flow.tsx","routes/flow-diagram/component-drawer-item.tsx","routes/flow-diagram/help-drawer.tsx","routes/flow-diagram/components-drawer.tsx","routes/flow-diagram/actions-menu.tsx","diagram-engine/index.ts","routes/flow-diagram/info-drawer.tsx","diagram-engine/command.ts","routes/flow-diagram/link/index.tsx","routes/flow-diagram/node/customportmodel.ts","routes/flow-diagram/node/customnodemodel.ts","routes/flow-diagram/node/customnodewidget.tsx","routes/flow-diagram/node/customnodefactory.tsx","components/SnackbarMsg/index.js","util/cancellable-promise.js","diagram-engine/command-manager.ts","util/CustomScrollbars.js","components/IkiLayout/IkiNavActionButtons/feedback-dialog.tsx","components/IkiLayout/IkiNavActionButtons/support-popover.tsx","components/IkiLayout/IkiNavActionButtons/nav-module.tsx","components/IkiLayout/IkiNavigation/side-menu.js","components/IkiLayout/IkiNavigation/index.js","components/IkiLayout/IkiBreadcrumb/index.js","components/IkiLayout/IkiPageHeader/index.js","routes/profile/profile-component.tsx","routes/profile/profile-container.tsx","components/IkiFormElements/IkiButtonGroup/index.js","components/IkiLayout/IkiItemBox/index.js","components/IkiLayout/IkiGrid/index.js","routes/projects/projects-component.tsx","routes/projects/projects-container.tsx","routes/project/more-menu.tsx","routes/project/flows/flows-component.tsx","routes/project/datasets/datasets-components.tsx","components/file-input-dash/index.tsx","components/dialogs/add-dashboard.tsx","components/dialogs/edit-dashboard.tsx","routes/project/dashboards/dashboards-component.tsx","routes/project/project-component.tsx","routes/project/project-container.tsx","components/dialogs/new-schedule.tsx","components/dialogs/preview-schedule.tsx","routes/schedules/schedules-component.tsx","routes/schedules/schedules-container.tsx","components/IkiLayout/IkiContent/index.js","components/IkiLayout/IkiContentOverlay/index.js","components/IkiLayout/index.js","routes/flow-diagram/flow-diagram-component.tsx","routes/flow-diagram/flow-diagram-container.tsx","routes/dataset/save-dataset.tsx","routes/dataset/dialog-dataprep.tsx","routes/dataset/dataset-component.tsx","routes/dataset/dataset-container.tsx","routes/dash/dash-view-component.tsx","routes/dash/dash-view-container.tsx","routes/iki-app-component.tsx","routes/iki-app-container.tsx","routes/home/home-component.tsx","routes/home/home-container.tsx","routes/home/login/login-component.tsx","routes/home/login/login-container.tsx","routes/home/signup/signup-component.tsx","routes/home/forgot-password/fpass-component.tsx","routes/home/signup/signup-container.tsx","routes/home/signup-confirm/sconfirm-component.tsx","routes/home/forgot-password/fpass-container.tsx","routes/home/reset-password/resetpass-component.tsx","routes/home/signup-confirm/sconfirm-container.tsx","routes/home/reset-password/resetpass-container.tsx","components/protected-route/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/IkiLayout/IkiNavigation/Navigation.module.scss","components/IkiDialog/Dialog.module.scss","components/AlertMsg/Alert.module.scss","components/IkiFormElements/IkiInput/Input.module.scss","components/IkiFormElements/IkiChipInput/ChipInput.module.scss","components/IkiLayout/IkiNavigation/SideMenu.module.scss","components/IkiLayout/IkiBreadcrumb/Breadcrumb.module.scss","routes/flow-diagram/FlowComponent.module.scss","routes/dataset/DatasetComponent.module.scss","components/IkiLayout/IkiPageHeader/Header.module.scss","routes/dash/DashComponent.module.scss","components/IkiFormElements/IkiButton/Button.module.scss","components/IkiLayout/IkiDivider/Divider.module.scss","components/IkiFormElements/IkiAutocomplete/Autocomplete.module.scss","components/IkigaiLogo/Logo.module.scss","routes/flow-diagram/visualize/Preview.module.scss","routes/flow-diagram/peek/Peek.module.scss","components/IkiFormElements/IkiButtonGroup/ButtonGroup.module.scss","components/IkiLayout/IkiGrid/Grid.module.scss","components/IkiLayout/IkiContent/Content.module.scss","components/IkiLayout/IkiContentOverlay/ContentOverlay.module.scss","routes/flow-diagram/node/Node.module.scss","components/IkiLayout/IkiItemBox/ItemBox.module.scss","routes/home/login/Login.module.scss"],"names":["module","exports","hostName","window","location","hostname","isDev","indexOf","API_BASE","METABASE_URL","actionIds","_axios","axios","create","baseURL","headers","Accept","withCredentials","logoutAction","type","payload","authenticateRequestCompleteAction","loginResponse","sendAppDataCompleteAction","response","addFlowActionComplete","id","getFlowsActionFail","saveFlowsActionComplete","updateFlowDataActionStart","nodeData","getProjectsActionStart","getProjectsActionComplete","projects","duplicateProjectActionStart","projectId","name","targetUser","deleteProjectActionStart","renameProjectActionStart","newName","renameProjectActionComplete","resetUserStateAction","resetFlowStateAction","getDatasetActionStart","getDatasetActionFail","reason","getDashboardActionStart","project_id","createDatasetActionStart","datasetName","file","createDatasetActionComplete","datasetId","createDashboardActionComplete","dashboardId","creatDashboardActionFail","deleteDatasetActionStart","deleteDatasetActionComplete","deleteDashboardActionComplete","editDatasetActionStart","editDatasetActionComplete","uploadDatasetProgress","percent","status","retry","cancel","editDashboardActionComplete","loginMetabaseActionStart","getSuggestionsActionStart","data","handleProjectReturn","sourceFrom","handleCleanSession","handleFillSession","projectSess","HelpPopover","props","helpText","useState","tabIndex","setTabIndex","helperPopoverState","setHelperPopoverState","handleTabChange","event","newValue","Tooltip","open","arrow","interactive","title","text","helpTexts","split","join","length","source","escapeHtml","className","Tabs","value","onChange","indicatorColor","Tab","label","hidden","src","trim","alt","getHelpText","leaveDelay","placement","onClose","tabClicked","target","targetElClassVal","map","classItem","onOpen","AlertMsg","alertType","this","alertContent","alertButtons","Alert","severity","styles","alert","Box","descr","buttons","Component","cx","classNames","bind","IkiButton","_label","_variant","_type","_color","_disabled","_fullWidth","_loading","_startIcon","_onClick","_isDanger","_isWarning","_align","color","btnClass","button","btnSpinnerClass","btnSpinner","Button","variant","fullWidth","disabled","onClick","IkiDivider","_text","textDivider","CharacterCounter","error","currentLength","maxLength","getCurrentDate","moment","format","getFriendlyLabel","labelWord","toUpperCase","slice","toLowerCase","cloneObject","obj","JSON","parse","stringify","IkiInput","constructStartIconProps","_withButton","InputAdornment","position","_position","startIcon","IconButton","edge","_edge","onMouseDown","preventDefault","size","_size","_icon","constructEndIconProps","_endIcon","_placeholder","_value","_inputProp","_InputProp","_selectProp","_error","_required","_autoFocus","_margin","_filterType","_characterCounter","_isSelect","_selectOptions","_selectOptionsKeyForVal","_selectOptionsKeyForTxt","_multiline","_rows","errorMsg","startAdornment","endAdornment","inputHolderClass","inputHolder","inputClass","input","FormControl","TextField","margin","placeholder","select","autoComplete","_onChange","required","autoFocus","multiline","rows","inputProps","InputProps","InputLabelProps","shrink","SelectProps","option","MenuItem","key","toString","FormHelperText","IkiChipInput","inputChipHolderClass","inputChipHolder","inputChipClass","inputChip","onAdd","chip","_addChip","onDelete","deletedChip","_deleteChip","IkiDialog","_open","_onClose","_title","_subtitle","_content","_actions","_onEnter","dialogClass","dialog","Dialog","onEnter","maxWidth","disableBackdropClick","DialogTitle","header","subtitle","DialogContent","content","DialogActions","footer","IkiAutocomplete","handleSelection","index","_index","_keyValue","_nameValue","selectedOptionIndex","forEach","prepareComponent","_isMultiple","_noSelectOptionsTxt","_groupByValue","_selectOptionsArr","_selectedVal","push","sort","a","b","localeCompare","autocompleHolderClass","autocompleteHolder","autocompleteClass","autocomplete","Autocomplete","multiple","options","getOptionLabel","inputValue","state","inptVal","setState","renderInput","params","groupBy","defaultValue","history","createBrowserHistory","defaultState","flows","flowsLoaded","flowsLoadedError","datasets","dashboards","projectsLoaded","uploadStatus","dashUploadStatus","creatingFlow","projectsLoadedError","datasetsLoaded","datasetsLoadedError","dashboardsLoaded","dashboardsLoadedError","uploadProgress","metabaseLogin","metabaseLoginId","activeProjectId","activePageType","activePipelineId","flowReducer","action","handleSendAppData","handleAddFlowStart","handleAddFlow","handleFlowsRequestStart","handleFlowsRequestComplete","handleFlowsRequestFail","handleSaveFlowsRequestComplete","handleUpdateFlowDataComplete","handleDeleteFlowComplete","handleRestoreFlowComplete","handleGetProjectRequestComplete","handleGetProjectRequestFail","handleCreateProjectRequestComplete","handleCreateProjectRequestFail","handleDuplicateProjectRequestComplete","handleDuplicateProjectRequestFail","handleDeleteProjectRequestComplete","handleDeleteProjectRequestFail","handleRenameProjectRequestComplete","handleRenameProjectRequestFail","handleResetFlowState","handleGetDatasetsRequestStart","handleGetDatasetsRequestComplete","handleGetDatasetsRequestFail","handleDeleteDatasetRequestComplete","handleDeleteDatasetRequestFail","handleDeleteDashboardRequestComplete","handleDeleteDashboardRequestFail","handleCreateDatasetRequestComplete","handleCreateDatasetRequestStart","handleEditDatasetRequestStart","handleEditDatasetRequestComplete","handleDatasetProgress","handlegetDashboardsRequestStart","handleGetDashboardsRequestComplete","handleGetDashboardsRequestFail","handleDashboardUploadStart","handleDashboardUploadComplete","handleDashEditStart","handleDashEditComplete","handleLoginMetabaseRequestComplete","handleLoginMetabaseRequestFail","dataset","filterdDatasets","filter","datasetData","dataset_id","filteredUploads","percentCompleted","onRetry","onCancel","dashboard","filteredDashboards","dashboardData","dashboard_id","filteredDatasets","dashboardsData","project","p","otherProjects","owner","user","flow","isDeleted","flowData","pipeline_id","flowsData","pipelineObj","projectFlows","pipeline","metabaseSession","session_id","sourcePage","cookies","Cookies","removeCookie","remove","email","idToken","refreshToken","accessToken","checkForLoginCookieComplete","isLoggedIn","userReducer","authenticateCompleteHandler","checkForLoginCookieCompleteHandler","checkForLoginCookieFailHandler","handleResetUserState","tokens","decode","defaults","common","tokenObject","id_token","refresh_token","access_token","tokenString","set","componentList","facetDocLoaded","facetDocError","facetDocErrorMessage","facetReducer","handleGetFacetDocComplete","handleGetFacetDocFail","authenticateUser","credentials","password","post","signupUser","pass","completeUserRegistration","code","confirmation_code","initiateForgotPassword","confirmForgotPassword","confirmChangePassword","pass2","previous_password","proposed_password","logout","Promise","resolve","reject","then","res","purgeSessions","watchEditDatasetAction","watchEditDashboardAction","watchLoginMetabaseAction","watchDeleteDatasetAction","watchDeleteDashboardAction","watchUploadDatasetAction","watchCreateDatasetAction","watchCreateDashboardAction","watchCreateDashboardForUploadAction","watchGetDatasetsAction","watchGetDashboardsAction","watchSoftLogoutAction","watchRenameProjectActionStart","watchDeleteProjectActionStart","watchCreateProjectActionStart","watchDuplicateProjectActionStart","watchGetProjectsActionStart","watchGetFlowDocActionStart","watchLogoutAction","watchCheckForLoginCookieStart","watchAuthenticationStart","watchRestoreFlow","watchDeleteFlow","watchSendAppDataRequestStart","watchAddFlowRequest","watchGetFlowsRequestStart","watchSaveFlowsRequestStart","watchUpdateFlowDataStart","watchGetSuggestions","_updateFlowDataStart","_saveFlows","_getFlows","_restoreFlow","_deleteFlow","_addFlow","_sendAppData","_authenticate","_checkForLoginCookie","_logout","_getFacetDoc","_getProjects","_createProject","_deleteProject","_duplicateProject","_renameProject","_softLogout","_getDatasets","_getDashboards","_createDataset","_createDashboardForUpload","_createDashboard","_uploadDataset","_deleteDataset","_deleteDashboard","_editDataset","_editDashboard","_loginMetabase","_getSuggestions","getUserState","userReducerState","rootSaga","root","all","fork","takeEvery","put","pipelineData","call","saveFlow","getFlows","pipelines","deletePipeline","flowObj","createPipeline","getPipeline","sendAppData","get","getFacetDoc","facetsData","getProjects","createProject","deleteProject","currentOwner","currentOwnerEmail","ownerEmail","duplicateProject","renameProject","getDatasetsForProject","datasetsResponse","getDashboardsForProject","dashboardsresponse","createDataset","uploadDataset","getDataset","createDashboard","uploadDashboard","getDashboard","datasetOverwrite","deleteDataset","deleteDashboard","editDataset","editDashboard","enterSession","suggestions","sagaMiddileware","createSagaMiddleware","store","createStore","combineReducers","flowReducerState","facetReducerState","router","connectRouter","compose","applyMiddleware","routerMiddleware","run","CancelToken","apiURL","facetDocumentstions","getFacetDocumentations","facetDocsResponse","_data","console","log","Object","keys","chain","facetGrp","facetTyp","_args","keyChainGroup","keyFacetGroup","keyFacetType","chainGroup","facetGroup","facetType","facetDoc","docArrayVal","documentation","facetExample","CONNECTOR","API","definition","schedule","cron","start_time","end_time","getSuggesstions","pipelineId","getProject","targetEmailInserted","getState","shareProject","dataset_name","retryFun","dispatch","cancelFun","getDatasetUploadUrl","dUploadUrlRes","uploadDatasetWithURL","url","content_type","dUploadWithUrlRes","confirmDatasetUpload","confirmDUploadRes","err","datasetFilename","filename","datasetUploadUrl","datasetContentType","datasetFile","updatePercent","onUploadProgress","progressEvent","loaded","total","getDashboardUploadUrl","uploadDashboardWithURL","confirmDashboardUpload","dashboardFilename","dashboardUploadUrl","dashboardContentType","dashboardFile","file_name","downloadDatasetWithURL","datasetDownloadUrl","transformRequest","transformResponse","responseType","fetch","ok","blob","blobFile","fileName","browseDataset","cancelToken","token","getDatasetCleanFunctions","getDatasetHeader","cleanDataset","cleanOption","columnName","uType","uFormat","arguments","column_name","uniformization_type","uniformization_format","saveDataset","datasetNewName","datasetNewId","new_dataset_name","isCancel","exitSession","browseFacet","facetId","parentFacetId","facet_id","parent_facet_id","finishBrowseFacet","saveFacet","finishBrowseDashboard","browseHeader","source_facet_id","destination_facet_id","browseArrow","sourceFacetId","destinationFacetId","browseDashboard","finishBrowseArrow","peekArrow","isPipelineRunning","getPastScheduleForUser","countLogs","statusOfLogs","count","getPastScheduleForProject","getPastScheduleForPipeline","getUpcomingScheduleForUser","getUpcomingScheduleForProject","getUpcomingScheduleForPipeline","UpdateModel","apiPython","worksheet_index","columns","limit","api_parameters","googleSheetsLibraries","googleSheetsPScript","handle_Import","handle_Json","handle_Pandas","handle_Credentials","handle_Authorize","handle_Data","googleSheetsParameters","bigQueryLibraries","bigQueryPScript","handle_Columns","handle_Dataset","handle_Limit","customParametersLibraries","attributesTypes","attributes","showColumNamesChips","createDatasetClicked","newlyAddedDatasetNameExists","newlyAddedDatasetName","newlyAddedDatasetID","autoSaveSaved","autoSaveTimeout","newlyAddedDashboardNameExists","newlyAddedDashboardName","newlyAddedDashboardID","associatedDatasetAttribute","customFacetName","suggestColumnNames","noColOptionsText","buttonGroupValue","showApiParameters","apiUrl","apiParameters","apiTemplate","outputDatasetId","bucketDefaultValueForDataset","constructGSheetPScript","api_url_val","api_windex_val","pythonScriptValue","constructBQueryPScript","api_dataset_val","api_columns_val","api_limit_val","constructCustomParameters","constructGSheetParameters","getAttributes","updateCallback","title1","splitTitel1Value","title2","attributesTypesArr","attributesofImpDataset","attrs","undefined","getInputComponent","mb","getAttributesForAPIFacet","customType","getNestedInputComponent","attribute","parentKey","nestedAttribute","argument_type","have_options","is_required","_autoComplete","onUpdatedNestedComponent","my","style","width","_noOptionsText","onNestedSelectColumn","getNestedInput","is_list","children","attr","customFacetType","Fab","aria-label","deleteNestedInputGroup","callback","addNestedInputGroup","temp_val","handleCreateNewDataset","mode","theme","editorProps","$blockScrolling","focus","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","isBucket","onTargetColumnChange","_renderTags","getTagProps","Chip","temp","i","setTimeout","updatedAssociatedDatasets","onAddChip","onDeleteChip","handleAutoSave","resetTimeout","handleSubmitScriptFacetOnChange","onSubmit","newID","clearTimeout","standardDialog","mt","handleDismissDatasetNameExists","handleDatasetOverwriteYes","handleDismissDashboardNameExists","handleDashboardOverwriteYes","facetDocumentation","e","onUpdate","validate","handleNamingFacet","checkForOutputDashName","checkForOutputDataset","apiDialog","ButtonGroup","attributeTypes","checkForHashMaps","checkForDefaultValues","chainGroupTitle","facetGroupTitle","facetTypeTitle","createNewDatasetDialogIsOpened","facetName","tempColNamesArr","pipelineInfo","nodeDetails","parents","browseHeaderRes","column_names","col","colIndex","browseHeaderErr","resenterSession","resenterSessionErr","api_parameters_arr","Array","isArray","windex","scriptValue","libraries","url_forScript","windex_forScript","requestColumns_forScript","requestDataset_forScript","requestLimit_forScript","parseInt","dashboardIds","d","k","parametersValue","parameterKey","parameterName","parameterValue","parameterComma","chipsString","chips","selectedColumn","c","arrKey","firstElement","attrType","childAttr","key1","childAttrType","temp2","checkNameOverlap","checkDashboardname","checkDashboardId","overwrite","checkDatasetNameOverlap","checkDatasetNameOverlapName","checkDatasetNameOverlapID","user_email","path","nextProps","prevState","lastDatasetElement","newDatasetName","clearNewDataset","getCronElement","elementString","recur","replace","convertToCronString","minutes","hours","dayOfMonth","month","dayOfWeek","cronArray","ScheduleSettings","settings","oneTime","enabled","startDate","startTime","day","recurEvery","atTime","endDate","week","days","shortForm","handleChangeForm","time","endTime","isValid","cronObject","cronString","elements","parseCronString","clone","hour","Date","getHours","minute","getMinutes","validated","classes","textField","Grid","container","alignItems","spacing","item","xs","FormControlLabel","control","Radio","checked","labelPlacement","Checkbox","withStyles","formBox","padding","border","marginTop","formBoxTitle","marginLeft","backgroundColor","display","sheduleDialog","scheduleDialogContent","scheduleTable","scheduleTableRow","borderBottom","justifyContent","scheduleTableRowCenter","scheduleTableCell","float","scheduleTableCell1","scheduleTableCellDays","scheduleTableleft","marginRight","scheduleTableright","scheduleNumberTextField","ScheduleFlowsList","Table","component","TableHead","TableRow","TableCell","TableBody","list","listItem","date","execution","fontSize","TabContainer","ScheduleDialog","selectedTab","applicableSettings","handleRequestClose","handleChange","indicator","getScheduleForm","getPastFlows","getUpcomingFlows","cancelButtonHandler","applyButtonHandler","updateSettings","pastScheduledActions","upcomingScheduledActions","s","userTime","userStartDate","userFullStartDatetimeUTC","getTime","toFixed","userEndDate","userFullEndDatetimeUTC","utcHours","getUTCHours","utcMinutes","getUTCMinutes","daysOfWeek","weeks","userFullDatetime","userFullDatetimeUTC","Loader","VisualizeDialog","iFrameContentLoaded","loading","isMetabase","height","onLoad","sandbox","getContent","IkigaiLogo","_navMinimzed","loginLogoClass","loginLogo","IkiLoader","loadingTxt","fadeOut","placementClass","componentClassName","VizCentralContent","getVizCentralContent","VisualizeComponent","vizElement","onMinimize","projectName","vizType","vizFacetInfo","Fragment","sourcePort","parent","chain_group","facet_group","facet_type","targetPort","interactivePreviewClass","interactiveWrap","getLeftSidebar","getRightSidebar","IkiPopupMenu","anchorEl","setAnchorEl","aEle","handleClick","currentTarget","handleClose","_close","handleMenuClick","_functions","aria-controls","aria-haspopup","Menu","paper","popupMenu","Boolean","func","num","prepareItems","_func","edit","_id","_name","share","download","browse","IkiTable","onRequestSort","property","tableSortAsc","tableSortProperty","sortTable","tableContent","sortOn","arr","prepareTable","popupMenuIdKey","popupMenuNameKey","_header","_link","_headerDescr","_stickyHeader","sortedTable","tableHolder","stickyHeader","headerColumn","align","sortDirection","TableSortLabel","active","IconComponent","ArrowDropDownIcon","direction","headerDescrColumn","headerDescrColumnIndex","bodyRow","bodyRowIndex","headerindex","to","PeekComponent","peekClass","peekWrap","peekInitiated","peekMinMax","handleMinMaxPeekArrow","handleClosePeekArrow","peekLoading","peekContent","peekContentKey","DeleteProjectDialog","handleDialogClose","handleDeleteDialogSubmit","handleDeleteDialogCancel","deleteSubmitLoading","ShareProjectDialog","projectShareDialogErrorState","projectShareDialogErrorMsg","shareSubmitLoading","React","targetUserEmail","setTargetUserMail","emailErrorMsg","setEmailErrorMsg","handleOnCloseShareDialog","emailIsValid","EmailValidator","EditProjectDialog","projectID","renameSubmitLoading","setNewName","nameErrorState","setNameErrorState","handleOnClose","FileInput","deleteAction","setDeleteAction","onDrop","useCallback","acceptedFiles","onFileAdded","useDropzone","accept","getRootProps","getInputProps","useEffect","fileData","AddDatasetDialog","datasetID","handleSubmit","handleSubmitOverwrite","handleCancel","isEdit","newDatasetNameExists","dismissAlert","setDatasetName","datasetNameError","setDatasetNameError","setFile","fileError","setFileError","setIsvalidated","_onExit","DeleteDatasetDialog","EditDatasetDialog","isValidated","aria-labelledby","datsetName","CreateSessionDialog","handleCreate","DuplicateProjectDialog","duplicateSubmitLoading","copyName","copyIndex","copyVersion","substring","isNaN","projectNameValid","projectEmailValid","ImportFlowDialog","isImportingProgress","importFlowNameExists","flowName","setFlowName","flowNameError","setFlowNameError","setDefinition","reader","FileReader","readAsText","onload","evt","pipelineDefinition","result","facets","onerror","_isAlternate","countErrors","CloneFlowDialog","isCloningProgress","cloneFlowId","cloneFlowName","cloneFlowError","projectsList","cloneType","setCloneType","cloneTypeDisabled","setCloneTypeDisabled","setProject","projectError","setProjectError","handleProject","selectedProjectId","handleNamingOnEnter","FormLabel","RadioGroup","projectsArray","projectData","projectInfo","prepareProjectsList","ComponentDrawerItem","TreeItem","nodeId","node","facet_info","custom_facet_type","triggerHelpDrawer","draggable","onDragStart","dataTransfer","setData","componentItem","textAlign","borderRadius","icon","marginBottom","HelpDrawer","documentaitionLoaded","setDocumentaitionLoaded","handleCloseHelpDrawer","ComponentDrawer","toggleHelpDrawer","helpDrawerContent","TreeView","defaultCollapseIcon","defaultExpandIcon","getComponentList","closeHelpDrawer","helpContent","components","componentsByGroup","handleHelpDrawer","MoreMenu","keepMounted","onActions","onArguments","_engine","_model","_dagreEngine","InfoDrawer","editMode","flowDiagramMode","statusBoxMode","selectedActionsTab","onSaveTitle","UNIX_timestamp","year","getFullYear","getMonth","getDate","getSeconds","pipelineLogArray","pipelineLogs","pipelinelog","logTimestamp","timeConverter","timestamp","run_type","message","onFlowDiagramModeChanged","actionTabSelected","disableButtons","modeChangePending","pipelineRunning","data_format","data_type_cast_rule","toggleEditMode","Input","onChangeTitle","onChangeProjectName","onRun","onSchedule","pipelineSpecs","InputLabel","htmlFor","Select","displayEmpty","updatePipelineArg","cleanedAttr","toggleStatusBoxMode","getResponse","Command","execute","undo","_execute","_undo","_executedValue","_undoValue","CustomLinkModel","listenerRef","added","isConnectedToANode","buttonsState","handleButtonsStateEnabled","handleButtonsStateDisabled","DefaultLinkModel","CustomLinkSegment","hover","pathContainer","buttonGroup","mounted","eventsAdded","radtodeg","Math","PI","point","getPointAtLength","getTotalLength","point2","addEventListener","dx","x","dy","y","angle","atan2","setAttribute","px","py","transform","pointerEvents","requestAnimationFrame","model","fireEvent","hitArea","getOptions","ref","fill","strokeWidth","stroke","points","isLocked","tooltip","popper","handlePeekClick","handlePreviewClick","handleEditClick","handleDeleteClick","CustomLinkFactory","selected","DefaultLinkFactory","CustomPortModel","DefaultPortModel","CustomNodeModel","custom_facet_group","custom_chain_group","linksRef","valid","errorMessages","addPort","in","NodeModel","CustomNodeWidget","mouseOver","updatedNodeName","registerListener","validatedNode","handleNodeValidate","updatedFacetName","handleNodeNameUpdate","deregisterListener","errorMessageTitle","errorList","msg","errorMessage","getErrorMessage","nodeErrorIcon","customNode","cardClassName","getErrorMessages","Card","onMouseEnter","handleMouseOver","onMouseLeave","handleMouseOut","facetNameHolder","engine","port","getPort","circlePort","customNodeName","customNodeHeader","customNodeChainGroup","customNodeTitle","CustomNodeFactory","_initialConfig","AbstractReactFactory","_facets","currentNodeId","autoLayoutLoopCounter","initDiagramEngine","createEngine","getStateMachine","getCurrentState","DefaultDiagramState","dragNewLink","config","allowLooseLinks","getNodeFactories","registerFactory","getLinkFactories","getActionEventBus","deregisterAction","getActionsForType","InputType","KEY_DOWN","DiagramModel","setModel","setMaxNumberPointsPerLink","DagreEngine","graph","rankdir","ranker","ranksep","includeLinks","addArrows","arrows","addArrow","destination","link","node1","node2","setSourcePort","setTargetPort","firstPoint","getFirstPoint","getPosition","sourcePosition","getSourcePort","translate","setPosition","lastPoint","getLastPoint","targetPosition","getTargetPort","addLink","centerCanvas","getDiagramEngine","getModel","canvas","getCanvas","zoomFactor","getZoomLevel","nodes","from","getElementsByClassName","el","w","offsetWidth","h","offsetHeight","l","offsetLeft","t","offsetTop","max","abs","min","setOffset","clientWidth","clientHeight","repaintCanvas","zoomOut","setZoomLevel","getDiagramModel","autoLayout","getNodes","getLinks","redistribute","_createNode","SnackbarMsg","setSnackbarIcon","snackbarType","CircularProgress","snackbarOpenState","snackbarOpen","snackbarMsg","snackbarDuration","anchorOrigin","vertical","horizontal","autoHideDuration","onBlur","handleOnBlur","onSnackbarClose","makeCancelable","promise","hasCanceled_","val","isCanceled","CommandManager","stack","command","canPerformUndo","canPerformRedo","CustomScrollbars","autoHide","renderTrackHorizontal","SupportFeedbackDialog","handleFeedbackDialogClose","handleFeedbackDialogCancel","openFeedbackDialog","feedbackImgData","onFeedbackDialogSubmit","feedbackSubmitState","handleDialogSubmitState","shareTargetType","setShareTargetType","supportTargetType","selectedSupportTargetType","userTargetType","selectedUserTargetType","targetUserEmailState","setTargetUserMailState","setTargetUserMailError","targetUserEmailErrorMsg","setTargetUserMailErrorMsg","screenshootPreview","setScreenshootPreview","feedbackImageCheckbox","setFeedbackImageCheckbox","feedbackMessage","setFeedbackMessage","feedbackMessageError","setFeedbackMessageError","handleTargetUserTypeChange","targetUserType","handleExitDialog","handleTargetUserEmailChange","handleFeedbackMessage","visible","images","noFooter","drag","msgIsValid","SupportPopover","setSupportPopoverAnchorEl","anchorSupportPopover","openSupportPopover","loggedUserEmail","addCommentStatus","setAddCommentStatus","mouseX","setMouseX","mouseY","setMouseY","newComment","setNewComment","commentsArray","setCommentsArray","mouseoverCommentBox","setCommentBoxMouseOver","anchorElCommentActionBtn","setAnchorElCommentActionBtn","selectedCommentBox","setSelectedCommentBox","editCommentStatus","setEditCommentStatus","updateEditComment","setUpdateEditComment","feedbackImg","setFeedbackImg","feedbackDialogState","setFeedbackDialogState","commentTextareaErrorState","setCommentTextareaErrorState","commentEditTextareaErrorState","setCommentEditTextareaErrorState","snackbarIsOpen","setSnackbarOpen","snackbarMessageIs","setSnackbarMessage","snackbarIsType","setSnackbarType","feedbackDialogSubmitState","setFeedbackDialogSubmitState","hideSupportPopover","setHideSupportPopover","handleCloseSupportPopover","idAddComment","handleCommentBoxMouseOver","handleCommentBoxMouseOut","handleCancelEditComment","handleUpdateEditTextarea","handleConfirmEditComment","commentBoxIndex","comment","handleFeedbackDialogSubmitState","fdState","Popover","transformOrigin","document","domtoimage","toPng","body","quality","dataUrl","appendChild","Image","ts","round","convertedTimestamp","toJpeg","createElement","href","click","downloadScreenshot","nativeEvent","offsetX","offsetY","top","pTop","left","pLeft","onMouseOver","onMouseOut","selectedComment","selectedCommentVal","openCommentMenu","anchorReference","anchorPosition","datetime","handleAddCommentBtn","splice","userEmail","targetType","emailjs","init","screenshot","template_id","greeting_msg","endEmail","template_params","send","ChatNavModule","activeUserEmail","uploadDetailsPopover","setUploadDetailsPopover","openUploadDetailsPopover","handleSupportPopoverOpen","handleUploadDetailsPopoverOpen","Badge","badgeContent","LinearProgress","DrawerMenu","that","pathname","search","menuLi","onclick","parentLiEle","closest","classList","contains","stopPropagation","add","j","parentLi","activeLi","querySelector","activeNav","selector","matchesFn","some","fn","parentElement","_uploadProgress","_email","_logoutHandler","_getMenuItemActive","_menuItemActive","_page","_activePageType","_appData","navMenuHolderScrollbarClass","navMenuHolderScrollbar","navMenuHolderClass","navMenuHolder","schedulePathname","pathname_array","page_id","navMenu","withRouter","IkigaiNavigation","prepareNavigation","_leftSidebar","_rightSidebar","_filterSidebar","_handleGoBack","_toggleNavigation","drawerHolderClass","drawerHolder","Drawer","anchor","goBack","cursor","goBackIcon","filterSidebar","pureBg","infoDrawerHolder","toggleNavButton","IkiBreadcrumb","_parentLink","_parentText","_pageTitle","_backIcon","breadcrumb","IkiPageHeader","_breadcrumbLink","_breadcrumbText","_breadcrumbTitle","_breadcrumbBackIcon","_actionButtons","buttonsHolder","passwordRules","require","is","has","uppercase","lowercase","digits","not","spaces","ProfileComponent","passwordValue","passwordValue2","passwordValue3","showPassword","showPassword2","showPassword3","passErrorMsg","passErrorMsg2","passErrorMsg3","verificationCodeSubmitErrorMsg","verificationCodeSubmitErrorState","resetpassSubmitErrorMsg","resetpassSubmitErrorState","resetpassSubmitSuccessState","resetpassSubmitSuccessMsg","snackbarMessage","handleClickShowPassword","handleClickShowPassword2","handleClickShowPassword3","handlePassChange","handlePassChange2","handlePassChange3","handleSnackbarClose","handleChangePassFormSubmit","passIsValid","passIsValid2","passIsValid3","Container","md","lg","CardContent","noValidate","alignContent","justify","ProfileContainer","connect","cleanSession","fireReturnToProject","IkiButtonGroup","_buttons","buttonGroupClass","IkiItemBox","clickedOnBoxMenu","handleOnBoxMenuClick","handleCloseBoxMenuClick","handleBoxClick","_owner","_uploadInfo","percentCompletedFormated","objectUploading","uploadingObject","objectUploadingIndex","boxClass","itemBox","menu","faded1","newSection","uploadingDatabox","linearProgress","IkiGrid","grid","ProjectsComponent","filterOptions","newProjectDialogState","newProjectName","newProjectNameError","newProjectNameErrorMsg","deleteDialogState","deleteProjectID","tblRowActionBtnState","snackbarCreateProSuccessState","projectDeleteDialogState","deleteDialogProjectID","deleteDialogProjectName","projectShareDialogState","shareDialogProjectID","shareDialogProjectName","emailValidation","rowsPerPage","page","searchTerm","projectsFilter","renderAsList","clickedBox","sharingLoading","newProjectLoading","deletingLoading","duplicateDialogProjectID","duplicateDialogProjectName","duplicateDialogProjectState","duplicateLoading","handleEditProject","handleClickOverBox","boxID","handleCloseClickOverBox","handleDeleteProjectDialog","handleShareProjectDialog","handleDuplicateProjectDialog","handleDialogOpen","handleDialogSave","checkProjectNameOverlap","createNewProject","handleDeleteDialogOpen","handleDeleteDialogClose","handleTableActionBtn","handleTableActionBtnOpen","handleOpenSuccesSnackbar","handleCloseSuccesSnackbar","handleOpenShareSuccesSnackbar","handleCloseShareSuccesSnackbar","handleShareDialogCancel","handleChangePage","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","handleChangeSearchTerm","handleChangeProjectFilter","filterProjects","handleRenderAsList","handleRenderAsGrid","viewTypeSwitchButtons","getProjectFilters","TablePagination","labelRowsPerPage","rowsPerPageOptions","colSpan","onChangePage","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","sortProjects","getProjectsList","pageProjects","itemId","delete","itemName","handleDuplicateProjectDialogSubmit","matchProjects_Arr","duplicateAPIError","handleShareDialogSubmit","ProjectsContainer","createProjectActionStart","onEdit","onShare","onDuplicate","FlowsComponent","deletePipelineName","deletePipelineID","newFlowDialogState","newFlowName","newFlowNameError","newFlowNameErrorMsg","projectNameEditMode","snackbarShareProSuccessState","editProjectDialogState","addDatasetDialogState","addDashboardtDialogState","deleteDatasetDialogState","uploadDatasetDialogState","editDatasetDialogState","editDashboardDialogState","tabValue","datasetEditMode","addDatasetMinimize","dashEditMode","renamingLoading","newlyAddedDashNameExists","addFlowLoading","flowsFilter","toggleFilterDisplay","importFlowDialogState","cloneFlowDialogState","cloneFlowNameError","cloneFlowNameErrorMsg","cloneProcess","sessionCreated","sessionID","showContent","handleDialogkOpen","handleOnClone","pipelineName","handleToggleFilter","sortFlows","filterFlows","getFlowsFilters","handleFlowDialogClose","handleNewFlowDialogSave","checkFlowNameOverlap","pipelineIdByResponse","subpageClick","flowId","facet","bucket","blb","Blob","FileSaver","saveAs","originalFlowId","targetProjectId","pageFlows","handleOnDownloadClick","onNewFlowItemClick","onImportFlowClick","newFlowDialog","deleteFlowDialog","handleImportFlowDialogCancel","handleImportFlowDialogSubmit","handleCloneFlowDialogCancel","handleCloneFlowDialogSubmit","deleteFlow","DatasetsComponent","d_sort","d_rowsPerPage","d_page","d_searchTerm","d_flowsFilter","d_renderAsList","d_tableSortAsc","d_tableSortProperty","d_toggleFilterDisplay","d_clickedBox","sortDatasets","filterDatasets","getDatasetsFilters","pageDatasets","datasetUploading","datasetsArr","datasetsWithUploading","uploadProgressData","handleDatasetEdit","handleDatasetDelete","handleDatasetDownload","onNewDatasetItemClick","getDatasets","selectedDatasetData","handleAddDatasetDialogClose","handleAddDatasetDialogSubmit","handleAddDatasetDialogSubmitOverwrite","handleDeleteDatasetDialogClose","handleDeleteDatsetDialogSubmit","handleEditDatasetDialogClose","handleEditDatasetDialogSubmit","handleUploadDatasetDialogClose","existingDatasetId","datasetDownloadURL","downloadDatasetWithURLRes","fullFileName","fileType","fileUrl","downloadDataset","FileInputPY","AddDashboard","newDashboardNameExists","datasetIds","dashboardName","setDashboardName","dashboardNameError","setDashboardNameError","setDatasetId","setValue","Typography","EditDashboardDialog","DashboardsComponent","dash_rowsPerPage","dash_page","dash_searchTerm","dash_flowsFilter","dash_renderAsList","dash_tableSortAsc","dash_tableSortProperty","dash_toggleFilterDisplay","dash_clickedBox","sortDashboards","filterDashboards","getDashboardsFilters","pageDashboards","dashboardUploading","dashboardsArr","dashboardsWithUploading","handleDashEdit","handleDashboardDelete","datasetsExisting","onDashboardItemClick","getDashboards","selectedDashData","handleDatasetsForDash","handleAddDashboardDialogClose","handleAddDashDailogSubmit","handleAddDashDialogSubmitOverwrite","handleDismissDashNameExists","handleEditDashboardDialogClose","handleEditDashboardDialogSubmit","checkDashNameOverlap","existingDashboardId","dashData","subpageLink","ProjectComponent","subpageClicked","handleDuplicateProjectDialogClose","urlParamProjectId","match","typeOfPageAccess","enterSessionManully","sessRes","fillSessions","enterSessRes","isUnderProject","pathName_array","exitSessionManually","exitSessRes","exitSessErr","handleSubpageClick","backLink","onChangeTabs","addFlow","handleEditProjectDialogClose","handleEditCancel","handleEditProjectDialogSubmit","ProjectContainer","addFlowAction","deleteFlowAction","getFlowsActionStart","createDashboardForUploadActionStart","editDashbarodActionStart","uploadDashboardActionStart","deleteDashboardActionStart","proSess","NewScheduleDialog","newScheduleDialogErrorMsg","newScheduleSubmitLoading","appData","activeStep","setActiveStep","scheduleName","setScheduleName","scheduleNameErrorMsg","setScheduleNameErrorMsg","subjectItem","setSubjectItem","subjectItemError","setSubjectItemError","scheduleTimeType","setScheduleTimeType","weekDays","scheduleTime","setScheduleTime","recurDaily","setRecurDaily","recurDailyErrorMsg","recurWeekly","setRecurWeekly","recurWeeklyErrorMsg","steps","subjectItems","subjectsItems","projectKey","projectPipelines","pipelineKey","scheduleItem","setSubjectItems","handleScheduleNameChange","handleRecurDailyChange","handleRecurWeeklyChange","handleColumnNameSelect","selectedVal","handleScheduleTimeType","scheduleType","handleChangeDaySelect","checkedDay","dayObject","selectedDaysArray","handleOnCloseScheduleDialog","Stepper","orientation","Step","StepLabel","StepContent","step","utils","MomentUtils","getStepContent","prevActiveStep","validationCounter","PreviewScheduleDialog","eventStatusStyle","setEventStatusStyle","start","handleOnEnterScheduleDialog","category","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","localizer","momentLocalizer","SchedulesComponent","schedules","upcomingSchedules","pastSchedules","scheduleCategory","newScheduleDialogOpen","newScheduleDialogError","addingNewScheduleLoading","previewScheduleDialogOpen","previewScheduleData","breadCrumbLink","breadCrumbTxt","subjectName","subjectId","constructBreadcrumb","setScheduleCategory","getScheduleFilters","handleEditSchedule","handleDeleteSchedule","calendarEventClick","openNewScheduleDialog","closeNewScheduleDialog","submitNewSchedule","pipelineObject","appD","userEndTime","scheduleObject","modifiedAt","updateFlowData","page_type","pastSchedules_response","schedule_logs","upcomingSchedules_response","schedule_log","closePreviewScheduleDialog","appData_arr","getPipeline_response","getProject_response","getProjects_response","getFlows_response","pathName","pathName2","schedulesArr","currentUnixTime","noScheduleTxt","pipeline_logs","pipelineLog","eventTime","logDateTime","logTimestamp_year","logTimestamp_month","logTimestamp_day","isPast","isBefore","isUpcoming","isAfter","schedulesRestructured","end","desc","events","startAccessor","endAccessor","eventPropGetter","onSelectEvent","activeSchedules","getSchedules","ScheduleName","SchedulesContainer","IkigaiContent","prepareContent","contentAreaClass","contentArea","IkigaiLayout","prepareLayout","_historyData","isNavMinimized","navMinimized","toggleNavigation","menuItem","FlowDiagramComponent","_isMounted","selectedNodeId","_commandManager","autoLayoutApplied","pipelineCheckIntervalId","pipelineLogIntervalId","enterInteractiveModePending","pipelineLogPromise","isPipelineRunningPromise","maxRetriesForPipelineLog","currentRetryForPipelineLog","hideAutoLayoutLoadingTimeout","hideAutoLayoutLoading","peekLinkObject","saveFacetIntervalId","dashboardCreateLoading","browseStatus","createSessionDialogOpened","snackbarVariant","iFrameURL","iFrameLoadingDone","clearIframeLoader","browseURLLoading","pipelineLoaded","editRunFlowRunning","drawerOpened","scheduleOpened","editNodeModalOpened","editArrowModalOpened","visualizationOpened","vizInitiated","vizLoading","vizFacetId","vizFacetParentId","vizFacetSourceId","vizFacetDestinationId","vizElements","createNewDatasetDialogOpened","newlyAddedDatasetFileName","createdAt","selectedNode","selectedArrow","selectedArrowArgumentTypes","selectedNodeName","loadingDone","loadingLogs","columnNames","isDashView","pipelineSpecsLoaded","tableSort","zoomScale","onRunClick","validateDiagram","checkIsPipelineRunning","getPipelineLogs","handleAutoSaveFacet","selectedFacetParentId","saveFacetRes","closeVisulaize","finishBrowseFacetRes","finishBrowseArrowErr","_facet","_fac","finishBrowseArrowRes","handleSubmitFacetName","closePeekArrow","minmaxPeekArrow","minmax","handleMinimizeVizElement","vizID","newMinVizElement","vizFacet","handleMinimizeVisualization","vizEle","minVizElementID","vizEleDataKey","minVizElement","removeVizElement","filteredVizElementsArray","vizEleKey","_visualizeMinimizedTab","openVizElement","visualizationElementRender","interactiveFrame","vElementKey","minimized","inFocus","handleGoBack","peekElementRender","sortPeek","peekTable","overflow","urlParamFlowId","facetObject","fId","addNode","addNodesAndArrows","getModels","m","editNode","showEditor","deleteNode","deleteNodeCommand","visualize","_visualize","selectionChanged","_selectionChangedEventHandler","deleteLink","deleteLinkCommand","editLink","_editLink","browseLink","_browseLink","peek","_peekArrow","linksUpdated","isCreated","targetPortChanged","addArrowCommand","entity","pipeline_arguments","pipelineSpecsResponse","handlePipelineLoadError","empty","showStatus","handleFlowDiagramModeChanged","browseLinkObjectNode","targetFacetId","linkFacetsInfo","linkVizID","browseArrowRes","browseArrowURL","browseArrowErr","enterSessionRes","enterSessionErr","getSelectedEntities","selectedModel","getParent","setSelected","sourceFacet","arrowArgumentTypes1","getComponentArrowArguments","targetFacet","arrowArgumentTypes2","argumentTypes","toggleUpdateArrowModal","matchedComponent","facet_arguments","sourceOrTarget","out_arrow_arguments","in_arrow_arguments","removeLink","matchedArrows","arrowArguments","find","child","otherFacets","clearPort","_deleteLink","addCommand","existingArguments","justRan","getPipelineLog","pipeline_log","loaderInitiated","iFrameLoaded","clearLoader","selectedMinNodeId","alreadyMinimized","alreadyMinVizEle","selectedFacet","browseFacetres","browseFaceterr","errenterSession","peekLinkObjectNode","peekArrowRes","peekArrowErr","links","ports","getPorts","inPort","outPort","out","inportLinks","outPortLinks","otherArrows","closeUpdateArrowAttributes","isAutoSave","setValidityOfNode","setUpdatedNodeName","closeUpdateNodeAttributes","toggleUpdateNodeModal","validateFacet","reduce","prevVal","currVal","getComponent","inArrowArgumentTypes","outArrowArgumentTypes","requiredParentFacets","facet_requirement","min_parent_count","requiredNumberOfParents","requiredNumberOfChildren","min_child_count","outArrows","inArrows","allArgumentsPresent","inArrowArguments","inArrowArgKey","inArrowValue","inArgDefinition","argOption","outArrowArguments","outArrowArgKey","requiredParentFacet","requiredParentFound","parentFacet","argName","argValue","updateArrowAttributes","attribitutes","isOutputDatasetCreated","updateNodeAttributes","newDatasetFileName","getColumnNames","facetCustomName","updateSchedule","closeScheduleDialog","updateZoomScale","zoomIn","xFactor","yFactor","zoomToFit","dropArea","getData","getRelativeMousePoint","addNodeCommand","onDragOver","disableRipple","redo","handleZoomIn","handleZoomOut","handleZoomToFit","rootCanvas","_addNode","_deleteNode","existingNode","existingArrows","forceUpdate","onScheduleClick","updateTitle","pipeArgName","pipeArgValue","updatePipelineArgument","setLocked","handleCreateNewDatasetDialogClose","handleCreateNewDatasetDialogSubmit","handleCreateNewDatasetDialogSubmitOverwrite","toggleCreateSessionDialog","handleSessionSnackbarClose","existingDatasetName","v","getCenterContent","getUpdateNodeComponent","getUpdateArrowComponent","getScheduleDialog","getVisualizeDialog","getCreateNewDatasetDialog","getStatusSnackbar","getInfoContent","matchingProjects","updatedDatasetId","updatedDashboardId","updatedFacets","matchingDataset","matchingDashboard","FlowDiagramContainer","deleteNodeAction","getSuggestions","SaveDatasetDialog","isSaveInProgress","dismissOverwriteAlert","setDatasetOverwrite","setNewDatasetName","newDatasetNameError","setNewDatasetNameError","newDatasetId","setNewDatasetId","overwriteSubmitInProgress","setOverwriteSubmitInProgress","handleOverwriteSubmit","handleSaveDatasetSubmit","DataprepDialog","hasError","columnNameSelected","uTypeSelected","uFormatSelected","isLoading","colNameError","friendlyLabel","selectedValCleaned","columnNames_Arr","colVal","colValBeautified","uniformizationPreferences","uniformizationType","textFormat","textFormatVal","optionName","prepareUniformizationOption","prepareOptionContent","DatasetComponent","loadingRetryCounter","isLoaded","metabaseSessionActive","datasetHeader","iframeKey","metabaseContent","dataPrepOptions","isDataprepDialogOpen","selectedDataprepName","statusState","statusTxt","statusDatetime","saveDialogOpen","goBackAnchor","updateOrSave","checkMetabaseSession","enterSessionManually","enterSessionNewID","initialLoading","handleReloadIFrame","setGoBackAnchorEl","handleGoBackPopupClose","handleGoBackPopupCloseAndExit","handleGoBackPopupSaveAndExit","saveDatasetRes","handleDataPrepDialogOpen","dataprepTitle","handleDataprepDialogSubmit","eventAt","cleanDatasetRes","handleDataprepDialogCancel","handleSaveDialogOpen","handleSaveDialogClose","handleSaveDataset","getDatasetsForProjectRes","handleDismissOverwriteDataset","handleSaveOverwriteDataset","urlParamDatasetId","findProjectId","findDatasetName","finishBrowseDataset","metabaseSessId","metabaseSessionId","findProjectName","metabaseUrl","metabaseUrlArr","metabaseUrlCleanedArr","metabaseUrlSlashPartArr","colNameObject","getDatasetHeader_Res","colName","getDatasetCleanFunctionsRes","uniformizationPreferencesArr","uniformization_types","uniformization_formats","errResponse","anchorEle","loadingFinished","centralPanel","metabaseIframe","gobackPopupContainer","DatasetContainer","DashViewComponent","dashId","dashLoaded","dashurl","checkSession","urlParamDashId","dashCentralPanel","datasetIndex","DashViewContainer","IkiApp","_matchData","IkiAppContainer","disptach","HomeComponent","gridRoot","Paper","flexGrow","SignIn","loadingInProgress","passwordValidation","emailValue","handleEmailChange","handleSignInFormSubmit","authenticate","loginSubmitErrorMsg","mask","mainContainer","CssBaseline","box","logoHolder","mainTitle","Divider","subtitleDivider","loginForm","submitError","loginCopyright","LoginContainer","authenticateRequestStartAction","LoginComponent","SignUp","timer","passwordValidation2","signupSubmitState","signupSubmitErrorMsg","signupSubmitErrorState","signupSubmitSuccessState","signupSubmitSuccessMsg","timeRemainingInSeconds","licenseDialog","licenseChecked","licenseErrorMsg","licenseError","handleSignUpFormSubmit","licenseIsChecked","setInterval","decrementTimeRemaining","clearInterval","handleLicenseDialog","dialogState","handleLicenseAccept","handleLicenseCheckbox","FPass","SignupComponent","fpassSubmitErrorState","fpassSubmitErrorMsg","fpassSubmitSuccessState","fpassSubmitSuccessMsg","fpassSubmitState","handleFPassFormSubmit","SignupConfirm","FPassComponent","codeValidation","codeValue","codeErrorMsg","confirmCodeSubmitErrorMsg","confirmCodeSubmitErrorState","getUserEmail","eParam","preparePageContent","handleSConfirmFormSubmit","handleCodeChange","codeIsValid","getURL","urlParam","URLSearchParams","userEmailConverted","encodeURIComponent","userEmailDecoded","decodeURIComponent","SignupConfirmComponent","ResetPassword","rpassSubmitState","ResetPasswordComponent","ProtectedRoute","loggedin","redirectTo","rest","render","AppComponent","winWidth","winHeight","internetSnackbarAppearance","internetSnackbarOpen","internetSnackbarDuration","internetSnackbarType","internetSnackbarMsg","showProgress","windowDimensions","innerWidth","innerHeight","interceptors","use","softLogout","checkForLoginCookie","removeEventListener","checkForLoginComplete","getMobileResizeMessage","App","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10080558.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-message\":\"ProjectPage_error-message__WOF1C\",\"icon-variant\":\"ProjectPage_icon-variant__2htd4\",\"snackbar\":\"ProjectPage_snackbar__3TZQp\",\"error-snackbar\":\"ProjectPage_error-snackbar__3bUdr\",\"main-container\":\"ProjectPage_main-container__34vB9\",\"back-to-dashboard\":\"ProjectPage_back-to-dashboard__1vCJd\",\"MuiIconButton-root\":\"ProjectPage_MuiIconButton-root__ycIRC\",\"page-header-title\":\"ProjectPage_page-header-title__qdE1v\",\"page-header-subtitle\":\"ProjectPage_page-header-subtitle__3fVso\",\"project-name\":\"ProjectPage_project-name__19vzw\",\"page-header\":\"ProjectPage_page-header__qHOmS\",\"page-header-buttons\":\"ProjectPage_page-header-buttons__3EMqR\",\"more-button\":\"ProjectPage_more-button__2iVy5\",\"cardbox\":\"ProjectPage_cardbox__3kTXv\",\"flow-box\":\"ProjectPage_flow-box__3am1i\",\"dataset\":\"ProjectPage_dataset__24w1G\",\"cardbox-header\":\"ProjectPage_cardbox-header__3FEM8\",\"flow-text\":\"ProjectPage_flow-text__1rtuv\",\"MuiSvgIcon-root\":\"ProjectPage_MuiSvgIcon-root__123V5\",\"flow-menu\":\"ProjectPage_flow-menu__1hgLs\",\"content\":\"ProjectPage_content__24-26\",\"MuiTypography-caption\":\"ProjectPage_MuiTypography-caption__3skT-\",\"flow-tab-container\":\"ProjectPage_flow-tab-container__2_zKB\",\"flows-control-wrap\":\"ProjectPage_flows-control-wrap__2Hgl2\",\"flows-filter-holder\":\"ProjectPage_flows-filter-holder__K6YBp\",\"project-filters-textfield\":\"ProjectPage_project-filters-textfield__1nXtR\",\"MuiFormControl-marginNormal\":\"ProjectPage_MuiFormControl-marginNormal__4nT3P\",\"flows-filter-box\":\"ProjectPage_flows-filter-box__39QXa\",\"show\":\"ProjectPage_show__3UcF0\",\"flows-pagination\":\"ProjectPage_flows-pagination__SRgSg\",\"filter-toggle-button\":\"ProjectPage_filter-toggle-button__3JTNQ\",\"selected\":\"ProjectPage_selected__q91Za\",\"uploading\":\"ProjectPage_uploading__XhKcr\",\"uploading-databox\":\"ProjectPage_uploading-databox__1_GvB\",\"linear-progress-val\":\"ProjectPage_linear-progress-val__1odsv\"};","const hostName = window && window.location && window.location.hostname;\r\n\r\nconst isDev =\r\n  hostName.indexOf('dev-ui.ikigailabs.io') > -1 ||\r\n  hostName.indexOf('localhost') > -1;\r\n\r\nexport const API_BASE = isDev\r\n  ? 'https://dev-pypr.ikigailabs.io/pypr'\r\n  : 'https://api.ikigailabs.io/pypr';\r\n\r\n  export const METABASE_URL = isDev\r\n  ? 'https://dev-ui.ikigailabs.io/metabase-login/navigate?url='\r\n  : 'https://beta.ikigailabs.io/metabase-login/navigate?url=';\r\n","import { AnyAction } from 'redux';\r\nimport { API_BASE } from '../constants';\r\nimport axios from 'axios';\r\n\r\nexport const actionIds = {\r\n  CHECK_FOR_LOGIN_COOKIE_START: 'Check for login cookie start',\r\n  CHECK_FOR_LOGIN_COOKIE_COMPLETE: 'Check for login cookie complete',\r\n  CHECK_FOR_LOGIN_COOKIE_FAIL: 'Check for login cookie fail',\r\n\r\n  AUTHENTICATE: 'Authenticate',\r\n  AUTHENTICATE_COMPLETE: 'Authentication complete',\r\n\r\n  LOGOUT: 'logout',\r\n\r\n  ADD_FLOW: 'Adding a flow',\r\n  ADD_FLOW_COMPLETE: 'Adding a flow complete',\r\n  DELETE_FLOW: 'delete a flow',\r\n  DELETE_FLOW_COMPLETE: 'Deleting a flow complete',\r\n  RESTORE_FLOW: 'restore a flow',\r\n  RESTORE_FLOW_COMPLETE: 'restore a flow complete',\r\n  RENAME_FLOW: 'Rename a flow',\r\n  RENAME_FLOW_COMPLETE: 'Rename a flow complete',\r\n  GET_FLOWS_REQUEST_START: 'Get flows',\r\n  GET_FLOWS_REQUEST_COMPLETE: 'Get flows request complete',\r\n  GET_FLOWS_REQUEST_FAIL: 'Get flows request fail',\r\n  DELETE_NODE: 'Delete node',\r\n  SEND_APP_DATA_REQUEST_START: 'Sending app data',\r\n  SEND_APP_DATA_REQUEST_COMPLETE: 'Sending app data complete',\r\n  SAVE_FLOWS_REQUEST_START: 'Saving flows',\r\n  SAVE_FLOWS_REQUEST_COMPLETE: 'Saving flows complete',\r\n  UPDATE_FLOW_DATA_START: 'Update flow data start',\r\n  UPDATE_FLOW_DATA_COMPLETE: 'Update flow data complete',\r\n  GET_FACET_DOC_START: 'Get facet doc start',\r\n  GET_FACET_DOC_COMPLETE: 'Get facet doc complete',\r\n  GET_FACET_DOC_FAIL: 'Get facet doc fail',\r\n\r\n  GET_PIPELINE_RUNNING_STATUS_START: 'Get pipeline running status start',\r\n  GET_PIPELINE_RUNNING_STATUS_COMPLETE: 'Get pipeline running status complete',\r\n  GET_PIPELINE_RUNNING_STATUS_FAIL: 'Get pipeline running status fail',\r\n  GET_PIPELINE_LOGS_START: 'Get pipeline logs start',\r\n  GET_PIPELINE_LOGS_COMPLETE: 'Get pipeline logs complete',\r\n  GET_PIPELINE_LOGS_FAIL: 'Get pipeline logs fail',\r\n\r\n  GET_PROJECTS_REQUEST_START: 'Get projects request start',\r\n  GET_PROJECTS_REQUEST_COMPLETE: 'Get projects request complete',\r\n  GET_PROJECTS_REQUREST_FAIL: 'Get projects request fail',\r\n\r\n  CREATE_PROJECT_REQUEST_START: 'Create project request start',\r\n  CREATE_PROJECT_REQUEST_COMPLETE: 'Create project request complete',\r\n  CREATE_PROJECT_REQUEST_FAIL: 'Create project request fail',\r\n\r\n  DUPLICATE_PROJECT_REQUEST_START: 'Duplicate project request start',\r\n  DUPLICATE_PROJECT_REQUEST_COMPLETE: 'Duplicate project request complete',\r\n  DUPLICATE_PROJECT_REQUEST_FAIL: 'Duplicate project request fail',\r\n\r\n  DELETE_PROJECT_REQUEST_START: 'Delete project request start',\r\n  DELETE_PROJECT_REQUEST_COMPLETE: 'Delete project request complete',\r\n  DELETE_PROJECT_REQUEST_FAIL: 'Delete project request fail',\r\n\r\n  RENAME_PROJECT_REQUEST_START: 'Rename project request start',\r\n  RENAME_PROJECT_REQUEST_COMPLETE: 'Rename project request complete',\r\n  RENAME_PROJECT_REQUEST_FAIL: 'Rename project request fail',\r\n\r\n  SHARE_PROJECT_REQUEST_START: 'Share project request start',\r\n  SHARE_PROJECT_REQUEST_COMPLETE: 'Share project request complete',\r\n  SHARE_PROJECT_REQUEST_FAIL: 'Share project request fail',\r\n\r\n  CREATE_DATASET_REQUEST_START: 'Create dataset request start',\r\n  CREATE_DATASET_REQUEST_COMPLETE: 'Create dataset request complete',\r\n  CREATE_DATASET_REQUEST_FAIL: 'Create dataset request fail',\r\n\r\n  UPLOAD_DATASET_REQUEST_START: 'Upload dataset requeest start',\r\n  UPLOAD_DATASET_REQUEST_COMPELTE: 'Upload dataset request complete',\r\n  UPLOAD_DATASET_REQUEST_FAIL: 'Upload dataset request fail',\r\n\r\n  GET_DATASETS_REQUEST_START: 'Get datasets request start',\r\n  GET_DATASETS_REQUEST_COMPLETE: 'Get datasets request complete',\r\n  GET_DATASETS_REQUEST_FAIL: 'Get datasets request fail',\r\n\r\n  DELETE_DATASET_REQUEST_START: 'delete dataset request start',\r\n  DELETE_DATASET_REQUEST_COMPLETE: 'delete dataset request complete',\r\n  DELETE_DATASET_REQUEST_FAIL: 'delete dataset request fail',\r\n\r\n  EDIT_DATASET_REQUEST_START: 'edit dataset request start',\r\n  EDIT_DATASET_REQUEST_COMPLETE: 'edit dataset request complete',\r\n  EDIT_DATASET_REQUEST_PROGRESS: 'upload dataset request progress updated',\r\n  EDIT_DATASET_REQUEST_FAIL: 'edit dataset request fail',\r\n\r\n  LOGIN_METABASE_SESSION_START: 'Login to Metabase request start',\r\n  LOGIN_METABASE_SESSION_COMPLETE: 'Login to Metabase request complete',\r\n  LOGIN_METABASE_SESSION_FAIL: 'Login to Metabase request fail',\r\n\r\n  SOFT_LOGOUT: 'Soft logout',\r\n  RESET_FLOW_STATE: 'Reset flow state',\r\n  RESET_USER_STATE: 'Reset user state',\r\n\r\n  GET_SUGGESTIONS_START:'start get suggestions',\r\n  GET_SUGGESTIONS_COMPLETE:'completed action get suggestions',\r\n  GET_SUGGESTIONS_FAIL:'failed action get suggestions',\r\n  \r\n  CREATE_DASHBOARD_REQUEST_START: 'Create dashboard request start',\r\n  CREATE_DASHBOARD_REQUEST_COMPLETE: 'Create dashboard request complete',\r\n  CREATE_DASHBOARD_REQUEST_FAIL: 'Create dashboard request fail',\r\n\r\n  GET_DASHBOARDS_REQUEST_START: 'Get dashboards request start',\r\n  GET_DASHBOARDS_REQUEST_COMPLETE: 'Get dashboards request complete',\r\n  GET_DASHBOARDS_REQUEST_FAIL: 'Get dashboards request fail',\r\n  \r\n  EDIT_DASHBOARD_REQUEST_START: 'edit dashboard request start',\r\n  EDIT_DASHBOARD_REQUEST_COMPLETE: 'edit dashboard request complete',\r\n  EDIT_DASHBOARD_REQUEST_FAIL: 'edit dashboard request fail',\r\n\r\n  CREATE_DASHBOARD_UPLOAD_REQUEST_START: 'upload dashboard start',\r\n  CREATE_DASHBOARD_UPLOAD_REQUEST_COMPLETE: 'upload dashboard complete',\r\n  CREATE_DASHBOARD_UPLOAD_REQUEST_FAIL: 'upload dashboard fail',\r\n\r\n  UPLOAD_DASHBOARD_REQUEST_START:'edit upload dashboard start',\r\n  UPLOAD_DASHBOARD_REQUEST_COMPLETE:'edit upload dashboard complete',\r\n  UPLOAD_DASHBOARD_REQUEST_FAIL:'edit upload dashboard fail',\r\n\r\n  DELETE_DASHBOARD_REQUEST_START: 'delete dashboard request start',\r\n  DELETE_DASHBOARD_REQUEST_COMPLETE: 'delete dashboard request complete',\r\n  DELETE_DASHBOARD_REQUEST_FAIL: 'delete dashboard request fail',\r\n\r\n  HANDLE_PROJECT_RETURN: 'Handle project return',\r\n\r\n  HANDLE_FILL_SESSION: 'Handle fill session',\r\n  HANDLE_CLEAN_SESSION: 'Handle clean session',\r\n};\r\n\r\nexport interface BaseAction extends AnyAction {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nexport const _axios = axios.create({\r\n  baseURL: API_BASE,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    withCredentials: true\r\n  }\r\n});\r\n","import { BaseAction, actionIds } from '../common';\r\n\r\nexport const checkForLoginCookieActionStart = (): BaseAction => ({\r\n  type: actionIds.CHECK_FOR_LOGIN_COOKIE_START,\r\n  payload: null\r\n});\r\n\r\nexport const checkForLoginCookieActionComplete = (token: any): BaseAction => ({\r\n  type: actionIds.CHECK_FOR_LOGIN_COOKIE_COMPLETE,\r\n  payload: token\r\n});\r\n\r\nexport const checkForLoginCookieActionFail = (): BaseAction => ({\r\n  type: actionIds.CHECK_FOR_LOGIN_COOKIE_FAIL,\r\n  payload: null\r\n});\r\n\r\nexport const logoutAction = (): BaseAction => ({\r\n  type: actionIds.LOGOUT,\r\n  payload: null\r\n});\r\n\r\nexport const authenticateRequestStartAction = (\r\n  email: string,\r\n  password: string\r\n): BaseAction => ({\r\n  type: actionIds.AUTHENTICATE,\r\n  payload: { email, password }\r\n});\r\n\r\nexport const authenticateRequestCompleteAction = (\r\n  loginResponse: object\r\n): BaseAction => ({\r\n  type: actionIds.AUTHENTICATE_COMPLETE,\r\n  payload: loginResponse\r\n});\r\n\r\nexport const deleteNodeAction = (nodeId: string): BaseAction => ({\r\n  type: actionIds.DELETE_NODE,\r\n  payload: nodeId\r\n});\r\n\r\nexport const sendAppDataAction = (nodeData: object): BaseAction => ({\r\n  type: actionIds.SEND_APP_DATA_REQUEST_START,\r\n  payload: nodeData\r\n});\r\n\r\nexport const sendAppDataCompleteAction = (response: object): BaseAction => ({\r\n  type: actionIds.SEND_APP_DATA_REQUEST_COMPLETE,\r\n  payload: response\r\n});\r\n\r\nexport const addFlowAction = (flowObj: any): BaseAction => ({\r\n  type: actionIds.ADD_FLOW,\r\n  payload: flowObj\r\n});\r\n\r\nexport const addFlowActionComplete = (id: string): BaseAction => ({\r\n  type: actionIds.ADD_FLOW_COMPLETE,\r\n  payload: id\r\n});\r\n\r\nexport const deleteFlowAction = (flowObj: any): BaseAction => ({\r\n  type: actionIds.DELETE_FLOW,\r\n  payload: flowObj\r\n});\r\n\r\nexport const deleteFlowActionComplete = (flowObj: any): BaseAction => ({\r\n  type: actionIds.DELETE_FLOW_COMPLETE,\r\n  payload: flowObj\r\n});\r\n\r\nexport const restoreFlowAction = (id: string): BaseAction => ({\r\n  type: actionIds.RESTORE_FLOW,\r\n  payload: id\r\n});\r\n\r\nexport const restoreFlowActionComplete = (id: string): BaseAction => ({\r\n  type: actionIds.RESTORE_FLOW_COMPLETE,\r\n  payload: id\r\n});\r\n\r\nexport const renameFlowAction = (id: string, name: string): BaseAction => ({\r\n  type: actionIds.RENAME_FLOW,\r\n  payload: { id: id, name: name }\r\n});\r\n\r\nexport const getFlowsActionStart = (projectId: string): BaseAction => ({\r\n  type: actionIds.GET_FLOWS_REQUEST_START,\r\n  payload: projectId\r\n});\r\n\r\nexport const getFlowsActionComplete = (flows: any): BaseAction => ({\r\n  type: actionIds.GET_FLOWS_REQUEST_COMPLETE,\r\n  payload: flows\r\n});\r\n\r\nexport const getFlowsActionFail = (response: any): BaseAction => ({\r\n  type: actionIds.GET_FLOWS_REQUEST_FAIL,\r\n  payload: response\r\n});\r\n\r\nexport const saveFlowsActionStart = (pipelineData: any): BaseAction => ({\r\n  type: actionIds.SAVE_FLOWS_REQUEST_START,\r\n  payload: pipelineData\r\n});\r\n\r\nexport const saveFlowsActionComplete = (response: any): BaseAction => ({\r\n  type: actionIds.SAVE_FLOWS_REQUEST_COMPLETE,\r\n  payload: response\r\n});\r\n\r\nexport const updateFlowDataActionStart = (nodeData: any): BaseAction => ({\r\n  type: actionIds.UPDATE_FLOW_DATA_START,\r\n  payload: nodeData\r\n});\r\n\r\nexport const updateFlowDataActionComplete = (nodeData: any): BaseAction => ({\r\n  type: actionIds.UPDATE_FLOW_DATA_COMPLETE,\r\n  payload: nodeData\r\n});\r\n\r\nexport const getFacetDocActionStart = (): BaseAction => ({\r\n  type: actionIds.GET_FACET_DOC_START,\r\n  payload: null\r\n});\r\n\r\nexport const getFacetDocActionComplete = (data: any): BaseAction => ({\r\n  type: actionIds.GET_FACET_DOC_COMPLETE,\r\n  payload: data\r\n});\r\n\r\nexport const getFacetDocActionFail = (reason: any): BaseAction => ({\r\n  type: actionIds.GET_FACET_DOC_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const getProjectsActionStart = (): BaseAction => ({\r\n  type: actionIds.GET_PROJECTS_REQUEST_START,\r\n  payload: null\r\n});\r\n\r\nexport const getProjectsActionComplete = (projects: any): BaseAction => ({\r\n  type: actionIds.GET_PROJECTS_REQUEST_COMPLETE,\r\n  payload: projects\r\n});\r\n\r\nexport const getProjectsActionFail = (reason: any): BaseAction => ({\r\n  type: actionIds.GET_PROJECTS_REQUREST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const createProjectActionStart = (name: string): BaseAction => ({\r\n  type: actionIds.CREATE_PROJECT_REQUEST_START,\r\n  payload: name\r\n});\r\n\r\nexport const createProjectActionComplete = (project: any): BaseAction => ({\r\n  type: actionIds.CREATE_PROJECT_REQUEST_COMPLETE,\r\n  payload: project\r\n});\r\n\r\nexport const createProjectActionFail = (reason: any): BaseAction => ({\r\n  type: actionIds.CREATE_PROJECT_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const duplicateProjectActionStart = (projectId: string, name: string, targetUser: string): BaseAction => ({\r\n  type: actionIds.DUPLICATE_PROJECT_REQUEST_START,\r\n  payload: { projectId, name, targetUser }\r\n});\r\n\r\nexport const duplicateProjectActionComplete = (project: any): BaseAction => ({\r\n  type: actionIds.DUPLICATE_PROJECT_REQUEST_COMPLETE,\r\n  payload: project\r\n});\r\n\r\nexport const duplicateProjectActionFail = (reason: any): BaseAction => ({\r\n  type: actionIds.DUPLICATE_PROJECT_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const deleteProjectActionStart = (projectId: string): BaseAction => ({\r\n  type: actionIds.DELETE_PROJECT_REQUEST_START,\r\n  payload: projectId\r\n});\r\n\r\nexport const deleteProjectActionComplete = (projectId: string): BaseAction => ({\r\n  type: actionIds.DELETE_PROJECT_REQUEST_COMPLETE,\r\n  payload: projectId\r\n});\r\n\r\nexport const deleteProjectActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.DELETE_PROJECT_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const renameProjectActionStart = (\r\n  projectId: string,\r\n  newName: string\r\n): BaseAction => ({\r\n  type: actionIds.RENAME_PROJECT_REQUEST_START,\r\n  payload: { projectId, newName }\r\n});\r\n\r\nexport const renameProjectActionComplete = (\r\n  projectId: string,\r\n  newName: string\r\n): BaseAction => ({\r\n  type: actionIds.RENAME_PROJECT_REQUEST_COMPLETE,\r\n  payload: { projectId, newName }\r\n});\r\n\r\nexport const renameProjectActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.RENAME_PROJECT_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const shareProjectActionStart = (\r\n  projectId: string,\r\n  targetUser: string\r\n): BaseAction => ({\r\n  type: actionIds.SHARE_PROJECT_REQUEST_START,\r\n  payload: { projectId, targetUser }\r\n});\r\n\r\nexport const shareProjectActionComplete = (\r\n  projectId: string,\r\n  targetUser: string\r\n): BaseAction => ({\r\n  type: actionIds.SHARE_PROJECT_REQUEST_COMPLETE,\r\n  payload: { projectId, targetUser }\r\n});\r\n\r\nexport const shareProjectActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.SHARE_PROJECT_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const softLogoutAction = (): BaseAction => ({\r\n  type: actionIds.SOFT_LOGOUT,\r\n  payload: null\r\n});\r\n\r\nexport const resetUserStateAction = (): BaseAction => ({\r\n  type: actionIds.RESET_USER_STATE,\r\n  payload: null\r\n});\r\n\r\nexport const resetFlowStateAction = (): BaseAction => ({\r\n  type: actionIds.RESET_FLOW_STATE,\r\n  payload: null\r\n});\r\n\r\nexport const getDatasetActionStart = (projectId: string): BaseAction => ({\r\n  type: actionIds.GET_DATASETS_REQUEST_START,\r\n  payload: projectId\r\n});\r\n\r\nexport const getDatasetActionComplete = (payload: any): BaseAction => ({\r\n  type: actionIds.GET_DATASETS_REQUEST_COMPLETE,\r\n  payload: payload\r\n});\r\n\r\nexport const getDatasetActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.GET_DATASETS_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const getDashboardActionStart = (project_id: string): BaseAction => ({\r\n  type: actionIds.GET_DASHBOARDS_REQUEST_START,\r\n  payload: project_id\r\n});\r\n\r\nexport const getDashboardActionComplete = (payload: any): BaseAction => ({\r\n  type: actionIds.GET_DASHBOARDS_REQUEST_COMPLETE,\r\n  payload: payload\r\n});\r\n\r\nexport const getDashboardActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.GET_DASHBOARDS_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const createDatasetActionStart = (\r\n  projectId: string,\r\n  datasetName: string,\r\n  file: File\r\n): BaseAction => ({\r\n  type: actionIds.CREATE_DATASET_REQUEST_START,\r\n  payload: { datasetName, projectId, file }\r\n});\r\n\r\nexport const createDashboardForUploadActionStart = (\r\n  project_id: string,\r\n  dataset_id: any,\r\n  name: string,\r\n  file: File\r\n): BaseAction => ({\r\n  type: actionIds.CREATE_DASHBOARD_UPLOAD_REQUEST_START,\r\n  payload: { name, project_id,dataset_id, file }\r\n});\r\n\r\nexport const uploadDashboardActionStart = (\r\n  file: File,\r\n  dashboardId: string\r\n): BaseAction => ({\r\n  type: actionIds.UPLOAD_DASHBOARD_REQUEST_START,\r\n  payload: { dashboardId, file }\r\n});\r\n\r\nexport const createDatasetActionComplete = (datasetId: string): BaseAction => ({\r\n  type: actionIds.CREATE_DATASET_REQUEST_COMPLETE,\r\n  payload: datasetId\r\n});\r\n\r\nexport const creatDatasetActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.CREATE_DATASET_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const createDashboardActionStart = (\r\n  project_id: string,\r\n  dataset_id: string,\r\n  name: string,\r\n): BaseAction => ({\r\n  type: actionIds.CREATE_DASHBOARD_REQUEST_START,\r\n  payload: { project_id, dataset_id, name }\r\n});\r\n\r\nexport const createDashboardActionComplete = (dashboardId: string): BaseAction => ({\r\n  type: actionIds.CREATE_DASHBOARD_REQUEST_COMPLETE,\r\n  payload: dashboardId\r\n});\r\n\r\nexport const creatDashboardActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.CREATE_DASHBOARD_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const uploadDashboardActionComplete = (dashboardId: string): BaseAction => ({\r\n  type: actionIds.UPLOAD_DASHBOARD_REQUEST_COMPLETE,\r\n  payload: dashboardId\r\n});\r\n\r\nexport const uploadDashboardActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.UPLOAD_DASHBOARD_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\n\r\nexport const deleteDatasetActionStart = (datasetId: string): BaseAction => ({\r\n  type: actionIds.DELETE_DATASET_REQUEST_START,\r\n  payload: datasetId\r\n});\r\n\r\nexport const deleteDatasetActionComplete = (datasetId: string): BaseAction => ({\r\n  type: actionIds.DELETE_DATASET_REQUEST_COMPLETE,\r\n  payload: datasetId\r\n});\r\n\r\nexport const deleteDatasetActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.DELETE_DATASET_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const deleteDashboardActionStart = (dashboardId: string): BaseAction => ({\r\n  type: actionIds.DELETE_DASHBOARD_REQUEST_START,\r\n  payload: dashboardId\r\n});\r\n\r\nexport const deleteDashboardActionComplete = (dashboardId: string): BaseAction => ({\r\n  type: actionIds.DELETE_DASHBOARD_REQUEST_COMPLETE,\r\n  payload: dashboardId\r\n});\r\n\r\nexport const deleteDashboardActionFail = (reason: string): BaseAction => ({\r\n  type: actionIds.DELETE_DASHBOARD_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const editDatasetActionStart = (\r\n  projectId: string,\r\n  datasetId: string,\r\n  datasetName: string,\r\n  file: File\r\n) => ({\r\n  type: actionIds.EDIT_DATASET_REQUEST_START,\r\n  payload: { projectId, datasetId, datasetName, file }\r\n});\r\n\r\nexport const editDatasetActionComplete = (datasetId: string) => ({\r\n  type: actionIds.EDIT_DATASET_REQUEST_COMPLETE,\r\n  payload: datasetId\r\n});\r\n\r\nexport const uploadDatasetProgress = (percent: number,datasetId:string,datasetName:string,status:string,retry:any,cancel:any): BaseAction => ({\r\n  type: actionIds.EDIT_DATASET_REQUEST_PROGRESS,\r\n  payload: {percent,datasetId,datasetName,status,retry,cancel}\r\n});\r\n\r\nexport const editDatasetActionFail = (reason: string) => ({\r\n  type: actionIds.EDIT_DATASET_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const editDashbarodActionStart = (\r\n  project_id: string,\r\n  dataset_id: any,\r\n  name:string,\r\n  dashboard_id:string,\r\n  file: File\r\n) => ({\r\n  type: actionIds.EDIT_DASHBOARD_REQUEST_START,\r\n  payload: { project_id, dataset_id, name, dashboard_id, file }\r\n});\r\n\r\nexport const editDashboardActionComplete = (dashboardId: string) => ({\r\n  type: actionIds.EDIT_DASHBOARD_REQUEST_COMPLETE,\r\n  payload: dashboardId\r\n});\r\n\r\nexport const editDashboardActionFail = (reason: string) => ({\r\n  type: actionIds.EDIT_DASHBOARD_REQUEST_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const loginMetabaseActionStart = (projectId: string): BaseAction => ({\r\n  type: actionIds.LOGIN_METABASE_SESSION_START,\r\n  payload: projectId\r\n});\r\n\r\nexport const loginMetabaseActionComplete = (sessionId: any): BaseAction => ({\r\n  type: actionIds.LOGIN_METABASE_SESSION_COMPLETE,\r\n  payload: sessionId\r\n});\r\n\r\nexport const loginMetabaseActionFail = (reason: any): BaseAction => ({\r\n  type: actionIds.LOGIN_METABASE_SESSION_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const getSuggestionsActionStart = (\r\n  data:any\r\n) => ({\r\n  type: actionIds.GET_SUGGESTIONS_START,\r\n  payload: { data }\r\n});\r\n\r\nexport const getSuggestionsActionComplete = (suggestions: any) => ({\r\n  type: actionIds.GET_SUGGESTIONS_COMPLETE,\r\n  payload: suggestions\r\n});\r\n\r\nexport const getSuggestionsActionFail = (reason: string) => ({\r\n  type: actionIds.GET_SUGGESTIONS_FAIL,\r\n  payload: reason\r\n});\r\n\r\nexport const handleProjectReturn = (sourceFrom: string) => ({\r\n  type: actionIds.HANDLE_PROJECT_RETURN,\r\n  payload: sourceFrom\r\n});\r\n\r\nexport const handleCleanSession = () => ({\r\n  type: actionIds.HANDLE_CLEAN_SESSION,\r\n  payload: null\r\n});\r\n\r\nexport const handleFillSession = (projectSess: string, projectId: string): BaseAction => ({\r\n  type: actionIds.HANDLE_FILL_SESSION,\r\n  payload: { projectSess, projectId }\r\n});\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Tooltip, Tabs, Tab } from '@material-ui/core';\r\nimport ReactMarkdown from 'react-markdown/with-html';\r\n\r\nexport default function HelpPopover(props: any) {\r\n  const { helpText } = props;\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [helperPopoverState, setHelperPopoverState] = useState(false);\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  const handleOnClose = (event: any) => {\r\n    //setHelperPopoverState(false);\r\n    //console.log(event.target.className);\r\n    let tabClicked: string = 'false';\r\n    if(event.target.className !== \"\"){\r\n      var targetElClassVal: string = event.target.className + \"\";\r\n      if(targetElClassVal === 'MuiTab-wrapper' || targetElClassVal === 'MuiTab-root'){\r\n        tabClicked = 'true';\r\n      }else{\r\n        var targetElClass = targetElClassVal.split(\" \");\r\n        targetElClass.map((classItem: any) => {\r\n          //console.log(\"el class: \" + classItem);\r\n          if(classItem === 'MuiTab-wrapper' || classItem === 'MuiTab-root'){\r\n            tabClicked = 'true';\r\n            //console.log(\"don't close popup\");\r\n          }\r\n          return ''\r\n        });\r\n      }\r\n    }\r\n    //console.log(\"tabClicked: \" + tabClicked);\r\n    if(tabClicked !== 'true'){\r\n      //console.log(\"close popup\");\r\n      setHelperPopoverState(false);\r\n    }else{\r\n      setHelperPopoverState(true);\r\n    }\r\n  };\r\n\r\n  const handleOnOpen = (event: any) => {\r\n    //alert(event.target);\r\n    //setHelperPopoverState(false);\r\n    setHelperPopoverState(true);\r\n  };\r\n\r\n  const getHelpText = (text: string) => {\r\n    // text =\r\n    //   '# Exported\\n' +\r\n    //   '> Exported facet outputs your processed data to your chosen ' +\r\n    //   'output dataset.\\n' +\r\n    //   '## How To Set Arguments\\n' +\r\n    //   '### Facet Arguments\\n' +\r\n    //   '> 1. **file_type** : Exported facet supports csv format.\\n' +\r\n    //   '> 2. **file_name** : Choose a name for your output file.\\n' +\r\n    //   '> 3. **dataset_name** : Choose a name for your output ' +\r\n    //   'dataset.\\n' +\r\n    //   '> (!) **overwrite** window pops up when you type in a ' +\r\n    //   'dataset name that already exists in your project, choose ' +\r\n    //   'yes to overwrite existing dataset.\\n' +\r\n    //   '\\n' +\r\n    //   'Example:\\n' +\r\n    //   'http://d18f1dd5shmawi.cloudfront.net/images/image10.png';\r\n    //var\r\n    //return <ReactMarkdown source={text} escapeHtml={false}></ReactMarkdown>;\r\n    var helpTexts_clearBrackets2 = text.split(\"[\").join(\"\");\r\n    var helpTexts_clearBrackets3 = helpTexts_clearBrackets2.split(\"[\").join(\"\");\r\n    var helpTexts = helpTexts_clearBrackets3.split('Example:\\n');\r\n\r\n    if (text.length === 1) {\r\n      return (\r\n        <Fragment>\r\n          <ReactMarkdown source={helpTexts[0]} escapeHtml={false}></ReactMarkdown>\r\n        </Fragment>\r\n      );\r\n    } else{\r\n      return (\r\n        <div className=\"help-dialog-popup\">\r\n          <Tabs\r\n            value={tabIndex}\r\n            onChange={handleTabChange}\r\n            indicatorColor=\"primary\"\r\n            className=\"help-tabs\"\r\n          >\r\n            <Tab label=\"Info\" id=\"tab-0\"></Tab>\r\n            <Tab label=\"Example\" id=\"tab-1\"></Tab>\r\n          </Tabs>\r\n          <div hidden={tabIndex !== 0} className=\"info-block\">\r\n            <ReactMarkdown\r\n              source={helpTexts[0]}\r\n              escapeHtml={false}\r\n            ></ReactMarkdown>\r\n          </div>\r\n          <div hidden={tabIndex !== 1} className=\"info-example-block\">\r\n            <img src={helpTexts[1].trim()} alt=\"example\"></img>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      open={helperPopoverState}\r\n      arrow={true}\r\n      interactive\r\n      title={getHelpText(helpText)}\r\n      //title={helpText}\r\n      leaveDelay={500}\r\n      placement=\"right-end\"\r\n      className=\"tooltip-holder\"\r\n      onClose={handleOnClose}\r\n      onOpen={handleOnOpen}\r\n    >\r\n      <span className=\"form-help-icon\">?</span>\r\n    </Tooltip>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Box } from '@material-ui/core';\r\nimport styles from './Alert.module.scss';\r\n\r\nexport default class AlertMsg extends Component {\r\n    \r\n    render() {\r\n        const alertType = this.props.alertType;\r\n        const alertContent = this.props.alertContent;\r\n        const alertButtons = this.props.alertButtons;\r\n\r\n        return (\r\n            <Alert severity={alertType} className={styles.alert}>\r\n                <div className={styles.title}>{alertType}</div>\r\n                <Box className={styles.descr}>\r\n                    {alertContent}\r\n                </Box>\r\n                <Box className={styles.buttons}>\r\n                    {alertButtons}\r\n                </Box>\r\n            </Alert>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { \r\n  Button\r\n} from '@material-ui/core';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Button.module.scss';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Form Element -> Button Component based on MaterialUI but customized for Ikigai\r\n   * @param _label Label - string\r\n   * @param _variant Variant - string - e.g contained | outlined\r\n   * @param _color Color - string - e.g primary | secondary\r\n   * @param _type Button type - string - e.g submit | button\r\n   * @param _error Error message - string\r\n   * @param _disabled Is Button disabeld - boolean - true | false\r\n   * @param _fullWidth Is Button Full Width - boolean - true | false\r\n   * @param _loading Is Loading - boolean - true | false\r\n   * @param _startIcon MaterialUI Icon - component e.g. <Visibility />\r\n   * @param _endIcon MaterialUI Icon - component e.g. <Visibility />\r\n   */\r\nexport default class IkiButton extends Component {\r\n  render() {\r\n    const { \r\n      _label, \r\n      _variant, \r\n      _type, \r\n      _color,\r\n      _disabled, \r\n      _fullWidth,\r\n      _loading\r\n    } = this.props;\r\n    //const _endIcon = this.props._endIcon ? this.props._endIcon : '';\r\n    const _startIcon = this.props._startIcon ? this.props._startIcon : '';\r\n    const _onClick = this.props._onClick ? this.props._onClick : null;\r\n    const _isDanger = this.props._isDanger ? this.props._isDanger : false;\r\n    const _isWarning = this.props._isWarning ? this.props._isWarning : false;\r\n    //const _isAlternate = this.props._isAlternate ? this.props._isAlternate : false;\r\n    const _align = this.props._align ? this.props._align : 'center';\r\n    //console.log(\"IkiButton props: \", this.props, '_inputProps: ', _inputProp);\r\n    let color = '';\r\n    if(_color === 'warning') {\r\n      color = 'inherit';\r\n    }else{\r\n      color = _color;\r\n    }\r\n    var btnClass = cx({\r\n      button: true,\r\n      'left': _align === 'left',\r\n      'warning': _isWarning\r\n    });\r\n    var btnSpinnerClass = cx({\r\n      btnSpinner: true,\r\n      'on-error': _isDanger,\r\n      'alternate': _disabled\r\n    });\r\n    return(\r\n      <>\r\n        <Button\r\n          type={_type}\r\n          variant={_variant}\r\n          color={color}\r\n          fullWidth={_fullWidth}\r\n          disabled={_disabled}\r\n          className={btnClass}\r\n          //startIcon={_startIcon}\r\n          //endIcon={_endIcon}\r\n          onClick={\r\n            _onClick !== null ? (\r\n              this.props._onClick\r\n            ):(\r\n              () => {}\r\n            )\r\n          }\r\n        >\r\n          {_loading ? ( \r\n            <span className={btnSpinnerClass}></span>\r\n          ):(\r\n            _startIcon !== '' && (\r\n              _startIcon\r\n            )\r\n          )}\r\n          <span>{_label}</span>\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n//import classNames from 'classnames/bind';\r\nimport styles from './Divider.module.scss';\r\n//let cx = classNames.bind(styles);\r\n\r\nexport default class IkiDivider extends Component {\r\n  render() {\r\n    //const _size = this.props._size ? this.props._size : 'normal';\r\n    //const _color = this.props._color ? this.props._color : 'default';\r\n    const _text = this.props._text ? this.props._text : '';\r\n    return (\r\n      <div className={styles.textDivider}>\r\n        {_text !== '' && (\r\n          <span>{_text}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './ccounter.css';\r\n\r\nexport default class CharacterCounter extends Component {\r\n  render() {\r\n    const error = this.props.error;\r\n    const currentLength = this.props.currentLength;\r\n    const maxLength = this.props.maxLength;\r\n    return (\r\n      <div className={\"cCounter-holder \" + error}>\r\n          <span className=\"left\">{currentLength}</span>\r\n          <span className=\"middle\"> / </span>\r\n          <span className=\"right\">{maxLength}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import moment from 'moment';\r\n\r\n/**\r\n * Returns random string.\r\n */\r\n\r\nexport const getRandomString = function(): string {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 10) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 10)\r\n  );\r\n};\r\n\r\n/**\r\n * Returns current date\r\n */\r\n\r\nexport const getCurrentDate = function(): string {\r\n  return moment().format('DD/MM/YYYY, H:mm');\r\n};\r\n\r\n/**\r\n * Removes '_' between string and makes first letter of every word capital\r\n * @param label\r\n */\r\n\r\nexport const getFriendlyLabel = (label: string): string => {\r\n  return label\r\n    .split('_')\r\n    .map(\r\n      (labelWord: string) =>\r\n        `${labelWord[0].toUpperCase()}${labelWord.slice(1).toLowerCase()}`\r\n    )\r\n    .join(' ');\r\n};\r\n\r\nexport const cleanCodeString = (stringToClean: any) => {\r\n  var attrLowercase = stringToClean.toLowerCase();\r\n  var cleanedFrom_symbols = attrLowercase.replace(/_/g, \" \");\r\n  var uppercasedAttr = cleanedFrom_symbols.replace(/\\b\\w/g, (l:any) => l.toUpperCase());\r\n  return uppercasedAttr;\r\n};\r\n\r\nexport const getCodeString = (stringToFormat: any) => {\r\n  var strUpperCase = stringToFormat.toUpperCase();\r\n  var formatedString = strUpperCase.replace(/ /g, '_');\r\n  return formatedString;\r\n};\r\n\r\n/**\r\n * Capitalizes the first letter of the word\r\n * @param label string\r\n */\r\n\r\nexport const capitalizeLabel = (label: string): string => {\r\n  return `${label[0].toUpperCase()}${label.slice(1).toLowerCase()}`;\r\n};\r\n\r\n/**\r\n * Quick way to deep clone an object\r\n * @param obj Object\r\n */\r\n\r\nexport const cloneObject = (obj: any) => {\r\n  if (obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { \r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  IconButton,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport classNames from 'classnames/bind';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CharacterCounter from '../../characterCounter';\r\nimport styles from './Input.module.scss';\r\nimport { getFriendlyLabel } from '../../../util';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Form Element -> Input Component based on MaterialUI but customized for Ikigai\r\n   * @param _label Label - string\r\n   * @param _placeholder Placeholder - string\r\n   * @param _value Value - string\r\n   * @param _type Input type - string\r\n   * @param _error Error message - string\r\n   * @param _required Is Input Required - boolean - true | false\r\n   * @param _fullWidth Is Input Full Width - boolean - true | false\r\n   * @param _autoFocus Auto Focus - boolean - true | false\r\n   * @param _startIcon MaterialUI Icon - component e.g. <Visibility />\r\n   * @param _endIcon MaterialUI Icon - component e.g. <Visibility />\r\n   * @param _characterCounter Custom - string\r\n   * @param _size Size - string - small | medium (default)\r\n   * @param _margin Margin - string - dense | none | normal (default)\r\n   * @param _filterType Is Filter Type - boolean - true | false (default)\r\n   */\r\nexport default class IkiInput extends Component {\r\n  render() {\r\n    const { \r\n      _label, \r\n      _placeholder, \r\n      _value, \r\n      _type\r\n    } = this.props;\r\n    let _inputProp = {};\r\n    let _InputProp = {};\r\n    let _selectProp = {};\r\n    const _error = this.props._error ? this.props._error : '';\r\n    const _required = this.props._required ? this.props._required : false;\r\n    const _disabled = this.props._disabled ? this.props._disabled : false;\r\n    const _fullWidth = this.props._fullWidth ? this.props._fullWidth : false;\r\n    const _autoFocus = this.props._autoFocus ? this.props._autoFocus : false;\r\n    const _size = this.props._size ? this.props._size : 'medium';\r\n    const _margin = this.props._margin ? this.props._margin : 'normal';\r\n    const _filterType = this.props._filterType ? this.props._filterType : false;\r\n    const _endIcon = this.props._endIcon ? this.props._endIcon : '';\r\n    const _startIcon = this.props._startIcon ? this.props._startIcon : '';\r\n    const _characterCounter = this.props._characterCounter ? this.props._characterCounter : '';\r\n    const _isSelect = this.props._isSelect ? this.props._isSelect : false;\r\n    const _selectOptions = this.props._selectOptions ? this.props._selectOptions : null;\r\n    const _selectOptionsKeyForVal = this.props._selectOptionsKeyForVal ? this.props._selectOptionsKeyForVal : '';\r\n    const _selectOptionsKeyForTxt = this.props._selectOptionsKeyForTxt ? this.props._selectOptionsKeyForTxt : '';\r\n    const _multiline = this.props._multiline ? this.props._multiline : false;\r\n    const _rows = this.props._rows ? this.props._rows : 1;\r\n    //let _customFCkey = (Math.floor(Math.random() * 1001)).toString();\r\n    let errorMsg = \"\";\r\n    if(_error !== ''){\r\n      errorMsg = _error;\r\n    }else{\r\n      if(_required && _value === \"\") {\r\n        errorMsg = 'Required';\r\n      }\r\n    }\r\n    if(_characterCounter !== ''){\r\n      //_inputProp.maxLength = _characterCounter;\r\n      _inputProp = { \r\n        maxLength: _characterCounter \r\n      };\r\n    }\r\n    if(_startIcon !== ''){\r\n      _InputProp.startAdornment = this.constructStartIconProps();\r\n    }\r\n    if(_endIcon !== ''){\r\n      _InputProp.endAdornment = this.constructEndIconProps();\r\n    }\r\n    if(_isSelect !== ''){\r\n      _selectProp.value = _value;\r\n    }\r\n    //console.log(\"IkiInput props: \", this.props);\r\n    var inputHolderClass = cx({\r\n      inputHolder: true,\r\n      'has-counter': _characterCounter !== ''\r\n    });\r\n    var inputClass = cx({\r\n      input: true,\r\n      'has-startIcon': _startIcon !== '',\r\n      'of-filter-type': _filterType\r\n    });\r\n    return(\r\n      <>\r\n        <FormControl\r\n          //key={'ikiinput-fc-' + _customFCkey} \r\n          fullWidth={_fullWidth}\r\n          error={_error !== ''}\r\n          className={inputHolderClass}\r\n          disabled={_disabled}\r\n          //margin={_margin}\r\n        >\r\n          <TextField\r\n            disabled={_disabled}\r\n            className={inputClass}\r\n            margin={_margin}\r\n            variant=\"outlined\"\r\n            fullWidth={_fullWidth}\r\n            label={_label}\r\n            placeholder={_placeholder}\r\n            type={_type}\r\n            select={_isSelect}\r\n            autoComplete=\"new-username\"\r\n            value={_value}\r\n            onChange={this.props._onChange}\r\n            required={_required}\r\n            autoFocus={_autoFocus}\r\n            error={_error !== ''}\r\n            size={_size}\r\n            multiline={_multiline}\r\n            rows={_rows}\r\n            inputProps={\r\n              _inputProp\r\n            }\r\n            InputProps={\r\n              _InputProp\r\n            }\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            SelectProps={\r\n              _selectProp\r\n            }\r\n          >\r\n            {_isSelect && (\r\n              _selectOptions.map(option => (\r\n                _selectOptionsKeyForVal === '' && _selectOptionsKeyForTxt === '' ? (\r\n                  <MenuItem key={option.toString()} value={option}>\r\n                    {getFriendlyLabel(option)}\r\n                  </MenuItem>\r\n                ):(\r\n                  <MenuItem key={option[_selectOptionsKeyForTxt]} value={option[_selectOptionsKeyForVal]}>\r\n                    {option[_selectOptionsKeyForTxt]}\r\n                  </MenuItem>\r\n                )\r\n              ))\r\n            )}\r\n          </TextField>\r\n          {_characterCounter !== '' && (\r\n            <CharacterCounter\r\n              currentLength={_value ? _value.length : 0}\r\n              maxLength={_characterCounter}\r\n              error={_error !== ''}\r\n            />\r\n          )}\r\n          {_error !== '' && (\r\n            <FormHelperText \r\n              className=\"input-error\" \r\n              error\r\n            >\r\n              <ErrorIcon />\r\n              <span>{errorMsg}</span>\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </>\r\n    );\r\n  }\r\n  constructStartIconProps = () => {\r\n    const _startIcon = this.props._startIcon ? this.props._startIcon : '';\r\n    if(_startIcon._withButton) {\r\n      return(\r\n        <InputAdornment \r\n          position={_startIcon._position}\r\n          className={styles.startIcon}\r\n        >\r\n          <IconButton\r\n            edge={_startIcon._edge}\r\n            onClick={_startIcon._onClick}\r\n            onMouseDown={event => {\r\n               event.preventDefault();\r\n            }}\r\n            size={_startIcon._size}\r\n          >\r\n            {_startIcon._icon}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      )\r\n    }else {\r\n      return(\r\n        <InputAdornment \r\n          position={_startIcon._position}\r\n          className={styles.startIcon}\r\n        >\r\n          {_startIcon._icon}\r\n        </InputAdornment>\r\n      )\r\n    }\r\n  }\r\n  constructEndIconProps = () => {\r\n    const _endIcon = this.props._endIcon ? this.props._endIcon : '';\r\n    if(_endIcon._withButton) {\r\n      return(\r\n          <InputAdornment \r\n            position={_endIcon._position}\r\n          >\r\n            <IconButton\r\n              edge={_endIcon._edge}\r\n              onClick={_endIcon._onClick}\r\n              onMouseDown={event => {\r\n                event.preventDefault();\r\n              }}\r\n              size={_endIcon._size}\r\n            >\r\n              {_endIcon._icon}\r\n            </IconButton>\r\n          </InputAdornment>\r\n      )\r\n    } else {\r\n      return(\r\n        <InputAdornment \r\n          position={_endIcon._position}\r\n        >\r\n          {_endIcon._icon}\r\n        </InputAdornment>\r\n      )\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { \r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  IconButton,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport classNames from 'classnames/bind';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport styles from './ChipInput.module.scss';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Form Element -> Input Component based on MaterialUI but customized for Ikigai\r\n   * @param _label Label - string\r\n   * @param _placeholder Placeholder - string\r\n   * @param _value Value - string\r\n   * @param _type Input type - string\r\n   * @param _error Error message - string\r\n   * @param _required Is Input Required - boolean - true | false\r\n   * @param _fullWidth Is Input Full Width - boolean - true | false\r\n   * @param _autoFocus Auto Focus - boolean - true | false\r\n   * @param _startIcon MaterialUI Icon - component e.g. <Visibility />\r\n   * @param _endIcon MaterialUI Icon - component e.g. <Visibility />\r\n   * @param _characterCounter Custom - string\r\n   * @param _size Size - string - small | medium (default)\r\n   * @param _margin Margin - string - dense | none | normal (default)\r\n   * @param _filterType Is Filter Type - boolean - true | false (default)\r\n   */\r\nexport default class IkiChipInput extends Component {\r\n  render() {\r\n    const { \r\n      _label, \r\n      _placeholder, \r\n      _value, \r\n      _type\r\n    } = this.props;\r\n    let _inputProp = {};\r\n    let _InputProp = {};\r\n    const _error = this.props._error ? this.props._error : '';\r\n    const _required = this.props._required ? this.props._required : false;\r\n    const _fullWidth = this.props._fullWidth ? this.props._fullWidth : false;\r\n    const _autoFocus = this.props._autoFocus ? this.props._autoFocus : false;\r\n    const _margin = this.props._margin ? this.props._margin : 'normal';\r\n    const _endIcon = this.props._endIcon ? this.props._endIcon : '';\r\n    const _startIcon = this.props._startIcon ? this.props._startIcon : '';\r\n    //let _customFCkey = (Math.floor(Math.random() * 1001)).toString();\r\n    let errorMsg = \"\";\r\n    if(_error !== ''){\r\n      errorMsg = _error;\r\n    }else{\r\n      if(_required && _value === \"\") {\r\n        errorMsg = 'Required';\r\n      }\r\n    }\r\n    if(_startIcon !== ''){\r\n      _InputProp.startAdornment = this.constructStartIconProps();\r\n    }\r\n    if(_endIcon !== ''){\r\n      _InputProp.endAdornment = this.constructEndIconProps();\r\n    }\r\n    //console.log(\"IkiInput props: \", this.props, '_inputProps: ', _inputProp);\r\n    var inputChipHolderClass = cx({\r\n      inputChipHolder: true\r\n    });\r\n    var inputChipClass = cx({\r\n      inputChip: true,\r\n      'has-startIcon': _startIcon !== ''\r\n    });\r\n    return(\r\n      <>\r\n        <FormControl\r\n          //key={'ikiinput-fc-' + _customFCkey} \r\n          fullWidth={_fullWidth}\r\n          error={_error !== ''}\r\n          className={inputChipHolderClass}\r\n          //margin={_margin}\r\n        >\r\n          <ChipInput\r\n            className={inputChipClass}\r\n            key={'chipinput-' + _label}\r\n            required={_required}\r\n            error={_error}\r\n            onAdd={(key, chip, label) => { this.props._addChip(key, chip, label) }}\r\n            onDelete={(key, deletedChip) => { this.props._deleteChip(key, deletedChip) }}\r\n            value={_value ? _value : []}\r\n            fullWidth\r\n            label={_label}\r\n            placeholder={_placeholder}\r\n            margin={_margin}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          {_error !== '' && (\r\n            <FormHelperText \r\n              className=\"input-error\" \r\n              error\r\n            >\r\n              <ErrorIcon />\r\n              <span>{errorMsg}</span>\r\n            </FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      </>\r\n    );\r\n  }\r\n  constructStartIconProps = () => {\r\n    const _startIcon = this.props._startIcon ? this.props._startIcon : '';\r\n    if(_startIcon._withButton) {\r\n      return(\r\n        <InputAdornment \r\n          position={_startIcon._position}\r\n          className={styles.startIcon}\r\n        >\r\n          <IconButton\r\n            edge={_startIcon._edge}\r\n            onClick={_startIcon._onClick}\r\n            onMouseDown={event => {\r\n               event.preventDefault();\r\n            }}\r\n            size={_startIcon._size}\r\n          >\r\n            {_startIcon._icon}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      )\r\n    }else {\r\n      return(\r\n        <InputAdornment \r\n          position={_startIcon._position}\r\n          className={styles.startIcon}\r\n        >\r\n          {_startIcon._icon}\r\n        </InputAdornment>\r\n      )\r\n    }\r\n  }\r\n  constructEndIconProps = () => {\r\n    const _endIcon = this.props._endIcon ? this.props._endIcon : '';\r\n    if(_endIcon._withButton) {\r\n      return(\r\n          <InputAdornment \r\n            position={_endIcon._position}\r\n          >\r\n            <IconButton\r\n              edge={_endIcon._edge}\r\n              onClick={_endIcon._onClick}\r\n              onMouseDown={event => {\r\n                event.preventDefault();\r\n              }}\r\n              size={_endIcon._size}\r\n            >\r\n              {_endIcon._icon}\r\n            </IconButton>\r\n          </InputAdornment>\r\n      )\r\n    } else {\r\n      return(\r\n        <InputAdornment \r\n          position={_endIcon._position}\r\n        >\r\n          {_endIcon._icon}\r\n        </InputAdornment>\r\n      )\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n  } from '@material-ui/core';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Dialog.module.scss';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Dialog\r\n   * @param _type Type - string\r\n   */\r\nexport default class IkiDialog extends Component {\r\n  render() {\r\n    const { \r\n      _open,\r\n      _onClose,\r\n      _type,\r\n      _title,\r\n      _subtitle,\r\n      _size,\r\n      _content,\r\n      _actions\r\n    } = this.props;\r\n    //const _icon = this.props._icon ? this.props._icon : '';\r\n    const _align = this.props._align ? this.props._align : 'left';\r\n    const _onEnter = this.props._onEnter ? this.props._onEnter : null;\r\n    //console.log(\"IkiGrid: \", this.props);\r\n    var dialogClass = cx({\r\n        dialog: true,\r\n        'center': _align === 'center',\r\n        'delete': _type === 'delete'\r\n      });\r\n    return(\r\n      <>\r\n        <Dialog\r\n            open={_open}\r\n            onEnter={_onEnter}\r\n            onClose={_onClose}\r\n            className={dialogClass}\r\n            fullWidth={true}\r\n            maxWidth={_size}\r\n            disableBackdropClick={true}\r\n        >\r\n            {_title !== '' && (\r\n              <DialogTitle className={styles.header}>\r\n                {_subtitle !== '' && (\r\n                  <div className={styles.subtitle}>{_subtitle}</div>\r\n                )}\r\n                {_title !== '' && (\r\n                  <div className={styles.title}>{_title}</div>\r\n                )}\r\n              </DialogTitle>\r\n            )}\r\n            {_content !== '' && (\r\n              <DialogContent className={styles.content}>{_content}</DialogContent>\r\n            )}\r\n            <DialogActions className={styles.footer}>\r\n              {_actions}\r\n            </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { \r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n  Chip,\r\n  ListSubheader\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport classNames from 'classnames/bind';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport styles from './Autocomplete.module.scss';\r\nimport { getFriendlyLabel } from '../../../util';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Form Element -> Input Component based on MaterialUI but customized for Ikigai\r\n   * @param _label Label - string\r\n   * @param _placeholder Placeholder - string\r\n   * @param _value Value - string\r\n   * @param _type Input type - string\r\n   * @param _error Error message - string\r\n   * @param _required Is Input Required - boolean - true | false\r\n   * @param _fullWidth Is Input Full Width - boolean - true | false\r\n   * @param _autoFocus Auto Focus - boolean - true | false\r\n   * @param _size Size - string - small | medium (default)\r\n   * @param _margin Margin - string - dense | none | normal (default)\r\n   */\r\nexport default class IkiAutocomplete extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inptVal: ''\r\n    }\r\n  }\r\n\r\n  handleSelection = (event, index) => {\r\n    //console.log(\"handleSelection: \", \"index: \", index);\r\n    var _index = this.props._index ? this.props._index : 0;\r\n    var _keyValue = this.props._keyValue ? this.props._keyValue : '';\r\n    var _nameValue = this.props._nameValue ? this.props._nameValue : '';\r\n    var _selectOptions = this.props._selectOptions ? this.props._selectOptions : null;\r\n    var selectedOptionIndex = 0;\r\n    _selectOptions.forEach((option) => {\r\n        if(option[_nameValue] === index) {\r\n            selectedOptionIndex = option[_keyValue];\r\n        }\r\n\r\n    })\r\n    //console.log(\"handleSelection---\", \"_keyValue: \", _keyValue, \"_nameValue: \", _nameValue, \"_selectOptions: \", _selectOptions + \"selectedOption: \", selectedOption, \"selectedID: \", selectedID);\r\n    this.props._onChange(event, _index, selectedOptionIndex);\r\n  }\r\n\r\n  prepareComponent = () => {\r\n    const { \r\n      _label, \r\n      _placeholder, \r\n      _value,\r\n      _index\r\n    } = this.props;\r\n    const _error = this.props._error ? this.props._error : false;\r\n    const _required = this.props._required ? this.props._required : false;\r\n    const _fullWidth = this.props._fullWidth ? this.props._fullWidth : false;\r\n    const _autoFocus = this.props._autoFocus ? this.props._autoFocus : false;\r\n    const _size = this.props._size ? this.props._size : 'medium';\r\n    const _margin = this.props._margin ? this.props._margin : 'normal';\r\n    const _isMultiple = this.props._isMultiple ? this.props._isMultiple : false;\r\n    const _selectOptions = this.props._selectOptions ? this.props._selectOptions : [];\r\n    const _noSelectOptionsTxt = this.props._noSelectOptionsTxt ? this.props._noSelectOptionsTxt : '';\r\n    const _keyValue = this.props._keyValue ? this.props._keyValue : '';\r\n    const _nameValue = this.props._nameValue ? this.props._nameValue : '';\r\n    const _groupByValue = this.props._groupByValue ? this.props._groupByValue : '';\r\n\r\n    let errorMsg = \"\";\r\n    if(_error !== ''){\r\n      errorMsg = _error;\r\n    }else{\r\n      if(_required && _value === \"\") {\r\n        errorMsg = 'Required';\r\n      }\r\n    }\r\n\r\n    var _selectOptionsArr = [];\r\n    var _selectedVal = \"\";\r\n    if(_selectOptions) {\r\n        _selectOptions.forEach((option, index) => {\r\n            //console.log(\"option: \", option);\r\n            if(_keyValue === \"\" && _nameValue === \"\") {\r\n              _selectOptionsArr.push(option);\r\n            } else if(_groupByValue !== \"\") {\r\n              //_selectOptionsArr[option[_groupByValue]] = option[_nameValue];\r\n              //_selectOptionsArr[index] = _selectOptions[index];\r\n              _selectOptionsArr[index] = {\r\n                [_groupByValue]: option[_groupByValue],\r\n                [_keyValue]: option[_keyValue],\r\n                [_nameValue]: option[_nameValue]\r\n              };\r\n            } else {\r\n              _selectOptionsArr.push(option[_nameValue]);\r\n              if(option[_keyValue] === _value) {\r\n                  _selectedVal = option[_nameValue];\r\n              }\r\n            }\r\n        })\r\n    }\r\n    //_selectOptionsArr.sort();\r\n\r\n    if(_groupByValue !== '') {\r\n      _selectOptions.sort((a, b) => -b[_groupByValue].localeCompare(a[_groupByValue]));\r\n      _selectOptionsArr.sort((a, b) => -b[_groupByValue].localeCompare(a[_groupByValue]));\r\n    } else {\r\n      _selectOptions.sort();\r\n      _selectOptionsArr.sort();\r\n    }\r\n\r\n    //console.log(\"_selectOptions: \", _selectOptions);\r\n    //console.log(\"_selectOptionsArr: \", _selectOptionsArr);\r\n\r\n    var autocompleHolderClass = cx({\r\n      autocompleteHolder: true\r\n    });\r\n    var autocompleteClass = cx({\r\n      autocomplete: true\r\n    });\r\n\r\n    if(_isMultiple) {\r\n      return(\r\n        <>\r\n          <FormControl \r\n            fullWidth={_fullWidth}\r\n            error={_error !== ''}\r\n            className={autocompleHolderClass}\r\n            //margin={_margin}\r\n          >\r\n            <Autocomplete\r\n              multiple\r\n              className={autocompleteClass}\r\n              options={_selectOptions}\r\n              getOptionLabel={(option) => getFriendlyLabel(option)}\r\n              value={_value !== \"\" ? _value : []}\r\n              inputValue={this.state.inptVal}\r\n              onChange={(event, option) => {\r\n                this.props._onChange(_label, option);\r\n                this.setState({ inptVal: '' });\r\n              }}\r\n              renderInput={\r\n                (params) => \r\n                  <TextField {\r\n                      ...params\r\n                    } \r\n                    variant=\"outlined\" \r\n                    label={_label}\r\n                    placeholder={_placeholder}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'new-password', // disable autocomplete and autofill\r\n                    }}\r\n                    onChange={(event) => this.setState({ inptVal: event.target.value })}\r\n                  />\r\n              }\r\n              //renderTags={(_value, getTagProps) => this.props._renderTags(_value, getTagProps)}\r\n            />\r\n          </FormControl>\r\n        </>\r\n      );\r\n    } else if(_groupByValue !== '') {\r\n      return(\r\n        <>\r\n          <FormControl \r\n            fullWidth={_fullWidth}\r\n            error={_error !== ''}\r\n            className={autocompleHolderClass}\r\n            //margin={_margin}\r\n          >\r\n            <Autocomplete\r\n              className={autocompleteClass}\r\n              options={_selectOptionsArr}\r\n              groupBy={\r\n                _groupByValue !== '' ? (\r\n                  (option) => option[_groupByValue]\r\n                ):(\r\n                  () => {}\r\n                )}\r\n              getOptionLabel={(option) => option[_nameValue]}\r\n              renderInput={\r\n                (params) => \r\n                  <TextField {\r\n                      ...params\r\n                    } \r\n                    variant=\"outlined\" \r\n                    label={_label}\r\n                    placeholder={_placeholder}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'new-password', // disable autocomplete and autofill\r\n                    }}\r\n                  />\r\n              }\r\n              defaultValue={_value}\r\n              onChange={(event, option) => this.props._onChange(event, option)}\r\n            />\r\n          </FormControl>\r\n        </>\r\n      );\r\n    } else {\r\n      return(\r\n        <>\r\n          <FormControl \r\n            fullWidth={_fullWidth}\r\n            error={_error && errorMsg !== \"\"}\r\n            className={autocompleHolderClass}\r\n            //margin={_margin}\r\n          >\r\n            <Autocomplete\r\n              className={autocompleteClass}\r\n              options={_selectOptionsArr}\r\n              getOptionLabel={(option) => option}\r\n              defaultValue={_selectedVal !== \"\" ? _selectedVal : ''}\r\n              onChange={(event, option) => this.props._onChange(_label, option)}\r\n              renderInput={\r\n                (params) => \r\n                  <TextField {\r\n                      ...params\r\n                    } \r\n                    error={_error && errorMsg !== \"\"}\r\n                    variant=\"outlined\" \r\n                    label={_label}\r\n                    placeholder={_placeholder}\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'new-password', // disable autocomplete and autofill\r\n                    }}\r\n                  />\r\n              }\r\n              //renderTags={(_value, getTagProps) => this.props._renderTags(_value, getTagProps)}\r\n            />\r\n            {_error && errorMsg !== \"\" && (\r\n              <FormHelperText \r\n                className=\"input-error\" \r\n                error\r\n              >\r\n                <ErrorIcon />\r\n                <span>{errorMsg}</span>\r\n              </FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"IkiAutocomplete props: \", this.props);\r\n    return this.prepareComponent()\r\n  }\r\n}","import { createBrowserHistory } from 'history';\r\nexport const history = createBrowserHistory();\r\n","import { actionIds } from '../common';\r\nimport { setCookie, removeCookie } from '../util/cookie';\r\n\r\nexport type FlowState = any;\r\n\r\nlet defaultState = {\r\n  flows: [],\r\n  flowsLoaded: false,\r\n  flowsLoadedError: '',\r\n  projects: [],\r\n  datasets: [],\r\n  dashboards: [],\r\n  projectsLoaded: false,\r\n  uploadStatus: 'idle',\r\n  dashUploadStatus: 'idle',\r\n  creatingFlow: false,\r\n  projectsLoadedError: '',\r\n  datasetsLoaded: false,\r\n  datasetsLoadedError: '',\r\n  dashboardsLoaded: false,\r\n  dashboardsLoadedError: '',\r\n  uploadProgress: [],\r\n  metabaseLogin: false,\r\n  metabaseLoginId: '',\r\n  activeProjectId: '',\r\n  activePageType: '',\r\n  activePipelineId: '',\r\n};\r\n\r\nexport const flowReducer = (state: FlowState = defaultState, action: any) => {\r\n  switch (action.type) {\r\n    case actionIds.SEND_APP_DATA_REQUEST_COMPLETE:\r\n      return handleSendAppData(state, action.payload);\r\n    case actionIds.ADD_FLOW:\r\n      return handleAddFlowStart(state, action.payload);\r\n    case actionIds.ADD_FLOW_COMPLETE:\r\n      return handleAddFlow(state, action.payload);\r\n    case actionIds.GET_FLOWS_REQUEST_START:\r\n      return handleFlowsRequestStart(state, action.payload);\r\n    case actionIds.GET_FLOWS_REQUEST_COMPLETE:\r\n      return handleFlowsRequestComplete(state, action.payload);\r\n    case actionIds.GET_FLOWS_REQUEST_FAIL:\r\n      return handleFlowsRequestFail(state, action.payload);\r\n    case actionIds.SAVE_FLOWS_REQUEST_COMPLETE:\r\n      return handleSaveFlowsRequestComplete(state, action.payload);\r\n    case actionIds.UPDATE_FLOW_DATA_COMPLETE:\r\n      return handleUpdateFlowDataComplete(state, action.payload);\r\n    case actionIds.DELETE_FLOW_COMPLETE:\r\n      return handleDeleteFlowComplete(state, action.payload);\r\n    case actionIds.RESTORE_FLOW_COMPLETE:\r\n      return handleRestoreFlowComplete(state, action.payload);\r\n\r\n    case actionIds.GET_PROJECTS_REQUEST_COMPLETE:\r\n      return handleGetProjectRequestComplete(state, action.payload);\r\n\r\n    case actionIds.GET_PROJECTS_REQUREST_FAIL:\r\n      return handleGetProjectRequestFail(state, action.payload);\r\n\r\n    case actionIds.CREATE_PROJECT_REQUEST_COMPLETE:\r\n      return handleCreateProjectRequestComplete(state, action.payload);\r\n\r\n    case actionIds.CREATE_PROJECT_REQUEST_FAIL:\r\n      return handleCreateProjectRequestFail(state, action.payload);\r\n\r\n    case actionIds.DUPLICATE_PROJECT_REQUEST_COMPLETE:\r\n      return handleDuplicateProjectRequestComplete(state, action.payload);\r\n\r\n    case actionIds.DUPLICATE_PROJECT_REQUEST_FAIL:\r\n      return handleDuplicateProjectRequestFail(state, action.payload);\r\n\r\n    case actionIds.DELETE_PROJECT_REQUEST_COMPLETE:\r\n      return handleDeleteProjectRequestComplete(state, action.payload);\r\n\r\n    case actionIds.DELETE_PROJECT_REQUEST_FAIL:\r\n      return handleDeleteProjectRequestFail(state, action.payload);\r\n\r\n    case actionIds.RENAME_PROJECT_REQUEST_COMPLETE:\r\n      return handleRenameProjectRequestComplete(state, action.payload);\r\n\r\n    case actionIds.RENAME_PROJECT_REQUEST_FAIL:\r\n      return handleRenameProjectRequestFail(state, action.payload);\r\n\r\n    case actionIds.RESET_FLOW_STATE:\r\n      return handleResetFlowState(state, action.payload);\r\n\r\n    case actionIds.GET_DATASETS_REQUEST_START:\r\n      return handleGetDatasetsRequestStart(state, action.payload);\r\n\r\n    case actionIds.GET_DATASETS_REQUEST_COMPLETE:\r\n      return handleGetDatasetsRequestComplete(state, action.payload);\r\n\r\n    case actionIds.GET_DATASETS_REQUEST_FAIL:\r\n      return handleGetDatasetsRequestFail(state, action.payload);\r\n\r\n    case actionIds.DELETE_DATASET_REQUEST_COMPLETE:\r\n      return handleDeleteDatasetRequestComplete(state, action.payload);\r\n\r\n    case actionIds.DELETE_DATASET_REQUEST_FAIL:\r\n      return handleDeleteDatasetRequestFail(state, action.payload);\r\n\r\n    case actionIds.DELETE_DASHBOARD_REQUEST_COMPLETE:\r\n      return handleDeleteDashboardRequestComplete(state, action.payload);\r\n\r\n    case actionIds.DELETE_DASHBOARD_REQUEST_FAIL:\r\n      return handleDeleteDashboardRequestFail(state, action.payload);\r\n\r\n    case actionIds.CREATE_DATASET_REQUEST_COMPLETE:\r\n      return handleCreateDatasetRequestComplete(state, action.payload);\r\n\r\n    case actionIds.CREATE_DATASET_REQUEST_START:\r\n      return handleCreateDatasetRequestStart(state, action.payload);\r\n\r\n    case actionIds.EDIT_DATASET_REQUEST_START:\r\n      return handleEditDatasetRequestStart(state, action.payload);\r\n\r\n    case actionIds.EDIT_DATASET_REQUEST_COMPLETE:\r\n      return handleEditDatasetRequestComplete(state, action.payload);\r\n\r\n    case actionIds.EDIT_DATASET_REQUEST_PROGRESS:\r\n      return handleDatasetProgress(state, action.payload);\r\n\r\n    case actionIds.GET_DASHBOARDS_REQUEST_START:\r\n      return handlegetDashboardsRequestStart(state, action.payload);\r\n\r\n    case actionIds.GET_DASHBOARDS_REQUEST_COMPLETE:\r\n      return handleGetDashboardsRequestComplete(state, action.payload);\r\n\r\n    case actionIds.GET_DASHBOARDS_REQUEST_FAIL:\r\n      return handleGetDashboardsRequestFail(state, action.payload);\r\n\r\n    case actionIds.CREATE_DASHBOARD_UPLOAD_REQUEST_START:\r\n      return handleDashboardUploadStart(state, action.payload);\r\n\r\n    case actionIds.CREATE_DASHBOARD_UPLOAD_REQUEST_COMPLETE:\r\n      return handleDashboardUploadComplete(state, action.payload);\r\n\r\n    case actionIds.UPLOAD_DASHBOARD_REQUEST_START:\r\n      return handleDashboardUploadStart(state, action.payload);\r\n\r\n    case actionIds.UPLOAD_DASHBOARD_REQUEST_COMPLETE:\r\n      return handleDashboardUploadComplete(state, action.payload);\r\n\r\n    case actionIds.EDIT_DASHBOARD_REQUEST_START:\r\n      return handleDashEditStart(state, action.payload);\r\n\r\n    case actionIds.EDIT_DASHBOARD_REQUEST_COMPLETE:\r\n      return handleDashEditComplete(state, action.payload);\r\n\r\n    case actionIds.CREATE_DASHBOARD_REQUEST_COMPLETE:\r\n      return handleDashboardUploadComplete(state, action.payload);\r\n\r\n    case actionIds.LOGIN_METABASE_SESSION_COMPLETE:\r\n      return handleLoginMetabaseRequestComplete(state, action.payload);\r\n\r\n    case actionIds.LOGIN_METABASE_SESSION_FAIL:\r\n      return handleLoginMetabaseRequestFail(state, action.payload);\r\n\r\n    case actionIds.HANDLE_PROJECT_RETURN:\r\n      return handleProjectReturn(state, action.payload);\r\n\r\n    case actionIds.HANDLE_CLEAN_SESSION:\r\n      return handleCleanSession(state);\r\n\r\n    case actionIds.HANDLE_FILL_SESSION:\r\n      return handleFillSession(state, action.payload);\r\n  }\r\n  return state;\r\n};\r\n\r\nconst handleAddFlowStart = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    creatingFlow: true\r\n  };\r\n};\r\n\r\nconst handleEditDatasetRequestStart = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    uploadStatus: 'pending'\r\n  };\r\n};\r\n\r\nconst handleEditDatasetRequestComplete = (state: FlowState, dataset: any) => {\r\n  var filterdDatasets = state.datasets.filter(\r\n    (datasetData: any) =>\r\n      datasetData.dataset_id !== dataset.dataset.dataset_id\r\n  );\r\n  //console.log(\"REDUCERS filterdDatasets: \");\r\n  //console.log(filterdDatasets);\r\n  //console.log(\"dataset.dataset: \");\r\n  //console.log(dataset.dataset);\r\n  return {\r\n    ...state,\r\n    datasets: [...filterdDatasets, dataset.dataset],\r\n    uploadStatus: 'complete'\r\n  };\r\n};\r\n\r\nconst handleDatasetProgress = (state: FlowState, payload: any) => {\r\n  const { percent, status, datasetId, datasetName, retry, cancel } = payload\r\n  var filteredUploads:any = []\r\n  if (status !== 'deleted') {\r\n    var data = {\r\n      percentCompleted: percent,\r\n      status: status,\r\n      datasetId: datasetId,\r\n      datasetName: datasetName,\r\n      onRetry: retry,\r\n      onCancel: cancel\r\n    }\r\n    filteredUploads = state.uploadProgress ? state.uploadProgress.filter((a: any) => {\r\n        return a.datasetId !== datasetId && a.percentCompleted !== 100\r\n      }) : []\r\n    //setCookie('uploadProgress',encodeURI(JSON.stringify([...filteredUploads, data])))\r\n    return {\r\n      ...state,\r\n      uploadProgress: [...filteredUploads, data]\r\n    }\r\n  } else {\r\n    filteredUploads = state.uploadProgress ? state.uploadProgress.filter((a: any) => {\r\n    return a.datasetId !== datasetId\r\n  }) : []\r\n//setCookie('uploadProgress',encodeURI(JSON.stringify(filteredUploads)))\r\nreturn {\r\n  ...state,\r\n  uploadProgress: [...filteredUploads]\r\n}\r\n  }\r\n}\r\nconst handleCreateDatasetRequestStart = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    uploadStatus: 'pending'\r\n  };\r\n};\r\n\r\nconst handleCreateDatasetRequestComplete = (state: FlowState, dataset: any) => {\r\n  //console.log(\"handleCreateDatasetRequestComplete handleCreateDatasetRequestComplete:\");\r\n  //console.log(dataset);\r\n  return {\r\n    ...state,\r\n    datasets: [...state.datasets, dataset.dataset],\r\n    uploadStatus: 'complete'\r\n  };\r\n};\r\n\r\nconst handleDashboardUploadStart = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    dashUploadStatus: 'pending'\r\n  };\r\n};\r\n\r\nconst handleDashEditComplete = (state: FlowState, dashboard: any) => {\r\n  //console.log(\"handleCreateDatasetRequestComplete handleCreateDatasetRequestComplete:\");\r\n  //console.log(dataset);\r\n  var filteredDashboards = state.dashboards.filter(\r\n    (dashboardData: any) =>\r\n      dashboardData.dashboard_id !== dashboard.dashboard.dashboard_id\r\n  );\r\n  return {\r\n    ...state,\r\n    dashUploadStatus: 'complete',\r\n    dashboards: [...filteredDashboards, dashboard.dashboard]\r\n  };\r\n};\r\n\r\nconst handleDashEditStart = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    dashUploadStatus: 'pending'\r\n  };\r\n};\r\n\r\nconst handleDashboardUploadComplete = (state: FlowState, dashboard: any) => {\r\n  //console.log(\"handleCreateDatasetRequestComplete handleCreateDatasetRequestComplete:\");\r\n  //console.log(dataset);\r\n  var filteredDashboards = state.dashboards.filter(\r\n    (dashboardData: any) =>\r\n      dashboardData.dashboard_id !== dashboard.dashboard.dashboard_id\r\n  );\r\n  return {\r\n    ...state,\r\n    dashboards: [...filteredDashboards, dashboard.dashboard],\r\n    dashUploadStatus: 'complete'\r\n  };\r\n};\r\n\r\nconst handleDeleteDatasetRequestComplete = (\r\n  state: FlowState,\r\n  datasetId: any\r\n) => {\r\n  return {\r\n    ...state,\r\n    datasets: state.datasets.filter(\r\n      (datasetData: any) => datasetData.dataset_id !== datasetId\r\n    )\r\n  };\r\n};\r\n\r\nconst handleDeleteDatasetRequestFail = (state: FlowState, reason: string) => {\r\n  return state;\r\n};\r\n\r\nconst handleDeleteDashboardRequestComplete = (\r\n  state: FlowState,\r\n  dashboardId: any\r\n) => {\r\n  return {\r\n    ...state,\r\n    dashboards: state.dashboards.filter(\r\n      (dashboardData: any) => dashboardData.dashboard_id !== dashboardId\r\n    )\r\n  };\r\n};\r\n\r\nconst handleDeleteDashboardRequestFail = (state: FlowState, reason: string) => {\r\n  return state;\r\n};\r\n\r\nconst handleGetDatasetsRequestFail = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    datasetsLoaded: true,\r\n    datasetsLoadedError: 'Unable to load datasets'\r\n  };\r\n};\r\n\r\nconst handleGetDashboardsRequestFail = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    dashboardsLoaded: true,\r\n    dashboardsLoadedError: 'Unable to load dashboards'\r\n  };\r\n};\r\n\r\nconst handleGetDatasetsRequestComplete = (state: FlowState, payload: any) => {\r\n  //console.log(\"PAYLOAD handleGetDatasetsRequestComplete: \");\r\n  //console.log(state.datasets);\r\n  const { datasets, projectId } = payload;\r\n\r\n  if (datasets.length > 0) {\r\n    var filteredDatasets = state.datasets.filter((datasetData: any) => {\r\n      //console.log(datasetData.project_id, projectId);\r\n      return datasetData.project_id !== projectId;\r\n    });\r\n\r\n    //console.log(\"filteredDatasets: \");\r\n    //console.log(filteredDatasets);\r\n\r\n    return {\r\n      ...state,\r\n      datasets: [...filteredDatasets, ...datasets],\r\n      datasetsLoaded: true,\r\n      datasetsLoadedError: ''\r\n    };\r\n  } else {\r\n    return {\r\n      ...state,\r\n      datasetsLoaded: true,\r\n      datasetsLoadedError: ''\r\n    };\r\n  }\r\n};\r\n\r\nconst handleGetDashboardsRequestComplete = (state: FlowState, payload: any) => {\r\n  //console.log(\"PAYLOAD handleGetDatasetsRequestComplete: \");\r\n  //console.log(state.datasets);\r\n  const { dashboards, projectId } = payload;\r\n  //console.log(payload);\r\n\r\n  if (dashboards.length > 0) {\r\n    var filteredDashboards = state.dashboards.filter((dashboardsData: any) => {\r\n      //console.log(datasetData.project_id, projectId);\r\n      return dashboardsData.project_id !== projectId;\r\n    });\r\n\r\n    //console.log(\"filteredDatasets: \");\r\n    //console.log(filteredDatasets);\r\n\r\n    return {\r\n      ...state,\r\n      dashboards: [...filteredDashboards, ...dashboards],\r\n      dashboardsLoaded: true,\r\n      dashboardsLoadedError: ''\r\n    };\r\n  } else {\r\n    return {\r\n      ...state,\r\n      dashboardsLoaded: true,\r\n      dashboardsLoadedError: ''\r\n    };\r\n  }\r\n};\r\n\r\nconst handleGetDatasetsRequestStart = (state: FlowState, payload: any) => {\r\n  //console.log(payload);\r\n  return {\r\n    ...state,\r\n    datasetsLoaded: false\r\n  };\r\n};\r\n\r\nconst handlegetDashboardsRequestStart = (state: FlowState, payload: any) => {\r\n  //console.log(payload);\r\n  return {\r\n    ...state,\r\n    dashboardsLoaded: false\r\n  };\r\n};\r\n\r\nconst handleResetFlowState = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...defaultState\r\n  };\r\n};\r\n\r\nconst handleRenameProjectRequestFail = (state: FlowState, payload: any) => {\r\n  return state;\r\n};\r\n\r\nconst handleRenameProjectRequestComplete = (state: FlowState, payload: any) => {\r\n  const { projectId, newName } = payload;\r\n  var project = state.projects.filter(\r\n    (p: any) => p.project_id === projectId\r\n  );\r\n  if (project.length > 0) {\r\n    project = project[0];\r\n    project.name = newName;\r\n    var otherProjects = state.projects.filter(\r\n      (p: any) => p.project_id !== projectId\r\n    );\r\n    return {\r\n      ...state,\r\n      projects: [...otherProjects, project]\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nconst handleFlowsRequestStart = (state: FlowState, payload: string) => {\r\n  //console.log('handleFlowsRequestStart');\r\n  return {\r\n    ...state,\r\n    flowsLoaded: false\r\n  };\r\n};\r\n\r\nconst handleDeleteProjectRequestComplete = (\r\n  state: FlowState,\r\n  project_id: string\r\n) => {\r\n  var projects = state.projects.filter(\r\n    (project: any) => project.project_id !== project_id\r\n  );\r\n  return {\r\n    ...state,\r\n    projects: projects\r\n    //projects: [...state.projects, { ...projects.project, project: projects.project} ]\r\n  };\r\n};\r\n\r\nconst handleDeleteProjectRequestFail = (state: FlowState, reason: string) => {\r\n  return state;\r\n};\r\n\r\nconst handleCreateProjectRequestComplete = (state: FlowState, project: any) => {\r\n  //console.log(project);\r\n  return {\r\n    ...state,\r\n    //projects: [...state.projects, { projects: project }]\r\n    projects: [...state.projects, { ...project, project: project }]\r\n  };\r\n};\r\n\r\nconst handleDuplicateProjectRequestFail = (state: FlowState, reason: any) => {\r\n  return state;\r\n  //TODO assign reason to state variable\r\n};\r\n\r\nconst handleDuplicateProjectRequestComplete = (state: FlowState, project: any) => {\r\n  //console.log(\"reducer - handleDuplicateProjectRequestComplete: \", state, project);\r\n  if (project.owner !== project.user) {\r\n    return state\r\n  } else {\r\n    return {\r\n      ...state,\r\n      //projects: [...state.projects, { projects: project }]\r\n      projects: [...state.projects, { ...project, project: project }]\r\n    };\r\n  }\r\n};\r\n\r\nconst handleCreateProjectRequestFail = (state: FlowState, reason: any) => {\r\n  return state;\r\n  //TODO assign reason to state variable\r\n};\r\n\r\nconst handleGetProjectRequestFail = (state: FlowState, reason: any) => {\r\n  return {\r\n    ...state,\r\n    projectsLoaded: false,\r\n    projectsLoadedError: reason\r\n  };\r\n};\r\n\r\nconst handleGetProjectRequestComplete = (state: FlowState, projects: any) => {\r\n  //console.log(projects);\r\n  return {\r\n    ...state,\r\n    projects: projects,\r\n    projectsLoaded: true,\r\n    projectsLoadedError: ''\r\n  };\r\n};\r\n\r\nconst handleRestoreFlowComplete = (state: FlowState, id: any) => {\r\n  var flow = state.flows.filter((flow: any) => flow.id === id)[0];\r\n  flow.isDeleted = false;\r\n  var flows = state.flows.filter((flow: any) => flow.id !== id);\r\n  flows.push(flow);\r\n  return {\r\n    ...state,\r\n    flows: flows\r\n  };\r\n};\r\n\r\nconst handleDeleteFlowComplete = (state: FlowState, flowData: any) => {\r\n  if (state.flows[flowData.project_id]) {\r\n    var flows = state.flows[flowData.project_id].filter(\r\n      (flow: any) => flow.pipeline_id !== flowData.pipeline_id\r\n    );\r\n    return {\r\n      ...state,\r\n      flows: { ...flows, [flowData.project_id]: flows }\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nconst handleUpdateFlowDataComplete = (state: FlowState, flowData: any) => {\r\n  var flows = state.flows.filter((flow: any) => flow.id !== flowData.id);\r\n  flows.push(flowData);\r\n  return {\r\n    ...state,\r\n    flows: flows\r\n  };\r\n};\r\n\r\nconst handleSaveFlowsRequestComplete = (state: FlowState, response: any) => {\r\n  return state;\r\n};\r\n\r\nconst handleFlowsRequestComplete = (state: FlowState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    flows: {\r\n      ...state.flows,\r\n      [payload.projectId]: payload.flowsData\r\n    },\r\n    flowsLoaded: true,\r\n    flowsLoadedError: ''\r\n  };\r\n};\r\n\r\nconst handleFlowsRequestFail = (state: FlowState, response: any) => {\r\n  //console.log(\"response: \");\r\n  //console.log(response);\r\n  let flowsLoadedError = '';\r\n  if (response.status === 401) {\r\n    flowsLoadedError = \"Unauthorized. You don't have access to visit this page\";\r\n  } else if (response.status === 404) {\r\n    flowsLoadedError = 'Error 404: Something went wrong';\r\n  } else {\r\n    flowsLoadedError = 'Error: Something went wrong';\r\n  }\r\n  return {\r\n    ...state,\r\n    flowsLoaded: false,\r\n    flowsLoadedError: flowsLoadedError\r\n  };\r\n};\r\n\r\nconst handleAddFlow = (state: FlowState, pipelineObj: any) => {\r\n  var projectFlows = [\r\n    ...state.flows[pipelineObj.pipeline.project_id],\r\n    pipelineObj\r\n  ];\r\n  return {\r\n    ...state,\r\n    creatingFlow: false,\r\n    flows: { ...state.flows, [pipelineObj.pipeline.project_id]: projectFlows }\r\n  };\r\n};\r\n\r\nconst handleSendAppData = (state: FlowState, response: object) => {\r\n  return {\r\n    ...state,\r\n    response: response\r\n  };\r\n};\r\n\r\nconst handleLoginMetabaseRequestComplete = (state: FlowState, metabaseSession: any) => {\r\n  //console.log(\"metabaseSession: \");\r\n  //console.log(metabaseSession.session_id);\r\n  return {\r\n    ...state,\r\n    metabaseLoginId: metabaseSession.session_id,\r\n    metabaseLogin: true\r\n  };\r\n};\r\n\r\nconst handleLoginMetabaseRequestFail = (state: FlowState, response: any) => {\r\n  //console.log(\"handleLoginMetabaseRequestFail:\");\r\n  //console.log(response);\r\n  return {\r\n    ...state,\r\n    metabaseLoginId: '',\r\n    metabaseLogin: false\r\n  };\r\n};\r\n\r\nconst handleProjectReturn = (state: FlowState, sourcePage: any) => {\r\n  //console.log(\"handleProjectReturn:\");\r\n  //console.log(sourcePage);\r\n  return {\r\n    ...state,\r\n    activePageType: sourcePage\r\n  };\r\n};\r\n\r\nconst handleFillSession = (state: FlowState, response: any) => {\r\n  //console.log(\"flow-reducer handleFillSession: \");\r\n  //console.log(response);\r\n  //setCookie('ikiProject', response.projectId);\r\n  return {\r\n    ...state,\r\n    metabaseLoginId: response.projectSess,\r\n    metabaseLogin: true,\r\n    activeProjectId: response.projectId\r\n  };\r\n};\r\n\r\nconst handleCleanSession = (state: FlowState) => {\r\n  //console.log(\"metabaseSession: \");\r\n  //console.log(metabaseSession.session_id);\r\n  //removeCookie('ikiProject');\r\n  return {\r\n    ...state,\r\n    metabaseLoginId: '',\r\n    metabaseLogin: false,\r\n    activeProjectId: ''\r\n  };\r\n};\r\n","import Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\n/* const cookieOptions = {\r\n  path: '/',\r\n  secure: true,\r\n  httpOnly: true,\r\n  sameSite: 'strict'\r\n}; */\r\n\r\nexport const setCookie = (key, value) => {\r\n  cookies.set(key, value);\r\n};\r\n\r\nexport const getCookie = key => {\r\n  return cookies.get(key);\r\n};\r\n\r\nexport const removeCookie = key => {\r\n  cookies.remove(key);\r\n};\r\n","import { actionIds } from '../common';\r\nimport { setCookie } from '../util/cookie';\r\nimport decode from 'jwt-decode';\r\nimport { _axios } from '../common';\r\n\r\nexport type UserState = any;\r\n\r\nlet defaultState = {\r\n  email: '',\r\n  idToken: '',\r\n  refreshToken: '',\r\n  accessToken: '',\r\n  checkForLoginCookieComplete: false,\r\n  loginResponse: '',\r\n  isLoggedIn: false\r\n};\r\n\r\nexport const userReducer = (state: UserState = defaultState, action: any) => {\r\n  switch (action.type) {\r\n    case actionIds.AUTHENTICATE_COMPLETE:\r\n      return authenticateCompleteHandler(state, action.payload);\r\n    case actionIds.CHECK_FOR_LOGIN_COOKIE_COMPLETE:\r\n      return checkForLoginCookieCompleteHandler(state, action.payload);\r\n    case actionIds.CHECK_FOR_LOGIN_COOKIE_FAIL:\r\n      return checkForLoginCookieFailHandler(state, action.payload);\r\n    case actionIds.RESET_USER_STATE:\r\n      return handleResetUserState(state, action.payload);\r\n  }\r\n  return state;\r\n};\r\n\r\nconst handleResetUserState = (state: UserState, payload: any) => {\r\n  return {\r\n    ...defaultState,\r\n    checkForLoginCookieComplete: true\r\n  };\r\n};\r\n\r\nconst checkForLoginCookieCompleteHandler = (state: UserState, tokens: any) => {\r\n  var decodedIdToken: any = decode(tokens.idToken);\r\n  var email = decodedIdToken.email;\r\n  _axios.defaults.headers.common['Id-token'] = tokens.idToken;\r\n  _axios.defaults.headers.common['Refresh-token'] = tokens.refreshToken;\r\n  _axios.defaults.headers.common['Access-token'] = tokens.accessToken;\r\n  _axios.defaults.headers.common['User'] = email;\r\n  return {\r\n    ...state,\r\n    ...tokens,\r\n    email,\r\n    checkForLoginCookieComplete: true,\r\n    isLoggedIn: true\r\n  };\r\n};\r\n\r\nconst checkForLoginCookieFailHandler = (state: UserState, payload: any) => {\r\n  return {\r\n    ...state,\r\n    checkForLoginCookieComplete: true,\r\n    isLoggedIn: false\r\n  };\r\n};\r\n\r\nconst authenticateCompleteHandler = (state: UserState, loginResponse: any) => {\r\n  if (loginResponse.status === 200) {\r\n    var tokens = loginResponse.data.tokens;\r\n    var tokenObject = {\r\n      idToken: tokens.id_token,\r\n      refreshToken: tokens.refresh_token,\r\n      accessToken: tokens.access_token\r\n    };\r\n    var decodedIdToken: any = decode(tokens.id_token);\r\n    var email = decodedIdToken.email;\r\n    var tokenString = JSON.stringify(tokenObject);\r\n    _axios.defaults.headers.common['Id-token'] = tokens.id_token;\r\n    _axios.defaults.headers.common['Refresh-token'] = tokens.refresh_token;\r\n    _axios.defaults.headers.common['Access-token'] = tokens.access_token;\r\n    _axios.defaults.headers.common['User'] = email;\r\n    setCookie('tokens', tokenString);\r\n    return {\r\n      ...state,\r\n      ...tokenObject,\r\n      email,\r\n      loginResponse: '',\r\n      isLoggedIn: true\r\n    };\r\n  } else if (loginResponse.status === 401) {\r\n    return {\r\n      ...state,\r\n      loginResponse: 'You have entered an invalid username or password',\r\n      isLoggedIn: false\r\n    };\r\n  } else if (loginResponse.status === 404) {\r\n    return {\r\n      ...state,\r\n      loginResponse: 'Error 404: Something went wrong!',\r\n      isLoggedIn: false\r\n    };\r\n  } else {\r\n    return {\r\n      ...state,\r\n      loginResponse: 'Error 404: Something else!',\r\n      isLoggedIn: false\r\n    };\r\n  }\r\n};\r\n","import { actionIds } from '../common';\r\n\r\nexport type FacetState = any;\r\n\r\nlet defaultState = {\r\n  componentList: [],\r\n  facetDocLoaded: false,\r\n  facetDocError: false,\r\n  facetDocErrorMessage: ''\r\n};\r\n\r\nexport const facetReducer = (state: FacetState = defaultState, action: any) => {\r\n  switch (action.type) {\r\n    case actionIds.GET_FACET_DOC_COMPLETE:\r\n      return handleGetFacetDocComplete(state, action.payload);\r\n    case actionIds.GET_FACET_DOC_FAIL:\r\n      return handleGetFacetDocFail(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst handleGetFacetDocComplete = (state: any, data: any) => {\r\n  return {\r\n    ...state,\r\n    componentList: data,\r\n    facetDocLoaded: true,\r\n    facetDocError: false,\r\n    facetDocErrorMessage: ''\r\n  };\r\n};\r\n\r\nconst handleGetFacetDocFail = (state: any, reason: string) => {\r\n  return {\r\n    ...state,\r\n    facetDocErrorMessage: reason,\r\n    facetDocError: true\r\n  };\r\n};\r\n","import { _axios } from '../common';\r\n\r\nexport const authenticateUser = (credentials: any): Promise<object> => {\r\n  var data = {\r\n    user: {\r\n      email: credentials.email,\r\n      password: credentials.password\r\n    }\r\n  };\r\n  return _axios.post('/authenticate', data);\r\n};\r\n\r\nexport function loginUser(user: string, pass: string) {\r\n  var data = {\r\n    user: {\r\n      email: user,\r\n      password: pass\r\n    }\r\n  };\r\n\r\n  return _axios.post('/authenticate', data);\r\n}\r\n\r\nexport function signupUser(user: string, pass: string) {\r\n  var data = {\r\n    user: {\r\n      email: user,\r\n      password: pass\r\n    }\r\n  };\r\n\r\n  return _axios.post('/register', data);\r\n}\r\n\r\nexport function completeUserRegistration(user: string, code: string) {\r\n  var data = {\r\n    user: {\r\n      email: user,\r\n      confirmation_code: code\r\n    }\r\n  };\r\n\r\n  return _axios.post('/confirm-sign-up', data);\r\n}\r\n\r\nexport function initiateForgotPassword(user: string) {\r\n  var data = {\r\n    user: {\r\n      email: user\r\n    }\r\n  };\r\n\r\n  return _axios.post('/initiate-forgot-password', data);\r\n}\r\n\r\nexport function confirmForgotPassword(\r\n  user: string,\r\n  code: string,\r\n  pass: string\r\n) {\r\n  var data = {\r\n    user: {\r\n      email: user,\r\n      confirmation_code: code,\r\n      password: pass\r\n    }\r\n  };\r\n\r\n  return _axios.post('/confirm-forgot-password', data);\r\n}\r\n\r\nexport function confirmChangePassword(\r\n  user: string,\r\n  pass: string,\r\n  pass2: string\r\n) {\r\n  var data = {\r\n    user: {\r\n      email: user,\r\n      previous_password: pass,\r\n      proposed_password: pass2\r\n    }\r\n  };\r\n\r\n  return _axios.post('/change-password', data);\r\n}\r\n\r\n/*export function logout() {\r\n  return _axios.post('/log-out');\r\n}*/\r\n\r\nexport const logout = (): Promise<object> => {\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    return _axios.post('/log-out').then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n        purgeSessions();\r\n      } else {\r\n        reject(res.status);\r\n        purgeSessions();\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n}\r\n\r\nexport const purgeSessions = (): Promise<object> => {\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    var data = {};\r\n    return _axios.post('/purge-sessions', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject(res.status);\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};","import { call, put, takeEvery, all, fork, select } from 'redux-saga/effects';\r\nimport { getCookie, removeCookie } from '../util/cookie';\r\n\r\nimport {\r\n  sendAppData,\r\n  getFlows,\r\n  saveFlow,\r\n  createPipeline,\r\n  deletePipeline,\r\n  getPipeline,\r\n  authenticateUser,\r\n  logout,\r\n  getFacetDoc,\r\n  getProjects,\r\n  createProject,\r\n  duplicateProject,\r\n  deleteProject,\r\n  renameProject,\r\n  getDatasetsForProject,\r\n  createDataset,\r\n  uploadDataset,\r\n  uploadDashboard,\r\n  deleteDataset,\r\n  getDataset,\r\n  editDataset,\r\n  createDashboard,\r\n  editDashboard,\r\n  getDashboard,\r\n  getDashboardsForProject,\r\n  enterSession,\r\n  deleteDashboard,\r\n} from '../services';\r\n\r\nimport {\r\n  sendAppDataCompleteAction,\r\n  addFlowActionComplete,\r\n  getFlowsActionComplete,\r\n  saveFlowsActionComplete,\r\n  saveFlowsActionStart,\r\n  deleteFlowActionComplete,\r\n  restoreFlowActionComplete,\r\n  authenticateRequestCompleteAction,\r\n  checkForLoginCookieActionComplete,\r\n  checkForLoginCookieActionFail,\r\n  getFlowsActionFail,\r\n  getFacetDocActionComplete,\r\n  getFacetDocActionFail,\r\n  getProjectsActionStart,\r\n  getProjectsActionComplete,\r\n  getProjectsActionFail,\r\n  createProjectActionFail,\r\n  createProjectActionComplete,\r\n  duplicateProjectActionFail,\r\n  duplicateProjectActionComplete,\r\n  deleteProjectActionFail,\r\n  deleteProjectActionComplete,\r\n  renameProjectActionComplete,\r\n  renameProjectActionFail,\r\n  resetFlowStateAction,\r\n  resetUserStateAction,\r\n  getDatasetActionFail,\r\n  getDatasetActionComplete,\r\n  createDatasetActionComplete,\r\n  creatDatasetActionFail,\r\n  deleteDatasetActionComplete,\r\n  deleteDatasetActionFail,\r\n  editDatasetActionComplete,\r\n  editDatasetActionFail,\r\n  loginMetabaseActionComplete,\r\n  loginMetabaseActionFail,\r\n  getSuggestionsActionComplete,\r\n  getSuggestionsActionStart,\r\n  createDashboardActionComplete,\r\n  creatDashboardActionFail,\r\n  getDashboardActionComplete,\r\n  editDashboardActionComplete,\r\n  deleteDashboardActionComplete,\r\n  deleteDashboardActionFail,\r\n} from '../actions';\r\nimport { actionIds } from '../common';\r\nimport { push } from 'connected-react-router';\r\nimport { FlowState } from '../reducers/flow-reducer';\r\n\r\nconst getUserState = (state: any) => state.userReducerState;\r\n\r\nexport const rootSaga = function* root() {\r\n  yield all([\r\n    fork(watchSendAppDataRequestStart),\r\n    fork(watchAddFlowRequest),\r\n    fork(watchGetFlowsRequestStart),\r\n    fork(watchSaveFlowsRequestStart),\r\n    fork(watchUpdateFlowDataStart),\r\n    fork(watchDeleteFlow),\r\n    fork(watchRestoreFlow),\r\n    fork(watchAuthenticationStart),\r\n    fork(watchCheckForLoginCookieStart),\r\n    fork(watchLogoutAction),\r\n    fork(watchGetFlowDocActionStart),\r\n    fork(watchGetProjectsActionStart),\r\n    fork(watchCreateProjectActionStart),\r\n    fork(watchDeleteProjectActionStart),\r\n    fork(watchDuplicateProjectActionStart),\r\n    fork(watchRenameProjectActionStart),\r\n    fork(watchSoftLogoutAction),\r\n    fork(watchGetDatasetsAction),\r\n    fork(watchGetDashboardsAction),\r\n    fork(watchCreateDatasetAction),\r\n    fork(watchCreateDashboardAction),\r\n    fork(watchEditDashboardAction),\r\n    fork(watchEditDatasetAction),\r\n    fork(watchUploadDatasetAction),\r\n    fork(watchDeleteDatasetAction),\r\n    fork(watchCreateDashboardForUploadAction),\r\n    fork(watchLoginMetabaseAction),\r\n    fork(watchGetSuggestions),\r\n    fork(watchDeleteDashboardAction),\r\n  ]);\r\n};\r\n\r\nfunction* watchEditDatasetAction() {\r\n  yield takeEvery(actionIds.EDIT_DATASET_REQUEST_START, _editDataset);\r\n}\r\n\r\nfunction* watchEditDashboardAction() {\r\n  yield takeEvery(actionIds.EDIT_DASHBOARD_REQUEST_START, _editDashboard);\r\n}\r\nfunction* watchLoginMetabaseAction() {\r\n  yield takeEvery(actionIds.LOGIN_METABASE_SESSION_START, _loginMetabase);\r\n}\r\n\r\nfunction* watchDeleteDatasetAction() {\r\n  yield takeEvery(actionIds.DELETE_DATASET_REQUEST_START, _deleteDataset);\r\n}\r\n\r\nfunction* watchDeleteDashboardAction() {\r\n  yield takeEvery(actionIds.DELETE_DASHBOARD_REQUEST_START, _deleteDashboard);\r\n}\r\n\r\nfunction* watchUploadDatasetAction() {\r\n  yield takeEvery(actionIds.UPLOAD_DATASET_REQUEST_START, _uploadDataset);\r\n}\r\n\r\nfunction* watchCreateDatasetAction() {\r\n  yield takeEvery(actionIds.CREATE_DATASET_REQUEST_START, _createDataset);\r\n}\r\n\r\nfunction* watchCreateDashboardAction() {\r\n  yield takeEvery(actionIds.CREATE_DASHBOARD_REQUEST_START, _createDashboard);\r\n}\r\n\r\nfunction* watchCreateDashboardForUploadAction() {\r\n  yield takeEvery(actionIds.CREATE_DASHBOARD_UPLOAD_REQUEST_START, _createDashboardForUpload);\r\n}\r\n\r\n// function* watchDashuploadAction() {\r\n//   yield takeEvery(actionIds.UPLOAD_DASHBOARD_REQUEST_START, _uploadDashboard);\r\n// }\r\n\r\nfunction* watchGetDatasetsAction() {\r\n  yield takeEvery(actionIds.GET_DATASETS_REQUEST_START, _getDatasets);\r\n}\r\n\r\nfunction* watchGetDashboardsAction() {\r\n  yield takeEvery(actionIds.GET_DASHBOARDS_REQUEST_START, _getDashboards);\r\n}\r\n\r\nfunction* watchSoftLogoutAction() {\r\n  yield takeEvery(actionIds.SOFT_LOGOUT, _softLogout);\r\n}\r\n\r\nfunction* watchRenameProjectActionStart() {\r\n  yield takeEvery(actionIds.RENAME_PROJECT_REQUEST_START, _renameProject);\r\n}\r\n\r\nfunction* watchDeleteProjectActionStart() {\r\n  yield takeEvery(actionIds.DELETE_PROJECT_REQUEST_START, _deleteProject);\r\n}\r\n\r\nfunction* watchCreateProjectActionStart() {\r\n  yield takeEvery(actionIds.CREATE_PROJECT_REQUEST_START, _createProject);\r\n}\r\n\r\nfunction* watchDuplicateProjectActionStart() {\r\n  yield takeEvery(actionIds.DUPLICATE_PROJECT_REQUEST_START, _duplicateProject);\r\n}\r\n\r\nfunction* watchGetProjectsActionStart() {\r\n  yield takeEvery(actionIds.GET_PROJECTS_REQUEST_START, _getProjects);\r\n}\r\n\r\nfunction* watchGetFlowDocActionStart() {\r\n  yield takeEvery(actionIds.GET_FACET_DOC_START, _getFacetDoc);\r\n}\r\n\r\nfunction* watchLogoutAction() {\r\n  yield takeEvery(actionIds.LOGOUT, _logout);\r\n}\r\n\r\nfunction* watchCheckForLoginCookieStart() {\r\n  yield takeEvery(actionIds.CHECK_FOR_LOGIN_COOKIE_START, _checkForLoginCookie);\r\n}\r\n\r\nfunction* watchAuthenticationStart() {\r\n  yield takeEvery(actionIds.AUTHENTICATE, _authenticate);\r\n}\r\n\r\nfunction* watchRestoreFlow() {\r\n  yield takeEvery(actionIds.RESTORE_FLOW, _restoreFlow);\r\n}\r\n\r\nfunction* watchDeleteFlow() {\r\n  yield takeEvery(actionIds.DELETE_FLOW, _deleteFlow);\r\n}\r\n\r\nfunction* watchSendAppDataRequestStart() {\r\n  yield takeEvery(actionIds.SEND_APP_DATA_REQUEST_START, _sendAppData);\r\n}\r\n\r\nfunction* watchAddFlowRequest() {\r\n  yield takeEvery(actionIds.ADD_FLOW, _addFlow);\r\n}\r\n\r\nfunction* watchGetFlowsRequestStart() {\r\n  yield takeEvery(actionIds.GET_FLOWS_REQUEST_START, _getFlows);\r\n}\r\n\r\nfunction* watchSaveFlowsRequestStart() {\r\n  yield takeEvery(actionIds.SAVE_FLOWS_REQUEST_START, _saveFlows);\r\n}\r\n\r\nfunction* watchUpdateFlowDataStart() {\r\n  yield takeEvery(actionIds.UPDATE_FLOW_DATA_START, _updateFlowDataStart);\r\n}\r\n\r\nfunction* watchGetSuggestions(){\r\n  yield takeEvery(actionIds.GET_SUGGESTIONS_START, _getSuggestions);\r\n}\r\n\r\nfunction* _updateFlowDataStart(action: any) {\r\n  //yield put(updateFlowDataActionComplete(nodeData));\r\n  yield put(saveFlowsActionStart(action.payload));\r\n}\r\n\r\nfunction* _saveFlows(action: any) {\r\n  const response = yield call(saveFlow, action.payload);\r\n  yield put(saveFlowsActionComplete(response));\r\n}\r\n\r\nfunction* _getFlows(action: any) {\r\n  try {\r\n    const projectId = action.payload;\r\n    const response = yield call(getFlows, action.payload);\r\n    if (response.status === 200) {\r\n      var flowsData = response.data.pipelines;\r\n      yield put(getFlowsActionComplete({ projectId, flowsData }));\r\n    } else {\r\n      yield put(getFlowsActionFail(response));\r\n    }\r\n  } catch (e) {\r\n    yield put(getFlowsActionFail(e.response));\r\n  }\r\n}\r\n\r\nfunction* _restoreFlow(action: any) {\r\n  yield put(restoreFlowActionComplete(action.payload));\r\n  //yield put(saveFlowsActionStart());\r\n}\r\n\r\nfunction* _deleteFlow(action: any) {\r\n  yield call(deletePipeline, action.payload.pipeline_id);\r\n  yield put(deleteFlowActionComplete(action.payload));\r\n  //yield put(saveFlowsActionStart());\r\n}\r\n\r\nfunction* _addFlow(action: any) {\r\n  const id: string = yield call(createPipeline, action.payload);\r\n  const pipelineObj: any = yield call(getPipeline, id);\r\n  //const id: string = getRandomString();\r\n  //pipelineObj.pipeline.title = 'Flow Title';\r\n  yield put(addFlowActionComplete(pipelineObj));\r\n  //yield put(saveFlowsActionStart(pipelineObj));\r\n  //yield put(push(`/flow/${id}`));\r\n}\r\n\r\nfunction* _sendAppData(action: any) {\r\n  const response = yield call(sendAppData, action.payload);\r\n  yield put(sendAppDataCompleteAction(response));\r\n}\r\n\r\nfunction* _authenticate(action: any) {\r\n  try {\r\n    const response = yield call(authenticateUser, action.payload);\r\n    yield put(authenticateRequestCompleteAction(response));\r\n    yield put(getProjectsActionStart());\r\n    yield put(push('/dashboard'));\r\n  } catch (e) {\r\n    yield put(authenticateRequestCompleteAction(e.response));\r\n  }\r\n}\r\n\r\nfunction* _checkForLoginCookie() {\r\n  var tokens = getCookie('tokens');\r\n  if (tokens) {\r\n    yield put(checkForLoginCookieActionComplete(tokens));\r\n    yield put(getProjectsActionStart());\r\n    //yield put(push('/dashboard'));\r\n  } else {\r\n    yield put(checkForLoginCookieActionFail());\r\n    //yield put(push('/login'));\r\n  }\r\n}\r\n\r\nfunction* _logout() {\r\n  removeCookie('tokens');\r\n  //removeCookie('ikiProject');\r\n  try {\r\n    yield put(resetFlowStateAction());\r\n    yield put(resetUserStateAction());\r\n    yield call(logout);\r\n  } catch (e) {}\r\n  yield put(push('/'));\r\n}\r\n\r\nfunction* _getFacetDoc() {\r\n  try {\r\n    var facetsData = yield call(getFacetDoc);\r\n    yield put(getFacetDocActionComplete(facetsData));\r\n  } catch (reason) {\r\n    yield put(getFacetDocActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _getProjects() {\r\n  try {\r\n    var projects = yield call(getProjects);\r\n    yield put(getProjectsActionComplete(projects));\r\n  } catch (reason) {\r\n    yield put(getProjectsActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _createProject(action: any) {\r\n  try {\r\n    var name = action.payload;\r\n    var project_id = yield call(createProject, name);\r\n    var owner = yield select(getUserState);\r\n    yield put(\r\n      createProjectActionComplete({ name, project_id, owner: owner.email })\r\n    );\r\n  } catch (reason) {\r\n    yield put(createProjectActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _deleteProject(action: any) {\r\n  try {\r\n    const project_id = yield call(deleteProject, action.payload);\r\n    yield put(push('/dashboard'));\r\n    yield put(deleteProjectActionComplete(project_id));\r\n  } catch (reason) {\r\n    yield put(deleteProjectActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _duplicateProject(action: any) {\r\n  try {\r\n    const { projectId, name, targetUser } = action.payload;\r\n    //var owner = yield select(getUserState);\r\n    var currentOwner = yield select(getUserState);\r\n    var currentOwnerEmail = currentOwner.email;\r\n    var ownerEmail = targetUser !== '' ? targetUser : currentOwnerEmail;\r\n    var project_id = yield call(duplicateProject, projectId, name, targetUser);\r\n    //console.log(\"_duplicateProject - project_id: \" + project_id + \", name: \" + name);\r\n    yield put(\r\n      //duplicateProjectActionComplete({ name, project_id, owner: owner.email })\r\n      duplicateProjectActionComplete({ name, project_id, owner: ownerEmail, user: currentOwnerEmail })\r\n    );\r\n  } catch (reason) {\r\n    yield put(duplicateProjectActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _renameProject(action: any) {\r\n  const { projectId, newName } = action.payload;\r\n  try {\r\n    const project_id = yield call(renameProject, projectId, newName);\r\n    yield put(renameProjectActionComplete(project_id, newName));\r\n  } catch (reason) {\r\n    yield put(renameProjectActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _softLogout() {\r\n  removeCookie('tokens');\r\n  //removeCookie('ikiProject');\r\n  yield put(resetFlowStateAction());\r\n  yield put(resetUserStateAction());\r\n  yield put(push('/'));\r\n}\r\n\r\nfunction* _getDatasets(action: any) {\r\n  const projectId = action.payload;\r\n  try {\r\n    const datasetsResponse = yield call(getDatasetsForProject, projectId);\r\n    //console.log(\"datasetsResponse: \");\r\n    //console.log(datasetsResponse);\r\n    const datasets = datasetsResponse;\r\n    yield put(getDatasetActionComplete({ projectId, datasets }));\r\n  } catch (reason) {\r\n    yield put(getDatasetActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _getDashboards(action: any) {\r\n  const projectId = action.payload;\r\n  try {\r\n    const dashboardsresponse = yield call(getDashboardsForProject, projectId);\r\n    //console.log(\"datasetsResponse: \");\r\n    //console.log(datasetsResponse);\r\n    const dashboards = dashboardsresponse;\r\n    yield put(getDashboardActionComplete({ projectId,dashboards }));\r\n  } catch (reason) {\r\n    yield put(getDatasetActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _createDataset(action: any) {\r\n  const { datasetName, projectId, file } = action.payload;\r\n  try {\r\n    const datasetId: any = yield call(createDataset, datasetName, projectId);\r\n    //console.log(\"_createDataset: \");\r\n    //console.log(datasetId.dataset_id);\r\n    const dataset_id = datasetId.dataset_id;\r\n    //const datasetUploadUrl: any = yield call(getDatasetUploadUrl, dataset_id, \"\");\r\n    //console.log(\"datasetUploadUrl: \");\r\n    //console.log(datasetUploadUrl);\r\n    if (file) {\r\n      const datasetOverwrite: boolean = false;\r\n      yield call(\r\n        uploadDataset,\r\n        dataset_id,\r\n        datasetName,\r\n        projectId,\r\n        file,\r\n        datasetOverwrite\r\n      );\r\n    }\r\n    const dataset = yield call(getDataset, dataset_id);\r\n    //console.log(\"createDatasetActionComplete: \")\r\n    //console.log(dataset);\r\n    yield put(createDatasetActionComplete(dataset));\r\n  } catch (reason) {\r\n    yield put(creatDatasetActionFail(reason));\r\n  }\r\n}\r\nfunction* _createDashboardForUpload(action: any) {\r\n  const { name,project_id,dataset_id,file } = action.payload;\r\n  try {\r\n    const dashboardData: any = yield call(createDashboard, name, project_id, dataset_id);\r\n    //console.log(\"_createDataset: \");\r\n    //console.log(datasetId.dataset_id);\r\n    if (file) {\r\n      const dashboardOverwrite: boolean = false;\r\n      yield call(\r\n        uploadDashboard,\r\n        dashboardData.dashboard_id,\r\n        file,\r\n        dashboardOverwrite\r\n      );\r\n    }\r\n    const dashboard = yield call(getDashboard, dashboardData.dashboard_id);\r\n    //console.log(\"createDatasetActionComplete: \")\r\n    //console.log(dataset);\r\n    yield put(createDashboardActionComplete(dashboard));\r\n  } catch (reason) {\r\n    yield put(creatDashboardActionFail(reason));\r\n  }\r\n}\r\n\r\n// function* _uploadDashboard(action:any){\r\n//   const {dashboardId, file} = action.payload;\r\n//  try{\r\n//   if(file){\r\n//     const dashboardOverwrite: boolean = true;\r\n//     yield call(\r\n//       uploadDashboard,\r\n//       dashboardId,\r\n//       file,\r\n//       dashboardOverwrite\r\n//     );\r\n//   }\r\n//   const dashboard = yield call(getDashboard, dashboardId);\r\n//   yield put(uploadDashboardActionComplete(dashboard));\r\n//  }catch(reason){\r\n//    yield put(uploadDashboardActionFail(reason))\r\n//  }\r\n\r\n// }\r\nfunction* _createDashboard(action: any) {\r\n  const { name,project_id,dataset_id } = action.payload;\r\n  try {\r\n    const dashboard_id: any = yield call(createDashboard, name, project_id, dataset_id);\r\n    //console.log(\"_createDataset: \");\r\n    //console.log(datasetId.dataset_id);\r\n    const dashboard = yield call(getDashboard, dashboard_id);\r\n    //console.log(\"createDatasetActionComplete: \")\r\n    //console.log(dataset);\r\n    yield put(createDashboardActionComplete(dashboard));\r\n  } catch (reason) {\r\n    yield put(creatDashboardActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _uploadDataset(action: any) {\r\n  const {\r\n    datasetId,\r\n    projectId,\r\n    file,\r\n    datasetName,\r\n    datasetOverwrite\r\n  } = action.payload;\r\n  try {\r\n    yield call(\r\n      uploadDataset,\r\n      datasetId,\r\n      datasetName,\r\n      projectId,\r\n      file,\r\n      datasetOverwrite\r\n    );\r\n    const dataset = yield call(getDataset, datasetId);\r\n    yield put(editDatasetActionComplete(dataset));\r\n  } catch (reason) {\r\n    yield put(editDatasetActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _deleteDataset(action: any) {\r\n  const datasetId = action.payload;\r\n  try {\r\n    yield call(deleteDataset, datasetId);\r\n    yield put(deleteDatasetActionComplete(datasetId));\r\n  } catch (reason) {\r\n    yield put(deleteDatasetActionFail(datasetId));\r\n  }\r\n}\r\n\r\nfunction* _deleteDashboard(action: any) {\r\n  const dashboardId = action.payload;\r\n  try {\r\n    yield call(deleteDashboard, dashboardId);\r\n    yield put(deleteDashboardActionComplete(dashboardId));\r\n  } catch (reason) {\r\n    yield put(deleteDashboardActionFail(dashboardId));\r\n  }\r\n}\r\n\r\nfunction* _editDataset(action: any) {\r\n  const { datasetName, datasetId, projectId, file } = action.payload;\r\n  //console.log(\" SAGAS _editDataset - datasetId: \" + datasetId + \", datasetName: \" + datasetName);\r\n  try {\r\n    yield call(editDataset, datasetId, datasetName, projectId);\r\n    if (file) {\r\n      const datasetOverwrite: boolean = true;\r\n      yield call(\r\n        uploadDataset,\r\n        datasetId,\r\n        datasetName,\r\n        projectId,\r\n        file,\r\n        datasetOverwrite\r\n      );  \r\n    }\r\n    const dataset = yield call(getDataset, datasetId);\r\n    //console.log(\" SAGAS _editDataset - dataset: \");\r\n    //console.log(dataset);\r\n    yield put(editDatasetActionComplete(dataset));\r\n  } catch (reason) {\r\n    yield put(editDatasetActionComplete(reason));\r\n  }\r\n}\r\n\r\nfunction* _editDashboard(action: any) {\r\n  const { name, dataset_id, project_id,dashboard_id,file } = action.payload;\r\n  try {\r\n    const fileName = \"\"\r\n    yield call(editDashboard, dataset_id,name,project_id,dashboard_id,fileName);\r\n    if(file){\r\n      const dashboardOverwrite:boolean = true\r\n      yield call(uploadDashboard, dashboard_id,file,dashboardOverwrite)\r\n    }\r\n    const dashboard = yield call(getDashboard, dashboard_id);\r\n    yield put(editDashboardActionComplete(dashboard));\r\n  } catch (reason) {\r\n    yield put(editDashboardActionComplete(reason));\r\n  }\r\n}\r\nfunction* _loginMetabase(action: any) {\r\n  try {\r\n    var projectId = action.payload;\r\n    var session_id = yield call(enterSession, projectId);\r\n    //console.log(\"_loginMetabase\");\r\n    //console.log(session_id);\r\n    yield put(\r\n      loginMetabaseActionComplete({ session_id })\r\n    );\r\n  } catch (reason) {\r\n    yield put(loginMetabaseActionFail(reason));\r\n  }\r\n}\r\n\r\nfunction* _getSuggestions(data:any){\r\n  try {\r\n    yield put(getSuggestionsActionStart(data));\r\n  }catch(reason){\r\n    yield put(getSuggestionsActionComplete(reason))\r\n  }\r\n}\r\n\r\nexport const getState = (state: FlowState) => state;\r\n","import { combineReducers } from 'redux';\r\nimport { flowReducer, FlowState } from './flow-reducer';\r\nimport { userReducer, UserState } from './user-reducer';\r\nimport { facetReducer, FacetState } from './facet-reducer';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nexport interface State {\r\n  flowReducerState: FlowState;\r\n  userReducerState: UserState;\r\n  facetReducerState: FacetState;\r\n  router: any;\r\n}\r\n\r\nexport const createRootReducer = (history: any) =>\r\n  combineReducers<State>({\r\n    flowReducerState: flowReducer,\r\n    userReducerState: userReducer,\r\n    facetReducerState: facetReducer,\r\n    router: connectRouter(history)\r\n  });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { history } from '../history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createRootReducer } from '../reducers';\r\n\r\nimport { rootSaga } from '../sagas';\r\n\r\nconst sagaMiddileware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  createRootReducer(history),\r\n  {},\r\n  compose(\r\n    applyMiddleware(routerMiddleware(history), sagaMiddileware)\r\n    // (window as { [key: string]: any })['__REDUX_DEVTOOLS_EXTENSION__'] &&\r\n    //   (window as { [key: string]: any })['__REDUX_DEVTOOLS_EXTENSION__']()\r\n  )\r\n);\r\n\r\nsagaMiddileware.run(rootSaga);\r\n","import { _axios } from '../common';\r\n//import { getCurrentDate } from '../util';\r\nimport { API_BASE } from '../constants';\r\nimport { store } from '../store';\r\nimport axios from 'axios';\r\nimport { uploadDatasetProgress, editDatasetActionStart, deleteDatasetActionStart } from '../actions';\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\n//console.log(\"API_BASE: \" + API_BASE);\r\n\r\nexport const getFacetDocumentations = (): Promise<object> => {\r\n  var apiURL = `${API_BASE}/get-facet-documentations`;\r\n  //var facetDocs = {};\r\n\r\n  const promise = new Promise<object>((resolve: any, reject: any) => {\r\n    _axios.get(apiURL).then(res => {\r\n      //console.log('getFacet**',res);\r\n      if (res.status === 200) {\r\n        var data = res.data;\r\n        resolve(data);\r\n      } else {\r\n        reject('Can not load facet data');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getFacetDoc = (): Promise<object> => {\r\n  var apiURL = `${API_BASE}/get-facet-specs`;\r\n  //var facetDocs = {};\r\n  const promise = new Promise<object>((resolve: any, reject: any) => {\r\n    _axios.get(apiURL).then(res => {\r\n      if (res.status === 200) {\r\n        //console.log(res);\r\n\r\n        var facetDocumentstions: any = [];\r\n        getFacetDocumentations().then((facetDocsResponse: any) => {\r\n          //console.log(\"facetDocumentstions: \");\r\n          //console.log(facetDocsResponse);\r\n          facetDocumentstions = facetDocsResponse;\r\n          var _data = res.data;\r\n          console.log(_data);\r\n\r\n          Object.keys(_data).forEach((chain: any) => {\r\n\r\n            Object.keys(_data[chain]).forEach((facetGrp: any) => {\r\n\r\n              Object.keys(_data[chain][facetGrp]).forEach((facetTyp: any) => {\r\n                var _args = {}\r\n                Object.keys(_data[chain][facetGrp][facetTyp]['facet_arguments']).forEach((a: string) => {\r\n                  _args[_data[chain][facetGrp][facetTyp]['facet_arguments'][a]['name']] = _data[chain][facetGrp][facetTyp]['facet_arguments'][a]\r\n                })\r\n                _data[chain][facetGrp][facetTyp]['facet_arguments'] = _args\r\n              })\r\n            })\r\n          })\r\n          var keyChainGroup: any = \"\", keyFacetGroup: any = \"\", keyFacetType: any = \"\";\r\n          // eslint-disable-next-line\r\n          Object.keys(_data).map((chainGroup: any) => {\r\n            keyChainGroup = chainGroup;\r\n            // eslint-disable-next-line\r\n            Object.keys(_data[chainGroup]).map((facetGroup: any) => {\r\n              keyFacetGroup = facetGroup;\r\n              // eslint-disable-next-line\r\n              Object.keys(_data[chainGroup][facetGroup]).map((facetType: any) => {\r\n                keyFacetType = facetType;\r\n                // console.log(facetType);\r\n\r\n                if (facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType]) {\r\n                  //console.log(\"facet doc: \");\r\n                  //console.log(facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType].facet_documentation);\r\n                  var facetDoc: any = \"\";\r\n                  // eslint-disable-next-line\r\n                  Object.keys(facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType][\"facet_documentation\"]).map((docArrayVal: any) => {\r\n                    //console.log(\"docArrayVal: \");\r\n                    // console.log(docArrayVal);\r\n                    facetDoc += facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType][\"facet_documentation\"][docArrayVal][0];\r\n                    facetDoc += \" \" + facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType][\"facet_documentation\"][docArrayVal][1] + \"\\n\";\r\n                  });\r\n                  _data[keyChainGroup][keyFacetGroup][keyFacetType].documentation = facetDoc;\r\n\r\n                  var facetExample: any = \"\";\r\n                  // eslint-disable-next-line\r\n                  Object.keys(facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType][\"facet_examples\"]).map((docArrayVal: any) => {\r\n                    //console.log(\"docArrayVal: \");\r\n                    //console.log(docArrayVal);\r\n                    //facetExample += facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType][\"facet_examples\"][docArrayVal][0];\r\n                    facetExample += \"\" + facetDocumentstions[keyChainGroup][keyFacetGroup][keyFacetType][\"facet_examples\"][docArrayVal][1] + \"\\n\";\r\n                  });\r\n                  _data[keyChainGroup][keyFacetGroup][keyFacetType].documentation = facetDoc + \"Example:\\n\" + facetExample;\r\n                  //_data[keyChainGroup][keyFacetGroup][keyFacetType].examples = facetExample;\r\n                }\r\n              });\r\n            });\r\n            if(keyChainGroup === 'INPUT') {\r\n              _data[keyChainGroup] = {\r\n                ..._data[keyChainGroup],\r\n                CONNECTOR: {\r\n                  API: {\r\n                    \"facet_arguments\": {\r\n                      \"api_template\": {\r\n                        \"argument_type\":\"TEXT\",\r\n                        \"children\":{},\r\n                        \"have_options\":true,\r\n                        \"is_list\":false,\r\n                        \"is_required\":true,\r\n                        \"name\":\"api_template\",\r\n                        \"options\":[\"Custom\", \"Google Sheets\", \"Connector\"]\r\n                      },\r\n                      \"url\": {\r\n                        \"argument_type\":\"TEXT\",\r\n                        \"children\":{},\r\n                        \"have_options\":false,\r\n                        \"is_list\":false,\r\n                        \"is_required\":false,\r\n                        \"name\":\"url\"\r\n                      },\r\n                      \"worksheet_index\": {\r\n                        \"argument_type\":\"NUMBER\",\r\n                        \"children\":{},\r\n                        \"have_options\":false,\r\n                        \"is_list\":false,\r\n                        \"is_required\":false,\r\n                        \"name\":\"worksheet_index\"\r\n                      },\r\n                      /*\"request_type\": {\r\n                        \"argument_type\":\"TEXT\",\r\n                        \"children\":{},\r\n                        \"have_options\":true,\r\n                        \"is_list\":false,\r\n                        \"is_required\":false,\r\n                        \"name\":\"request_type\",\r\n                        \"options\":[\"GET\", \"POST\"]\r\n                      },*/\r\n                      /*\"key\": {\r\n                        \"argument_type\":\"TEXT\",\r\n                        \"children\":{},\r\n                        \"have_options\":false,\r\n                        \"is_list\":false,\r\n                        \"is_required\":false,\r\n                        \"name\":\"key\"\r\n                      },*/\r\n                      \"dataset\": {\r\n                        \"argument_type\":\"TEXT\",\r\n                        \"children\":{},\r\n                        \"have_options\":false,\r\n                        \"is_list\":false,\r\n                        \"is_required\":false,\r\n                        \"name\":\"dataset\"\r\n                      },\r\n                      \"columns\": {\r\n                        \"argument_type\":\"TEXT\",\r\n                        \"children\":{},\r\n                        \"have_options\":false,\r\n                        \"is_list\":true,\r\n                        \"is_required\":false,\r\n                        \"name\":\"columns\"\r\n                      },\r\n                      \"limit\": {\r\n                        \"argument_type\":\"NUMBER\",\r\n                        \"children\":{},\r\n                        \"have_options\":false,\r\n                        \"is_list\":false,\r\n                        \"is_required\":false,\r\n                        \"name\":\"limit\"\r\n                      },\r\n                      /*\"api_parameters\": {\r\n                        \"argument_type\":\"MAP\",\r\n                        \"children\": {\r\n                          \"name\": {\r\n                            \"argument_type\":\"TEXT\",\r\n                            \"children\":{},\r\n                            \"have_options\":false,\r\n                            \"is_list\":false,\r\n                            \"is_required\":false,\r\n                            \"name\":\"name\"\r\n                          },\r\n                          \"value\": {\r\n                            \"argument_type\":\"TEXT\",\r\n                            \"children\":{},\r\n                            \"have_options\":false,\r\n                            \"is_list\":false,\r\n                            \"is_required\":false,\r\n                            \"name\":\"value\"\r\n                          }\r\n                        },\r\n                        \"have_options\":false,\r\n                        \"is_list\":true,\r\n                        \"is_required\":false,\r\n                        \"name\":\"api_parameters\"\r\n                      },*/\r\n                      \"libraries\": {\r\n                        \"argument_type\": \"TEXT\",\r\n                        \"children\": {},\r\n                        \"have_options\": false,\r\n                        \"is_list\": true,\r\n                        \"is_required\": false,\r\n                        \"name\": \"libraries\"\r\n                      },\r\n                      \"script\": {\r\n                        \"argument_type\": \"TEXT\",\r\n                        \"children\": {},\r\n                        \"have_options\": false,\r\n                        \"is_list\": false,\r\n                        \"is_required\": false,\r\n                        \"name\": \"script\"\r\n                      }\r\n                    },\r\n                    \"facet_info\": {\r\n                      \"chain_group\": \"INPUT\",\r\n                      \"facet_group\": \"CUSTOM\",\r\n                      \"facet_type\": \"PYTHON_SCRIPT\",\r\n                      \"custom_chain_group\": \"INPUT\",\r\n                      \"custom_facet_group\": \"CONNECTOR\",\r\n                      \"custom_facet_type\": \"API\"\r\n                    },\r\n                    \"facet_requirement\": {\r\n                      \"max_child_count\": 1,\r\n                      \"max_parent_count\": 0,\r\n                      \"min_child_count\": 1,\r\n                      \"min_parent_count\": 0\r\n                    },\r\n                    \"in_arrow_arguments\": [],\r\n                    \"out_arrow_arguments\": [],\r\n                    \"documentation\": \"# API CONNECTOR\\n> ...\\n## How To Set Arguments\\n### Facet Arguments\\n> ...\\nExample:\\nhttp://d18f1dd5shmawi.cloudfront.net/images/image_input_python_script_4.png\\n\"\r\n                  }\r\n                }\r\n              }\r\n              //console.log(componentsByGroup.INPUT);\r\n            }\r\n          });\r\n          //console.log(\"getFacetDoc: \");\r\n          //console.log(_data);\r\n          resolve(_data);\r\n        });\r\n      } else {\r\n        reject('Can not load facet data');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const createPipeline = (flowObj: any): Promise<object> => {\r\n  // Need to pass an empty flow object\r\n  //var date = getCurrentDate();\r\n  const { name, projectId, definition } = flowObj;\r\n  var data = {\r\n    pipeline: {\r\n      name: name,\r\n      project_id: projectId,\r\n      schedule: {\r\n        name: '',\r\n        cron: '',\r\n        start_time: '',\r\n        end_time: ''\r\n      },\r\n      definition: definition ? definition : {} //,\r\n      // title: 'Flow Title',\r\n      // createdAt: date,\r\n      // modifiedAt: date\r\n    }\r\n  };\r\n  const promise: Promise<object> = new Promise<object>(resolve => {\r\n    _axios.post(`${API_BASE}/create-pipeline`, data).then(res => {\r\n      //console.log(\"res.data: \" + res.data.pipeline_id);\r\n      //console.log(res.data)\r\n      resolve(res.data.pipeline_id);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getPipeline = (id: string): Promise<object> => {\r\n  const promise: Promise<object> = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get(`${API_BASE}/get-pipeline`, { params: { pipeline_id: id } })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Could not get pipeline with id: ' + id);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        reject('Could not get pipeline with id: ' + id);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getSuggesstions = (data: any): Promise<object> => {\r\n  //console.log(data);\r\n\r\n  const promise: Promise<object> = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post(`${API_BASE}/browse-header`, data)\r\n      .then((res: any) => {\r\n        //console.log(res);\r\n\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Could not get pipeline with id: ');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        //reject('Could not get pipeline with id: ');\r\n        if (error && error !== \"\") {\r\n          if (error.response && error.response !== \"\") {\r\n            reject(error.response.status);\r\n          } else {\r\n            reject(504);\r\n          }\r\n        } else {\r\n          reject(504);\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n\r\n}\r\nexport const sendAppData = (pipelineId: any): Promise<object> => {\r\n  var data = {\r\n    pipeline: {\r\n      pipeline_id: pipelineId\r\n    }\r\n  };\r\n  const promise = new Promise<object>(resolve => {\r\n    _axios.post('/run-pipeline', data).then((res: any) => {\r\n      resolve(res.data);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getFlows = (projectId: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId\r\n  };\r\n  return _axios.get('/get-pipelines-for-project', { params: data });\r\n};\r\n\r\nexport const deletePipeline = (pipelineId: string): Promise<object> => {\r\n  var data = {\r\n    pipeline: {\r\n      pipeline_id: pipelineId\r\n    }\r\n  };\r\n  const promise: Promise<object> = new Promise<object>(resolve => {\r\n    _axios.post('/delete-pipeline', data).then((res: any) => {\r\n      resolve(res.data);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const saveFlow = (pipeline: any): Promise<object> => {\r\n  //pipeline.definition.facets = [];\r\n  //console.log(\"SERVICES pipeline: \");\r\n  //console.log(pipeline);\r\n  const promise = new Promise<object>(resolve => {\r\n    _axios.post('/edit-pipeline', { pipeline: pipeline }).then((res: any) => {\r\n      resolve(res.data);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getPipelineSpecs = (): Promise<object> => {\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.get('/get-pipeline-specs').then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data.pipeline_arguments);\r\n      } else {\r\n        reject('Error loading projects');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getProjects = (): Promise<object> => {\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.get('/get-projects-for-user').then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data.projects);\r\n      } else {\r\n        reject('Error loading projects');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getProject = (projectId: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId,\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.get('/get-project', { params: data }).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Error loading projects');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const createProject = (name: string): Promise<object> => {\r\n  var data = {\r\n    project: {\r\n      name: name\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/create-project', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data.project_id);\r\n      } else {\r\n        reject('Error creating project.');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const duplicateProject = (projectId: string, name: string, targetEmailInserted: string): Promise<object> => {\r\n  var state = store.getState();\r\n  var targetEmail: string = targetEmailInserted !== '' ? targetEmailInserted : state.userReducerState.email;\r\n  //console.log(\"SERVICES - projectId: \" + projectId + \", name: \" + name + \", email: \" + targetEmail);\r\n  var data = {\r\n    project: {\r\n      project_id: projectId,\r\n      name: name\r\n    },\r\n    user: {\r\n      email: targetEmail\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/duplicate-project', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data.project_id);\r\n      } else {\r\n        reject('Error duplicating project.');\r\n      }\r\n    }).catch((error: any) => {\r\n      reject(error.response.status);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const deleteProject = (projectId: string): Promise<object> => {\r\n  var data = {\r\n    project: {\r\n      project_id: projectId\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/delete-project', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        //console.log(\"delete: \");\r\n        //console.log(res.data);\r\n        resolve(res.data.project_id);\r\n      } else {\r\n        reject('Error deleting project.');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const renameProject = (\r\n  projectId: string,\r\n  newName: string\r\n): Promise<object> => {\r\n  var state = store.getState();\r\n  //console.log(\"SERVICES - projectId: \" + projectId + \", newName: \" + newName + \", email: \" + state.userReducerState.emai);\r\n  var data = {\r\n    project: {\r\n      project_id: projectId,\r\n      name: newName,\r\n      owner: state.userReducerState.email\r\n    }\r\n  };\r\n  var promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/edit-project', data).then((res: any) => {\r\n      //console.log(\"Renamed: \" + res.data.project_id);\r\n      if (res.status === 200) {\r\n        resolve(res.data.project_id);\r\n      } else {\r\n        reject('Error renaming project.');\r\n      }\r\n    });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const shareProject = (\r\n  projectId: string,\r\n  targetUser: string\r\n): Promise<object> => {\r\n  var data = {\r\n    project: {\r\n      project_id: projectId\r\n    },\r\n    user: {\r\n      email: targetUser\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/share-project', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject('Error: Unable to share project!');\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        reject(error.response.status);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getDatasetsForProject = (projectId: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-datasets-for-project', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data.datasets);\r\n          //console.log(\"DATASETS: \");\r\n          //console.log(res.data.datasets);\r\n        } else {\r\n          reject('Erorr: Unable to get datasets for project!');\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const getDashboardsForProject = (projectId: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-dashboards-for-project', { params: data })\r\n      .then((res: any) => {\r\n        //console.log('***',res);\r\n\r\n        if (res.status === 200) {\r\n          resolve(res.data.dashboards);\r\n          //console.log(\"DATASETS: \");\r\n          //console.log(res.data.datasets);\r\n        } else {\r\n          reject('Erorr: Unable to get dashboards for project!');\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\nexport const createDashboard = (name: string, projectId: string, datasetId: any) => {\r\n  var data = {\r\n    dashboard: {\r\n      dataset_id: datasetId,\r\n      name: name,\r\n      project_id: projectId\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/create-dashboard', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Unable to create dashboard');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\nexport const createDataset = (datasetName: string, projectId: string) => {\r\n  var data = {\r\n    dataset: {\r\n      name: datasetName,\r\n      project_id: projectId\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/create-dataset', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Unable to create dataset');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\nexport const uploadDataset = (\r\n  datasetId: string,\r\n  dataset_name: string,\r\n  project_id: string,\r\n  file: File,\r\n  datasetOverwrite: boolean\r\n) => {\r\n  //console.log(\"dataset_id: \" + datasetId + \", dataset_name: \" + dataset_name + \", project_id: \" + project_id + \", datasetOverwrite: \" + datasetOverwrite + \", file: \" + file.name);\r\n  var retryFun = () => {\r\n    store.dispatch(editDatasetActionStart(project_id, datasetId, dataset_name, file))\r\n  }\r\n\r\n  var cancelFun = () => {\r\n    store.dispatch(deleteDatasetActionStart(datasetId))\r\n  }\r\n\r\n  store.dispatch(uploadDatasetProgress(0, datasetId, dataset_name, 'uploading', retryFun, cancelFun))\r\n  getDatasetUploadUrl(datasetId, file.name).then((dUploadUrlRes: any) => {\r\n    store.dispatch(uploadDatasetProgress(0, datasetId, dataset_name, 'uploading', retryFun, cancelFun))\r\n    var updateFun = (percent: number) => {\r\n      store.dispatch(uploadDatasetProgress(percent, datasetId, dataset_name, 'uploading', retryFun, cancelFun))\r\n    }\r\n    uploadDatasetWithURL(dUploadUrlRes.url, dUploadUrlRes.content_type, file, updateFun).then((dUploadWithUrlRes: any) => {\r\n      store.dispatch(uploadDatasetProgress(100, datasetId, dataset_name, 'Processing', retryFun, cancelFun))\r\n      confirmDatasetUpload(datasetId, file.name).then((confirmDUploadRes: any) => {\r\n        store.dispatch(uploadDatasetProgress(100, datasetId, dataset_name, 'complete', retryFun, cancelFun))\r\n      }).catch((err) => {\r\n        store.dispatch(uploadDatasetProgress(0, datasetId, dataset_name, 'failed', retryFun, cancelFun))\r\n      });\r\n    }).catch((err) => {\r\n      store.dispatch(uploadDatasetProgress(0, datasetId, dataset_name, 'failed', retryFun, cancelFun))\r\n    });\r\n  }).catch((err) => {\r\n    store.dispatch(uploadDatasetProgress(0, datasetId, dataset_name, 'failed', retryFun, cancelFun))\r\n  });\r\n}\r\nexport const getDatasetUploadUrl = (\r\n  datasetId: string,\r\n  datasetFilename: string,\r\n) => {\r\n  var data = {\r\n    dataset_id: datasetId,\r\n    filename: datasetFilename\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-dataset-upload-url', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Erorr: Unable to get getDatasetUploadUrl!');\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n}\r\nexport const uploadDatasetWithURL = (\r\n  datasetUploadUrl: string,\r\n  datasetContentType: string,\r\n  datasetFile: File,\r\n  updatePercent: any\r\n) => {\r\n  var options = {\r\n    headers: {\r\n      \"Content-Type\": datasetContentType,\r\n    },\r\n    onUploadProgress: (progressEvent: any) => {\r\n      var percentCompleted = (progressEvent.loaded * 100) / progressEvent.total\r\n      updatePercent(percentCompleted)\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    axios.put(datasetUploadUrl, datasetFile, options).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Erorr: Unable to upload Dataset file!');\r\n      }\r\n    }).catch((err) => {\r\n      reject('Erorr: Unable to upload Dataset file!');\r\n    });\r\n  });\r\n  return promise;\r\n}\r\nexport const confirmDatasetUpload = (\r\n  datasetId: string,\r\n  datasetFilename: string,\r\n) => {\r\n  var data = {\r\n    dataset_id: datasetId,\r\n    filename: datasetFilename\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/confirm-dataset-upload', { params: data })\r\n      .then((res: any) => {\r\n        //console.log('***',res);\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n          //console.log(\"confirmDatasetUpload 200 response: \");\r\n          //console.log(res.data);\r\n        } else {\r\n          reject('Erorr: Unable to get confirmDatasetUpload!');\r\n        }\r\n      }).catch((err) => {\r\n        reject('Erorr: Unable to get confirmDatasetUpload!')\r\n      });\r\n  });\r\n\r\n  return promise\r\n}\r\n/* export const uploadDataset = (\r\n  datasetId: string,\r\n  dataset_name: string,\r\n  project_id: string,\r\n  file: File,\r\n  datasetOverwrite: boolean,\r\n  pn?:number\r\n) => {\r\n  var fileSize:number = file.size\r\n  var sliceSize:number = 3000000 // 3 Mb (3*1000*1000)\r\n  var start:number = pn?(pn-1) * sliceSize: 0\r\n  var end:number = start+sliceSize\r\n  var package_number:number = pn?pn : 1\r\n  var total_packages:number = Math.ceil((fileSize/sliceSize))\r\n  var percentCompleted = ((package_number-1)/total_packages)*100\r\n  const promise = new Promise<object>(async(resolve, reject) => {\r\n  store.dispatch(uploadDatasetProgress(percentCompleted,package_number,datasetId,dataset_name,'uploading',()=>{},()=>{}))\r\n  \r\n  if(fileSize < sliceSize){\r\n    var fData = new FormData();\r\n    //console.log(\"dataset_id: \" + datasetId + \", dataset_name: \" + dataset_name + \", project_id: \" + project_id + \", datasetOverwrite: \" + datasetOverwrite + \", file: \" + file);\r\n    var bData = {\r\n      dataset_id: datasetId,\r\n      overwrite: datasetOverwrite\r\n    };\r\n    var dData = new Blob([JSON.stringify(bData)], {\r\n      type: 'application/json'\r\n    });\r\n    fData.append('file', file, file.name);\r\n    fData.append('data', dData);\r\n    store.dispatch(uploadDatasetProgress(percentCompleted,package_number,datasetId,dataset_name,'uploading',()=>{},()=>{}))\r\n    _axios.post('/upload-dataset', fData).then((res: any) => {\r\n      if (res.status === 200) {\r\n        store.dispatch(uploadDatasetProgress(100,package_number,datasetId,dataset_name,'complete',()=>{},()=>{}))\r\n        resolve(res.data);\r\n      } else {\r\n        store.dispatch(uploadDatasetProgress(0,package_number,datasetId,dataset_name,'failed',()=>{\r\n          resolve(uploadDataset(datasetId,dataset_name,project_id,file,datasetOverwrite,1))\r\n        },()=>{\r\n          store.dispatch(uploadDatasetProgress(0,1,datasetId,dataset_name,'deleted',()=>{},()=>{}))\r\n          resolve(deleteDataset(datasetId)\r\n        )}))\r\n      }\r\n    });\r\n  }else{\r\n    var s = slice(file,start,end)\r\n    var bodyData = {\r\n      \"dataset_id\": datasetId,\r\n      \"overwrite\": true,\r\n      \"start_bytes\": start,\r\n      \"package_number\": package_number,\r\n      \"final_package_flag\": (fileSize - end) <= 0\r\n    }\r\n    var datasetData = new Blob([JSON.stringify(bodyData)], {\r\n      type: 'application/json'\r\n    });\r\n    // console.log(bodyData);\r\n    \r\n    var formData:any = new FormData()\r\n    formData.append('file', s, file.name);\r\n    formData.append('data', datasetData);\r\n    await _axios.post('/stream-upload-dataset',formData).then((res:any)=>{\r\n      // console.log(res);\r\n      \r\n      if(res.status===200){\r\n        var percentCompleted = (package_number/total_packages)*100\r\n        store.dispatch(uploadDatasetProgress(percentCompleted,package_number,datasetId,dataset_name,'uploading',()=>{},()=>{}))\r\n        if((fileSize - end)<= 0){\r\n          store.dispatch(uploadDatasetProgress(percentCompleted,package_number,datasetId,dataset_name,'Processing',()=>{},()=>{}))\r\n          isStreamUploadRunning(datasetId).then((res:any)=>{\r\n            store.dispatch(uploadDatasetProgress(100,package_number,datasetId,dataset_name,'complete',()=>{},()=>{}))\r\n            resolve(res.data)\r\n          }).catch((err:any)=>{\r\n            store.dispatch(uploadDatasetProgress(0,1,datasetId,dataset_name,'failed',()=>resolve(uploadDataset(datasetId,dataset_name,project_id,file,datasetOverwrite,1)),()=>{\r\n            store.dispatch(uploadDatasetProgress(0,1,datasetId,dataset_name,'deleted',()=>{},()=>{}))\r\n            resolve(deleteDataset(datasetId)\r\n          )}))\r\n          })\r\n        }else{\r\n          resolve(uploadDataset(datasetId,dataset_name,project_id,file,datasetOverwrite,package_number+1))\r\n        }\r\n        start += sliceSize\r\n      }else{\r\n        package_number-=1\r\n        end -=sliceSize\r\n        var percentCompleted = (package_number/total_packages)*100\r\n        store.dispatch(uploadDatasetProgress(0,1,datasetId,dataset_name,'failed',()=>resolve(uploadDataset(datasetId,dataset_name,project_id,file,datasetOverwrite,1)),()=>{\r\n          store.dispatch(uploadDatasetProgress(0,1,datasetId,dataset_name,'deleted',()=>{},()=>{}))\r\n          resolve(deleteDataset(datasetId)\r\n          )}))\r\n        reject(res.status)\r\n      }\r\n    }).catch((err:any)=>{\r\n      start -=sliceSize\r\n      package_number-=1\r\n      end -=sliceSize\r\n      var percentCompleted = (package_number/total_packages)*100\r\n      store.dispatch(uploadDatasetProgress(0,1,datasetId,dataset_name,'failed',()=>resolve(uploadDataset(datasetId,dataset_name,project_id,file,datasetOverwrite,1)),()=>{\r\n            store.dispatch(uploadDatasetProgress(0,1,datasetId,dataset_name,'deleted',()=>{},()=>{}))\r\n            resolve(deleteDataset(datasetId)\r\n          )}))\r\n      end = fileSize\r\n      reject(500)\r\n\r\n    })\r\n    package_number+=1\r\n    end += sliceSize\r\n  }  \r\n \r\n    return promise;\r\n}*/\r\nexport const uploadDashboard = (\r\n  dashboardId: string,\r\n  file: File,\r\n  datasetOverwrite: boolean\r\n) => {\r\n  //console.log(\"dataset_id: \" + datasetId + \", dataset_name: \" + dataset_name + \", project_id: \" + project_id + \", datasetOverwrite: \" + datasetOverwrite + \", file: \" + file.name);\r\n  getDashboardUploadUrl(dashboardId, file.name).then((dUploadUrlRes: any) => {\r\n    uploadDashboardWithURL(dUploadUrlRes.url, dUploadUrlRes.content_type, file).then((dUploadWithUrlRes: any) => {\r\n      confirmDashboardUpload(dashboardId, file.name).then((confirmDUploadRes: any) => {\r\n\r\n      });\r\n    });\r\n  });\r\n}\r\nexport const getDashboardUploadUrl = (\r\n  dashboardId: string,\r\n  dashboardFilename: string,\r\n) => {\r\n  var data = {\r\n    dashboard_id: dashboardId,\r\n    filename: dashboardFilename\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-dashboard-upload-url', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Erorr: Unable to get Dashboard upload link!');\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n}\r\nexport const uploadDashboardWithURL = (\r\n  dashboardUploadUrl: string,\r\n  dashboardContentType: string,\r\n  dashboardFile: File,\r\n) => {\r\n  var options = {\r\n    headers: {\r\n      \"Content-Type\": dashboardContentType\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    axios.put(dashboardUploadUrl, dashboardFile, options).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Erorr: Unable to upload Dashboard file!');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n}\r\nexport const confirmDashboardUpload = (\r\n  dashboardId: string,\r\n  dashboardFilename: string,\r\n) => {\r\n  var data = {\r\n    dashboard_id: dashboardId,\r\n    filename: dashboardFilename\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/confirm-dashboard-upload', { params: data })\r\n      .then((res: any) => {\r\n        //console.log('***',res);\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n          //console.log(\"confirmDatasetUpload 200 response: \");\r\n          //console.log(res.data);\r\n        } else {\r\n          reject('Erorr: Unable to get download confirmation!');\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise\r\n}\r\n/*export const uploadDashboard = (\r\n  dashboardId: string,\r\n  file: File,\r\n  datasetOverwrite: boolean\r\n) => {\r\n  const formData = new FormData();\r\n  //console.log(\"dataset_id: \" + datasetId + \", dataset_name: \" + dataset_name + \", project_id: \" + project_id + \", datasetOverwrite: \" + datasetOverwrite + \", file: \" + file);\r\n  var bodyData = {\r\n    dashboard_id: dashboardId,\r\n    overwrite: datasetOverwrite\r\n  };\r\n  var dashData = new Blob([JSON.stringify(bodyData)], {\r\n    type: 'application/json'\r\n  });\r\n  formData.append('file', file, file.name);\r\n  formData.append('data', dashData);\r\n  //console.log(formData,bodyData);\r\n  \r\n  const promise = new Promise<object>((resolve, reject) => {\r\n      _axios.post('/upload-dashboard', formData).then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n          //console.log(\"upload-dataset response: \");\r\n          //console.log(res.data.dataset_id);\r\n        } else {\r\n          reject('Unable to create dashboard');\r\n        }\r\n      });\r\n    });\r\n    return promise;\r\n}*/\r\n\r\nexport const deleteDataset = (datasetId: string) => {\r\n  const data = {\r\n    dataset: {\r\n      dataset_id: datasetId\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/delete-dataset', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Unable to delete dataset');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const deleteDashboard = (dashboardId: string) => {\r\n  const data = {\r\n    dashboard: {\r\n      dashboard_id: dashboardId\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/delete-dashboard', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Unable to delete dashboard');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const editDataset = (\r\n  datasetId: string,\r\n  name: string,\r\n  projectId: string\r\n) => {\r\n  const data = {\r\n    dataset: {\r\n      dataset_id: datasetId,\r\n      name: name,\r\n      project_id: projectId\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/edit-dataset', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Unable to edit dataset');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const editDashboard = (\r\n  datasetId: any,\r\n  name: string,\r\n  projectId: string,\r\n  dashboardId: string,\r\n  file_name: string,\r\n) => {\r\n  const data = {\r\n    dashboard: {\r\n      dataset_id: datasetId,\r\n      name: name,\r\n      project_id: projectId,\r\n      dashboard_id: dashboardId,\r\n      filename: file_name,\r\n    }\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.post('/edit-dashboard', data).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n      } else {\r\n        reject('Unable to edit dashboard');\r\n      }\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getDataset = (datasetId: string) => {\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-dataset', {\r\n        params: {\r\n          dataset_id: datasetId\r\n        }\r\n      })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          //console.log(\"SERVICES getDataset - res.data: \");\r\n          //console.log(res.data);\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Unable to get dataset');\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getDashboard = (dashboardId: string) => {\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-dashboard', {\r\n        params: {\r\n          dashboard_id: dashboardId\r\n        }\r\n      })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Unable to get dashboard');\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const downloadDataset = (\r\n  name: string,\r\n  projectId: string,\r\n  datasetId: string\r\n) => {\r\n  var data = {\r\n    dataset_id: datasetId\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.get('/get-dataset-download-url', { params: data }).then((res: any) => {\r\n        if (res.status === 200) {\r\n          //resolve(res.data);\r\n          var datasetDownloadURL = res.data.url;\r\n          var datasetFilename = res.data.filename;\r\n          var datasetContentType = res.data.content_type;\r\n          downloadDatasetWithURL(datasetDownloadURL, datasetFilename, datasetContentType).then((downloadDatasetWithURLRes: any) => {\r\n            var downloadDatasetObject = {\r\n              file: downloadDatasetWithURLRes,\r\n              fullFileName: datasetFilename,\r\n              fileType: datasetContentType,\r\n              fileUrl: datasetDownloadURL\r\n            }\r\n            resolve(downloadDatasetObject);\r\n          });\r\n        } else {\r\n          reject('Erorr: Unable to get Dataset download link!');\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n\r\n  /*const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/download-dataset', data, {\r\n        headers: {\r\n          responseType: 'stream',\r\n          'Cache-Control': 'no-cache'\r\n        }\r\n      })\r\n      .then((res: any) => {\r\n        console.log(res);\r\n        \r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Unable to get dataset');\r\n        }\r\n      });\r\n  });\r\n  return promise;*/\r\n};\r\n\r\nexport const downloadDatasetWithURL = (\r\n  datasetDownloadUrl: string,\r\n  datasetFilename: string,\r\n  datasetContentType: string\r\n) => {\r\n  // eslint-disable-next-line\r\n  var data = {\r\n    filename: datasetFilename\r\n  };\r\n  /*\r\n  Content-Disposition: \"attachment;filename=report.xls\"\r\n  Content-Type: \"application/octet-stream\" // or Content-type: \"application/vnd.ms-excel\"\r\n  */\r\n  var options = {\r\n    headers: {\r\n      'Accept': datasetContentType,\r\n      //'Content-Type': datasetContentType,\r\n      'Content-Type': 'application/json',\r\n      //'Content-Type': \"application/octet-stream\", \r\n      //'Content-Disposition': \"attachment;filename=\"+datasetFilename,\r\n    },\r\n    transformRequest: (data: any, headers: any) => {\r\n      headers['Accept'] = datasetContentType; \r\n      //headers['Content-Type'] = datasetContentType; \r\n      headers['Content-Type'] = 'application/json'; \r\n      //headers['Content-Type'] = \"application/octet-stream\"; \r\n      //headers['Content-Disposition'] = \"attachment;filename=\"+datasetFilename;   \r\n      return data;\r\n    },\r\n    transformResponse: (data: any, headers: any) => {\r\n      //console.log(data) // this should now be JSON\r\n      headers.responseType = 'blob'\r\n      //headers.responseType = 'arraybuffer'\r\n      return data;\r\n    }\r\n  };\r\n  //var contentType = null;\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    try {\r\n      fetch(datasetDownloadUrl, options)\r\n      .then((response: any) => {\r\n        //console.log(\"response: \", response);\r\n        if (response.ok) {\r\n          //contentType = response.headers.get('content-type');\r\n          //console.log(\"contentType: \", contentType);\r\n          return response.blob();\r\n        }else {\r\n          reject('Erorr: Unable to download Dataset!');\r\n        }\r\n      }).then((blob: any) => {\r\n        var res = {\r\n          blobFile: blob,\r\n          fileName: datasetFilename\r\n        }\r\n        resolve(res);\r\n        //console.log(\"blob: \", blob);\r\n        // download(blob, 'file.pdf', contentType);\r\n        /*var link = document.createElement('a');\r\n        link.download = 'IkigaiLabs_' + datasetFilename;\r\n        link.setAttribute(\"download\", 'IkigaiLabs_' + datasetFilename);\r\n        //link.href = res.fileUrl;\r\n        link.href = URL.createObjectURL(blob);\r\n        link.click();*/\r\n      });\r\n    } catch (err) {\r\n      reject('Erorr: Unable to download Dataset!');\r\n    }\r\n\r\n    /*axios.get(datasetDownloadUrl, options).then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject('Erorr: Unable to download Dataset!');\r\n        }\r\n    });*/\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const browseDataset = (\r\n  datasetId: string,\r\n  projectId: string\r\n): Promise<object> => {\r\n  //console.log(\"datasetId: \" + datasetId + \", projectId: \" + projectId)\r\n  var data = {\r\n    dataset_id: datasetId,\r\n    project_id: projectId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/browse-dataset', data, {\r\n        cancelToken: source.token\r\n      })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data.url);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        reject(err);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const finishBrowseDataset = (\r\n  datasetId: string,\r\n  projectId: string\r\n): Promise<object> => {\r\n  //console.log(\"datasetId: \" + datasetId + \", projectId: \" + projectId)\r\n  var data = {\r\n    dataset_id: datasetId,\r\n    project_id: projectId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/finish-browse-dataset', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data.url);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        reject(err);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getDatasetData = (url: string): Promise<object> => {\r\n  //console.log(\"url: \" + url);\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    /*_axios\r\n      .get(url)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n          console.log(\"getDatasetData response: \");\r\n          console.log(res);\r\n        } else {\r\n          reject('Error: Unable to get pipeline logs!');\r\n        }\r\n      }).catch((err: any) => {\r\n        console.log(\"err res: \");\r\n        console.log(err);\r\n        reject(err);\r\n      });*/\r\n\r\n    axios.get(url).then((res: any) => {\r\n      //console.log(\"res: \");\r\n      //console.log(res.data);\r\n      if (res.status === 200) {\r\n        //console.log(\"getDatasetData res: \");\r\n        //console.log(res.data);\r\n        resolve(res.data);\r\n      } else {\r\n        reject(res.status);\r\n      }\r\n    }).catch((err: any) => {\r\n      //console.log(\"getDatasetData err res: \");\r\n      //console.log(err);\r\n      reject(err);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getDatasetCleanFunctions = (): Promise<object> => {\r\n  //console.log(\"url: \" + url);\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.get('/get-clean-dataset-options').then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res);\r\n        //console.log(\"getDatasetCleanFunctions response: \");\r\n        //console.log(res);\r\n      } else {\r\n        reject('Error: Unable to get dataset functionalities!');\r\n      }\r\n    }).catch((err: any) => {\r\n      //console.log(\"err res: \");\r\n      //console.log(err);\r\n      reject(err);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const getDatasetHeader = (datasetId: string): Promise<object> => {\r\n  //console.log(\"url: \" + url);\r\n  var data = {\r\n    dataset_id: datasetId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios.get('/get-dataset-header', { params: data }).then((res: any) => {\r\n      if (res.status === 200) {\r\n        resolve(res.data);\r\n        //console.log(\"getDatasetCleanFunctions response: \");\r\n        //console.log(res);\r\n      } else {\r\n        reject('Error: Unable to get dataset header!');\r\n      }\r\n    }).catch((err: any) => {\r\n      //console.log(\"err res: \");\r\n      //console.log(err);\r\n      reject(err);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const cleanDataset = (datasetId: string, projectId: string, cleanOption: string, columnName: string, uType: string, uFormat: string): Promise<object> => {\r\n  //console.log(\"datasetId: \" + datasetId + \", projectId: \" + projectId + \", cleanOption: \" + cleanOption + \", columnName: \" + columnName + \", uType: \" + uType + \", uFormat: \" + uFormat);\r\n  var data: any = {};\r\n  if (columnName === \"\" && uType === \"\" && uFormat === \"\") {\r\n    data = {\r\n      dataset_id: datasetId,\r\n      option: cleanOption,\r\n      arguments: {}\r\n    };\r\n  } else if (columnName !== \"\" && uType === \"\" && uFormat === \"\") {\r\n    data = {\r\n      dataset_id: datasetId,\r\n      option: cleanOption,\r\n      arguments: {\r\n        column_name: columnName\r\n      }\r\n    };\r\n  } else {\r\n    data = {\r\n      dataset_id: datasetId,\r\n      option: cleanOption,\r\n      arguments: {\r\n        column_name: columnName,\r\n        uniformization_type: uType,\r\n        uniformization_format: uFormat\r\n      }\r\n    };\r\n  }\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/clean-dataset', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        //reject(error.response.status);\r\n        //reject(error);\r\n        if (error && error !== \"\") {\r\n          if (error.response && error.response !== \"\") {\r\n            reject(error.response.status);\r\n          } else {\r\n            reject(504);\r\n          }\r\n        } else {\r\n          reject(504);\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const saveDataset = (\r\n  datasetId: string,\r\n  datasetOverwrite: boolean,\r\n  datasetNewName: string,\r\n  datasetNewId: string\r\n): Promise<object> => {\r\n  //console.log(\"datasetId: \" + datasetId + \", datasetOverwrite: \" + datasetOverwrite)\r\n  var data = {\r\n    dataset_id: datasetId,\r\n    new_dataset_name: datasetNewName\r\n  }\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/save-dataset', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        //reject(err);\r\n        if (err && err !== \"\") {\r\n          if (err.response && err.response !== \"\") {\r\n            reject(err.response.status);\r\n          } else {\r\n            reject(504);\r\n          }\r\n        } else {\r\n          reject(504);\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\n//Sessions API\r\nexport const enterSession = (projectId: string): Promise<object> => {\r\n  var data = {\r\n    project: {\r\n      project_id: projectId\r\n    }\r\n  };\r\n  //return _axios.post('/enter-session', data); \r\n  //return _axios.post('/enter-session', data);\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/enter-session', data, {\r\n        cancelToken: source.token\r\n      })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data.session_id);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (axios.isCancel(error)) {\r\n          console.log('post Request canceled');\r\n        } else {\r\n          reject(error);\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const exitSession = (projectId: string): Promise<object> => {\r\n  var data = {\r\n    project: {\r\n      project_id: projectId\r\n    }\r\n  };\r\n  return _axios.post('/exit-session', data);\r\n};\r\n\r\nexport const enterInteractiveSession = (\r\n  pipelineId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline: {\r\n      pipeline_id: pipelineId\r\n    }\r\n  };\r\n  return _axios.post('/enter-interactive-mode', data);\r\n};\r\n\r\nexport const exitInteractiveSession = (pipelineId: string): Promise<object> => {\r\n  var data = {\r\n    pipeline: {\r\n      pipeline_id: pipelineId\r\n    }\r\n  };\r\n  return _axios.post('/exit-interactive-mode', data);\r\n};\r\n\r\nexport const browseFacet = (\r\n  pipelineId: string,\r\n  projectId: string,\r\n  facetId: string,\r\n  parentFacetId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId,\r\n    project_id: projectId,\r\n    facet_id: facetId,\r\n    parent_facet_id: parentFacetId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/browse-facet', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (error && error !== \"\") {\r\n          if (error.response && error.response !== \"\") {\r\n            reject(error.response.status);\r\n          } else {\r\n            reject(504);\r\n          }\r\n        } else {\r\n          reject(504);\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const finishBrowseFacet = (\r\n  pipelineId: string,\r\n  projectId: string,\r\n  facetId: string,\r\n  parentFacetId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId,\r\n    project_id: projectId,\r\n    facet_id: facetId,\r\n    parent_facet_id: parentFacetId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/finish-browse-facet', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        reject(error.response.status);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const saveFacet = (\r\n  pipelineId: string,\r\n  projectId: string,\r\n  facetId: string,\r\n  parentFacetId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId,\r\n    project_id: projectId,\r\n    facet_id: facetId,\r\n    parent_facet_id: parentFacetId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/save-facet', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        reject(error.response.status);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const finishBrowseDashboard = (\r\n  dashboardId: string,\r\n  projectId: string,\r\n): Promise<object> => {\r\n  var data = {\r\n    dashboard_id: dashboardId,\r\n    project_id: projectId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/finish-browse-dashboard', data)\r\n      .then((res: any) => {\r\n        //console.log(res);\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        reject(error.response.status);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const browseHeader = (\r\n  pipelineId: string,\r\n  projectId: string,\r\n  facetId: string,\r\n  parentFacetId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId,\r\n    project_id: projectId,\r\n    source_facet_id: facetId,\r\n    destination_facet_id: parentFacetId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/browse-header', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        reject(error.response.status);\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const browseArrow = (\r\n  pipelineId: string,\r\n  projectId: string,\r\n  sourceFacetId: string,\r\n  destinationFacetId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId,\r\n    project_id: projectId,\r\n    source_facet_id: sourceFacetId,\r\n    destination_facet_id: destinationFacetId\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/browse-arrow', data)\r\n      .then((res: any) => {\r\n        //console.log(res);\r\n\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        //reject(error.response.status);\r\n        if (error && error !== \"\") {\r\n          if (error.response && error.response !== \"\") {\r\n            reject(error.response.status);\r\n          } else {\r\n            reject(504);\r\n          }\r\n        } else {\r\n          reject(504);\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const browseDashboard = (\r\n  projectId: string,\r\n  dashboardId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    dashboard_id: dashboardId,\r\n    project_id: projectId\r\n  }\r\n  //console.log(data);\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('browse-dashboard', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data)\r\n        } else {\r\n          reject(res.status)\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        //reject(error.response.status);\r\n        if (error && error !== \"\") {\r\n          if (error.response && error.response !== \"\") {\r\n            reject(error.response.status);\r\n          } else {\r\n            reject(504);\r\n          }\r\n        } else {\r\n          reject(504);\r\n        }\r\n      });\r\n  })\r\n  return promise;\r\n}\r\n\r\nexport const finishBrowseArrow = (\r\n  pipelineId: string,\r\n  projectId: string,\r\n  facetId: string,\r\n  parentFacetId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId,\r\n    project_id: projectId,\r\n    facet_id: facetId,\r\n    parent_facet_id: parentFacetId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/finish-browse-arrow', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject(res);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        reject(error.response.status);\r\n      });\r\n  })\r\n  return promise;\r\n}\r\n\r\nexport const peekArrow = (\r\n  pipelineId: string,\r\n  projectId: string,\r\n  sourceFacetId: string,\r\n  destinationFacetId: string\r\n): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId,\r\n    project_id: projectId,\r\n    source_facet_id: sourceFacetId,\r\n    destination_facet_id: destinationFacetId\r\n  };\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .post('/peek-arrow', data)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          reject(res.status);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        //reject(error.response.status);\r\n        if (error && error !== \"\") {\r\n          if (error.response && error.response !== \"\") {\r\n            reject(error.response.status);\r\n          } else {\r\n            reject(504);\r\n          }\r\n        } else {\r\n          reject(504);\r\n        }\r\n      });\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport const isPipelineRunning = (pipelineId: string): Promise<object> => {\r\n  var data = {\r\n    pipeline_id: pipelineId\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get(`${API_BASE}/is-pipeline-running`, { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject('Error: Unable to check if pipeline is running!');\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const isStreamUploadRunning = (datasetId: string): Promise<object> => {\r\n  var data = {\r\n    dataset_id: datasetId\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get(`${API_BASE}/is-stream-upload-running`, { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          if (res.data.status === true) {\r\n            setTimeout(() => { resolve(isStreamUploadRunning(datasetId)) }, 3000)\r\n          } else {\r\n            resolve(res)\r\n          }\r\n        } else {\r\n          reject('Error: Unable to check if upload is running!');\r\n        }\r\n      }).catch((err: any) => {\r\n        reject('Error: Unable to check if upload is running!')\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const getPipelineLog = (pipelineId: string): Promise<object> => {\r\n  //console.log(\"pipelineId: \" + pipelineId);\r\n  var data = {\r\n    pipeline_id: pipelineId\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get(`${API_BASE}/get-pipeline-log`, { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res);\r\n        } else {\r\n          reject('Error: Unable to get pipeline logs!');\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\n// function slice(file: any, start: number, end: number) {\r\n//   var slice = file.mozSlice ? file.mozSlice :\r\n//     file.webkitSlice ? file.webkitSlice :\r\n//       file.slice ? file.slice : () => { };\r\n//   return slice.bind(file)(start, end, file.type);\r\n// }\r\n\r\nexport const cancelAPIrequestFunction = () => {\r\n  console.log(\"cancel apis!\")\r\n  source.cancel(\"Operation canceled by the user.\");\r\n};\r\n\r\nexport const getPastScheduleForUser = (projectId: string, pipelineId: string, countLogs: number, statusOfLogs: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId,\r\n    pipeline_id: pipelineId,\r\n    count: countLogs,\r\n    status: statusOfLogs\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-past-schedule-for-user', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          //reject('Erorr: Unable to get past schedules for this account!');\r\n          reject(res.status);\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const getPastScheduleForProject = (projectId: string, pipelineId: string, countLogs: number, statusOfLogs: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId,\r\n    pipeline_id: pipelineId,\r\n    count: countLogs,\r\n    status: statusOfLogs\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-past-schedule-for-project', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          //reject('Erorr: Unable to get past schedules for this account!');\r\n          reject(res.status);\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const getPastScheduleForPipeline = (projectId: string, pipelineId: string, countLogs: number, statusOfLogs: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId,\r\n    pipeline_id: pipelineId,\r\n    count: countLogs,\r\n    status: statusOfLogs\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-past-schedule-for-pipeline', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          //reject('Erorr: Unable to get past schedules for this account!');\r\n          reject(res.status);\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const getUpcomingScheduleForUser = (projectId: string, pipelineId: string, countLogs: number, statusOfLogs: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId,\r\n    pipeline_id: pipelineId,\r\n    count: countLogs,\r\n    status: statusOfLogs\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-upcoming-schedule-for-user', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          //reject('Erorr: Unable to get upcoming schedules for this account!');\r\n          reject(res.status);\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const getUpcomingScheduleForProject = (projectId: string, pipelineId: string, countLogs: number, statusOfLogs: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId,\r\n    pipeline_id: pipelineId,\r\n    count: countLogs,\r\n    status: statusOfLogs\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-upcoming-schedule-for-project', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          //reject('Erorr: Unable to get upcoming schedules for this account!');\r\n          reject(res.status);\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nexport const getUpcomingScheduleForPipeline = (projectId: string, pipelineId: string, countLogs: number, statusOfLogs: string): Promise<object> => {\r\n  var data = {\r\n    project_id: projectId,\r\n    pipeline_id: pipelineId,\r\n    count: countLogs,\r\n    status: statusOfLogs\r\n  };\r\n\r\n  const promise = new Promise<object>((resolve, reject) => {\r\n    _axios\r\n      .get('/get-upcoming-schedule-for-pipeline', { params: data })\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          resolve(res.data);\r\n        } else {\r\n          //reject('Erorr: Unable to get upcoming schedules for this account!');\r\n          reject(res.status);\r\n        }\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  TextField,\r\n  Fab,\r\n  FormHelperText,\r\n  Box,\r\n  Chip,\r\n  ButtonGroup,\r\n  Button\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport './update-model-component.scss';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HelpPopover from './help-popover';\r\nimport AlertMsg from '../../components/AlertMsg';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/theme-kuroir';\r\nimport 'ace-builds/src-noconflict/ext-language_tools';\r\nimport 'ace-builds/src-noconflict/snippets/python';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiDivider from '../../components/IkiLayout/IkiDivider';\r\n//import IkiButtonGroup from '../../components/IkiFormElements/IkiButtonGroup';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\nimport IkiChipInput from '../../components/IkiFormElements/IkiChipInput';\r\nimport IkiRadioGroup from '../../components/IkiFormElements/IkiRadioGroup';\r\nimport IkiDialog from '../../components/IkiDialog';\r\nimport IkiAutocomplete from '../../components/IkiFormElements/IkiAutocomplete';\r\nimport { getFriendlyLabel, cloneObject } from '../../util';\r\n//import { createDataset, editDataset } from '../../services/app-data.service';\r\nimport { browseHeader, enterSession } from '../../services/app-data.service';\r\n\r\ninterface facetScriptAPI {\r\n  url: string;\r\n  worksheet_index: any;\r\n  dataset: string;\r\n  columns: any;\r\n  limit: string;\r\n  api_parameters: any;\r\n}\r\n\r\ntype UpdateModelState = {\r\n  attributesTypes: object | null;\r\n  attributes: object | null;\r\n  open: boolean;\r\n  title: string;\r\n  facetGroup: string;\r\n  chainGroup: string;\r\n  facetType: string;\r\n  showColumNamesChips: string;\r\n  createDatasetClicked: boolean;\r\n  newlyAddedDatasetNameExists: boolean;\r\n  newlyAddedDatasetName: string;\r\n  newlyAddedDatasetID: string;\r\n  newlyAddedDashboardNameExists: boolean;\r\n  newlyAddedDashboardName: string;\r\n  newlyAddedDashboardID: string;\r\n  autoSaveSaved: boolean;\r\n  autoSaveTimeout: any;\r\n  associatedDatasetAttribute: any;\r\n  customFacetName: string;\r\n  suggestColumnNames: any[];\r\n  noColOptionsText: string;\r\n  buttonGroupValue: string;\r\n  showApiParameters: boolean;\r\n  apiUrl: string;\r\n  apiParameters: any;\r\n  apiPython: any;\r\n  apiTemplate: string;\r\n};\r\n\r\ntype UpdateModelProps = {\r\n  user?: string;\r\n  facetType?: string;\r\n  customFacetType?: string;\r\n  projectId?: string;\r\n  datasets?: any;\r\n  dashboards?: any\r\n  facetTypeTitle: string;\r\n  chainGroupTitle: string;\r\n  facetGroupTitle: string;\r\n  facetDocumentation: any;\r\n  title: string;\r\n  facetName: string;\r\n  attributes: any;\r\n  attributesTypes: any;\r\n  open: boolean;\r\n  createNewDatasetDialogIsOpened: boolean;\r\n  newDatasetName: string;\r\n  newDatasetFileName?: string;\r\n  onSubmit: (attributes: object, isOutputDatasetCreated?: boolean, isAutoSave?: boolean) => void;\r\n  onCancel: () => void;\r\n  handleCreateNewDataset?: () => void;\r\n  clearNewDataset?: () => void;\r\n  getColumnNames?: () => string[];\r\n  handleNamingFacet: (facetName: string) => void;\r\n  nodeDetails: any;\r\n  pipelineInfo: any;\r\n};\r\n\r\nclass UpdateModel extends Component<UpdateModelProps, UpdateModelState> {\r\n  apiPython: facetScriptAPI = {\r\n    url: '',\r\n    worksheet_index: 1,\r\n    dataset: '',\r\n    columns: '',\r\n    limit: '',\r\n    api_parameters: {}\r\n  }\r\n  googleSheetsLibraries: any = [\"gspread\", \"oauth2client\"];\r\n  googleSheetsPScript: any = {\r\n      handle_Import: 'import os \\nimport json \\nimport gspread \\nfrom oauth2client.service_account import ServiceAccountCredentials  \\nimport pandas as pd',\r\n      handle_Json: 'jsonfile2 = json.dumps(json_meta) \\n\\nwith open(\"jsonfile3.json\", \"w\") as json_file: json.dump(json_meta, json_file)',\r\n      handle_Pandas: '\\n\\nscope = [\"https://spreadsheets.google.com/feeds\",\"https://www.googleapis.com/auth/drive\"]',\r\n      handle_Credentials: '\\n\\ncredentials = ServiceAccountCredentials.from_json_keyfile_name(\"jsonfile3.json\", scope)',\r\n      handle_Authorize: '\\n\\ngc = gspread.authorize(credentials)',\r\n      handle_Data: '\\n\\nwks = gc.open_by_url(url) \\nsh = wks.get_worksheet(worksheet_index) \\ndf = sh.get_all_values() \\ndf2 = pd.DataFrame(df) \\n## Fix Headers Here \\nheader = df2.iloc[0] \\ndf2 = df2[1:] \\ndf2.columns = header \\nresult = df2'\r\n  }\r\n  googleSheetsParameters: any = [\r\n    { name: \"type\", value: \"\" },\r\n    { name: \"project_id\", value: \"\" },\r\n    { name: \"private_key_id\", value: \"\" },\r\n    { name: \"private_key\", value: \"\" },\r\n    { name: \"client_email\", value: \"\" },\r\n    { name: \"client_id\", value: \"\" },\r\n    { name: \"auth_uri\", value: \"\" },\r\n    { name: \"token_uri\", value: \"\" },\r\n    { name: \"auth_provider_x509_cert_url\", value: \"\" },\r\n    { name: \"client_x509_cert_url\", value: \"\" },\r\n  ];\r\n  bigQueryLibraries: any = [\"google-cloud-storage\", \"google-cloud-bigquery\"];\r\n  bigQueryPScript: any = {\r\n    handle_Import: 'import pandas as pd \\nimport os \\nimport json \\nimport tempfile \\nfrom google.cloud import bigquery \\nfrom google.oauth2 import service_account \\nfrom dateutil.parser import parse',\r\n    handle_Json: 'json_object = json.dumps(json_meta) ',\r\n    handle_Pandas: '\\n\\nfd, path = tempfile.mkstemp() \\nwith os.fdopen(fd, \"w\") as tmp: \\n  tmp.write(json_object)',\r\n    handle_Credentials: '\\n\\nos.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"] = path',\r\n    handle_Authorize: '',\r\n    handle_Columns: 'columns = ' +  \"'\" +  \"'\",\r\n    handle_Dataset: 'dataset = ' +  \"'\" +  \"'\",\r\n    handle_Limit: 'limit = ' +  \"'\" +  \"'\",\r\n    handle_Data: '\\n\\# EDIT QUERY HERE \\nQUERY = \"\"\" \\n  SELECT {0} \\n  FROM {1} \\n  LIMIT {2} \"\"\".format(columns, dataset, limit) \\n\\nclient = bigquery.Client() \\nquery_job = client.query(QUERY) \\ndf = query_job.to_dataframe() \\nresult = df \\n'\r\n  }\r\n  customParametersLibraries: any = [];\r\n  state = {\r\n    attributesTypes: {},\r\n    attributes: {},\r\n    open: false,\r\n    facetType: '',\r\n    chainGroup: '',\r\n    facetGroup: '',\r\n    title: '',\r\n    showColumNamesChips: '',\r\n    createDatasetClicked: false,\r\n    newlyAddedDatasetNameExists: false,\r\n    newlyAddedDatasetName: '',\r\n    newlyAddedDatasetID: '',\r\n    autoSaveSaved: false,\r\n    autoSaveTimeout: null,\r\n    newlyAddedDashboardNameExists: false,\r\n    newlyAddedDashboardName: '',\r\n    newlyAddedDashboardID: '',\r\n    associatedDatasetAttribute: [],\r\n    customFacetName: '',\r\n    suggestColumnNames: [],\r\n    noColOptionsText: 'Loading columns...',\r\n    buttonGroupValue: 'config',\r\n    showApiParameters: false,\r\n    apiUrl: '',\r\n    apiParameters: {},\r\n    apiPython: '',\r\n    apiTemplate: ''\r\n  };\r\n  //update state from props only if the initial state is not assigned yet\r\n\r\n  outputDatasetId = '';\r\n\r\n  /**\r\n   * Default value for dataset bucket   . This is needed for Dataset/Imported and Dataset/Exported facets.\r\n   * This value will be auto filled for the bucket-name property of those facet arguments.\r\n   */\r\n  bucketDefaultValueForDataset = 'pypr-datasets';\r\n\r\n  componentDidMount() {\r\n    console.log(\"props from flow-diagram-component: \", this.props);\r\n\r\n    /**\r\n     * The form is displayed based on the attributeTypes of the facet from the facet_doc API.\r\n     */\r\n    var attributeTypes = cloneObject(this.props.attributesTypes);\r\n\r\n    //console.log(\"modal attributeTypes: \");\r\n    //console.log(attributeTypes);\r\n\r\n    //console.log(\"nodeDetails: \");\r\n    //console.log(this.props.nodeDetails);\r\n\r\n    /**\r\n     * A hash map is a attribute with type MAP and is_list is true.\r\n     */\r\n    attributeTypes = this.checkForHashMaps(\r\n      attributeTypes,\r\n      this.props.attributes\r\n    );\r\n    var attributes: any = {\r\n      ...this.props.attributes,\r\n      ...this.checkForDefaultValues(attributeTypes)\r\n    };\r\n\r\n    //console.log(\"modal attributes: \");\r\n    //console.log(attributes);\r\n\r\n    this.setState({\r\n      attributes: attributes,\r\n      attributesTypes: attributeTypes,\r\n      chainGroup: this.props.chainGroupTitle,\r\n      facetGroup: this.props.facetGroupTitle,\r\n      facetType: this.props.facetTypeTitle,\r\n      title: this.props.title,\r\n      open: this.props.open,\r\n      createDatasetClicked: this.props.createNewDatasetDialogIsOpened,\r\n      customFacetName: this.props.facetName\r\n    });\r\n    this.outputDatasetId = '';\r\n\r\n    if (this.props.facetTypeTitle === 'Convert Format' ||\r\n      this.props.facetTypeTitle === 'Count' ||\r\n      this.props.facetTypeTitle === 'Select' ||\r\n      this.props.facetTypeTitle === 'Sort' ||\r\n      this.props.facetTypeTitle === 'Transpose') {\r\n      //console.log(\"browseHeaderRes 1: \");\r\n      var tempColNamesArr: any = [];\r\n      browseHeader(\r\n        this.props.pipelineInfo.pipeline_id,\r\n        this.props.pipelineInfo.project_id,\r\n        this.props.nodeDetails.parents[0],\r\n        this.props.nodeDetails.facet_id\r\n      ).then((browseHeaderRes: any) => {\r\n        //console.log(\"browseHeaderRes 2: \");\r\n        //console.log(browseHeaderRes);\r\n        tempColNamesArr = [];\r\n        browseHeaderRes.data.column_names.forEach((col: string, colIndex: number) => {\r\n          //console.log(\"col: \", browseHeaderRes.data.column_names[colIndex], \"index: \", colIndex);\r\n          //tempColNamesArr.push(browseHeaderRes.data.column_names[colIndex]);\r\n          tempColNamesArr.push(col);\r\n          /*this.setState({ \r\n            ...this.state,\r\n            suggestColumnNames: tempColNamesArr\r\n          });*/\r\n          //this.setState({ suggestColumnNames: tempColNamesArr });\r\n        });\r\n        /*for(var i = 0; i < Object.keys(browseHeaderRes.data.column_names).length; i++) {\r\n          tempColNamesArr.push(browseHeaderRes.data.column_names[i]);\r\n          //this.setState({ suggestColumnNames: tempColNamesArr });\r\n          this.setState({ \r\n            ...this.state.suggestColumnNames,\r\n            suggestColumnNames: browseHeaderRes.data.column_names[i]\r\n          });\r\n        };*/\r\n        this.setState({ suggestColumnNames: tempColNamesArr });\r\n        //console.log(\"tempColNamesArr: \" + tempColNamesArr);\r\n      }).catch((browseHeaderErr: any) => {\r\n        if (browseHeaderErr === 501) {\r\n          enterSession(this.props.pipelineInfo.project_id).then((resenterSession: any) => {\r\n            browseHeader(\r\n              this.props.pipelineInfo.pipeline_id,\r\n              this.props.pipelineInfo.project_id,\r\n              this.props.nodeDetails.parents[0],\r\n              this.props.nodeDetails.facet_id\r\n            ).then((browseHeaderRes: any) => {\r\n              tempColNamesArr = [];\r\n              browseHeaderRes.data.column_names.forEach((col: string) => {\r\n                tempColNamesArr.push(col);\r\n                //this.setState({ suggestColumnNames: tempColNamesArr });\r\n              });\r\n              this.setState({ suggestColumnNames: tempColNamesArr });\r\n            }).catch((browseHeaderErr: any) => {\r\n              this.setState({\r\n                suggestColumnNames: [],\r\n                noColOptionsText: 'No columns found. Try to close and re-open this dialog.'\r\n              });\r\n            });\r\n          }).catch((resenterSessionErr: any) => {\r\n            this.setState({\r\n              suggestColumnNames: [],\r\n              noColOptionsText: 'No columns found. Try to close and re-open this dialog.'\r\n            });\r\n          });\r\n        } else {\r\n          this.setState({ suggestColumnNames: [] });\r\n          browseHeader(\r\n            this.props.pipelineInfo.pipeline_id,\r\n            this.props.pipelineInfo.project_id,\r\n            this.props.nodeDetails.parents[0],\r\n            this.props.nodeDetails.facet_id\r\n          ).then((browseHeaderRes: any) => {\r\n            tempColNamesArr = [];\r\n            browseHeaderRes.data.column_names.forEach((col: string) => {\r\n              tempColNamesArr.push(col);\r\n              //this.setState({ suggestColumnNames: tempColNamesArr });\r\n            });\r\n            this.setState({ suggestColumnNames: tempColNamesArr });\r\n          }).catch((browseHeaderErr: any) => {\r\n            this.setState({\r\n              suggestColumnNames: [],\r\n              noColOptionsText: 'No columns found. Check if this facet has linked parent facet.'\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if(this.props.customFacetType === 'API') {\r\n      var api_url_val = attributes['url'] ? attributes['url'] : '';\r\n      api_url_val = 'url = ' + \"'\" + api_url_val + \"'\";\r\n      var api_windex_val = attributes['worksheet_index'] ? attributes['worksheet_index'] : '';\r\n      api_windex_val = 'worksheet_index = ' + api_windex_val;\r\n      //var api_request_type_val = attributes['request_type'] ? attributes['request_type'] : '';\r\n      //api_request_type_val = 'request_type = ' + \"'\" + api_request_type_val + \"'\";\r\n      var api_dataset_val = attributes['dataset'] ? attributes['dataset'] : '';\r\n      api_dataset_val = 'dataset = ' + \"'\" + api_dataset_val + \"'\";\r\n      var api_columns_val = attributes['columns'] ? attributes['columns'] : '';\r\n      api_columns_val = 'columns = ' + \"'\" + api_columns_val + \"'\";\r\n      var api_limit_val = attributes['limit'] ? attributes['limit'] : '';\r\n      api_limit_val = 'limit = ' + \"'\" + api_limit_val + \"'\";\r\n      var api_parameters_arr = attributes['api_parameters'] ? attributes['api_parameters'] : [];\r\n      this.apiPython = {\r\n        url: api_url_val,\r\n        worksheet_index: api_windex_val,\r\n        dataset: api_dataset_val,\r\n        columns: api_columns_val,\r\n        limit: api_limit_val,\r\n        api_parameters: api_parameters_arr\r\n      }\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(\r\n    nextProps: UpdateModelProps,\r\n    prevState: UpdateModelState\r\n  ) {\r\n    /**\r\n     * If the dataset is created from the update model dialog, below code checks and selects that dataset automatically when the\r\n     * upload dataset dialog is closed.\r\n     */\r\n    var lastDatasetElement = '';\r\n    //console.log(nextProps.newDatasetName, 'fffff');\r\n    if (nextProps.newDatasetName !== '') {\r\n      //console.log(nextProps);\r\n\r\n      nextProps.datasets.map((datasetData: any) => {\r\n        // console.log(\r\n        //   'datasetData.name: ' +\r\n        //     nextProps.newDatasetName +\r\n        //     ' ,name: ' +\r\n        //     nextProps.newDatasetFileName\r\n        // );\r\n        //console.log(datasetData);\r\n\r\n        if (datasetData.name === nextProps.newDatasetName) {\r\n          //lastDatasetElement = `${datasetData.dataset_id}/${nextProps.newDatasetFileName}`;\r\n          lastDatasetElement = `${datasetData.dataset_id}`;\r\n        }\r\n        return ''\r\n      });\r\n    }\r\n    if (lastDatasetElement !== '' && nextProps.newDatasetName !== '') {\r\n      var value = lastDatasetElement;\r\n      //console.log(\"uploaded dataset...: \");\r\n      //console.log(value);\r\n      // const splitDatasetValue = value.split('/');\r\n      /*if (splitDatasetValue.length === 2) {\r\n          value = splitDatasetValue[0];\r\n      }*/\r\n      if (nextProps.clearNewDataset) {\r\n        nextProps.clearNewDataset();\r\n      }\r\n      //console.log(\"uploaded dataset2...: \");\r\n      //console.log(value);\r\n      return {\r\n        ...prevState,\r\n        attributes: {\r\n          ...prevState.attributes,\r\n          //path: `${nextProps.projectId}/${value}`,\r\n          path: value,\r\n          dataset_id: value\r\n        }\r\n      };\r\n    } else {\r\n      return prevState;\r\n    }\r\n  }\r\n\r\n  constructGSheetPScript = (apiPython: any) => {\r\n    //var attributes: any = this.state.attributes;\r\n    var api_url_val = apiPython.url ? apiPython.url : 'url = ' + \"'\" + \"'\";\r\n    var api_windex_val = apiPython.worksheet_index ? apiPython.worksheet_index : 'worksheet_index = ' + \"'\" + \"'\";\r\n    //var api_request_type_val = apiPython.request_type ? apiPython.request_type : 'request_type = ' + \"'\" + \"'\";\r\n    var parametersValue = '';\r\n    parametersValue += 'json_meta = {';\r\n    parametersValue += '\\n  ' + \"'type': 'service_account',\";\r\n    parametersValue += '\\n  ' + \"'project_id': 'ikigai-281320',\";\r\n    parametersValue += '\\n  ' + \"'private_key_id': 'fdf97c1f23d07d0abfa7187c3176ce6bfc1c3c03',\";\r\n    parametersValue += '\\n  ' + \"'private_key': \"+ '\"\"\"' + '-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCb5nVf1rx/XvkH\\nYR2/X9O/Nr18OvObKlCoG6kZYKMj7qLoIJlZL7fqiFpT4VvcuL59Kokqn4s/9TDs\\noMlIS3bwlT2wqOwHXiqt5vVFwqhvSnlGUKjILcGNZsRd7zn6zu/jpFDBiKjecMAY\\nPV/sp/qAFS6XHX7t0ZplFkKL7PACBDJy0fYlihLubPTFXJ4QJRMSJ0uiI3AzmDCJ\\n4Ll7SwkI4EUqZSh6R/mgcTjHhRvR+hM6veR638VNer1bX6CkP6eZb7yOhcZ3KDGO\\nyQtV4THreCsffE/zeSt9OwLBftecAuvMynW7au7W1Rp6eZvWqGfSIfBMTb+i2QWA\\nPFUobzdFAgMBAAECggEAJD9FfAZ75itpQCd62KOJonQyQz+bozCH90YTH3TiCXkz\\nBECMFvnqy4tvYQBNMPj9RTHOGYxlvnWeLe5GTlpJaa9xW/Eyi5X/21YPIeyb5+BL\\naSdYzs4gqeVCc8qq0t8pVGbAZfcFuE5Dw38FngsCSaRjJDx15gptWOJ/j3QD65u8\\nPlorRfFDEUs3KXUQdw+5kGcQfzbRfT61uZLxe3NsZUcVsxfJ70TzsN6Hwbmp1MvL\\nKoTH9WodsfEpfi+FVFkqfhelxaQd4mVf3U+P3poj7CrGZT59Y/d1SjkAagSy0ZiZ\\nnwZx697Z+b84GD9MNhTlyxUm/WCSbKxMNXdUe+PecQKBgQDPaqM1/iUUW83Thn8E\\nIEpXdH0Kvfm3XonopXSuGygHu2vb9FrmoQJ7ls1dT43XqRMOA1NpkvJR/luUbY3B\\nNMvZnSDB8grNxmKBa1KpA8iIZZ3Y14cFOnl/f64juDODdbcxkHVDBQH2XCIsaCWx\\nrEvPvFwRb57fP5Wcz472RhaB+QKBgQDAarya1ncUhZipkC1QNqp+/zlsBbM/roDa\\neSWj7WGmHzyIShEPn0cJ5dE9/eTGs5kf8Omx7ugue/ToRjMOUd3RxzdRR+7UDnTs\\nQ9SD3mx0fqz1Zfl27y7xz5h4RC/jOBKANEAl1FxsUXM3VNfo5ihYnMz8ArxNtsJD\\nqDWD/jzyrQKBgQC7ZhGIGtLNjhRs5Lulsrb4RRsktXgFILlhJPxCwe5s7f0JgcEP\\nVrGzkBCEGfiBvRSmOIMIg+fEBRghBspooZb8SmbqVBFG0dL2M00/v1dTRNxUqoYn\\nRym29FkVlLuWLqkRcv8/Sir3t0546LAF0zG7wuc8KalU81Htl+oGwFRdoQKBgE65\\nHLMIva2CvyPYngFsbDMLPrYIWv7Z6VP5LsIzs7jgnMZx7ysCEnFlOkdvofL9tc9Q\\npHws74ddJaUGW4snSWazZ9l0Ya0WwRWM5tyQ2rSKwz6fWwIi94TtV0cVNrZy0Xbs\\nabZQfQPACzB/INrjl2wxstgEUoBFHpPJtSNsmAj9AoGAJQhqhUl6sxR0HFnrQQsc\\ngDIApnTqvS/UuBc33e4QM5o6BpZch2aVhkmhflfQ2qVWV8PJUrkfbIhkiSmVmuXw\\n2OuRn+BfnJXsomsKy5A94wNwxwv8Fr6rc21Asb8EkmembiWnZe6UrZ1uNY8PVCiD\\nkl5sjqJYNo3vi0WoraM21Os=\\n-----END PRIVATE KEY-----' + '\"\"\"' + ',';\r\n    parametersValue += '\\n  ' + \"'client_email': 'gsheet@ikigai-tableau.iam.gserviceaccount.com',\";\r\n    parametersValue += '\\n  ' + \"'client_id': '109244888655482857194',\";\r\n    parametersValue += '\\n  ' + \"'auth_uri': 'https://accounts.google.com/o/oauth2/auth',\";\r\n    parametersValue += '\\n  ' + \"'token_uri': 'https://oauth2.googleapis.com/token',\";\r\n    parametersValue += '\\n  ' + \"'auth_provider_x509_cert_url': 'https://www.googleapis.com/oauth2/v1/certs',\";\r\n    parametersValue += '\\n  ' + \"'client_x509_cert_url': 'https://www.googleapis.com/robot/v1/metadata/x509/gsheet%40ikigai-tableau.iam.gserviceaccount.com'\";\r\n    parametersValue += '\\n' + '}';\r\n    var pythonScriptValue = '';\r\n    pythonScriptValue += this.googleSheetsPScript.handle_Import;\r\n    pythonScriptValue += '\\n';\r\n    pythonScriptValue += '\\n' + api_url_val;\r\n    pythonScriptValue += '\\n' + api_windex_val;\r\n    //pythonScriptValue += '\\n';\r\n    //pythonScriptValue += '\\n' + api_request_type_val;\r\n    pythonScriptValue += '\\n';\r\n    pythonScriptValue += '\\n' + parametersValue;\r\n    pythonScriptValue += '\\n\\n';\r\n    pythonScriptValue += this.googleSheetsPScript.handle_Json;\r\n    pythonScriptValue += this.googleSheetsPScript.handle_Pandas;\r\n    pythonScriptValue += this.googleSheetsPScript.handle_Credentials;\r\n    pythonScriptValue += this.googleSheetsPScript.handle_Authorize;\r\n    pythonScriptValue += this.googleSheetsPScript.handle_Data;\r\n    return pythonScriptValue\r\n    //attributes['script'] = pythonScriptValue;\r\n    //this.setState({ attributes: attributes });\r\n  }\r\n\r\n  constructBQueryPScript = (apiPython: any) => {\r\n    //var attributes: any = this.state.attributes;\r\n    //var api_url_val = apiPython.url ? apiPython.url : 'url = ' + \"'\" + \"'\";\r\n    //var api_windex_val = apiPython.worksheet_index ? apiPython.worksheet_index : 'worksheet_index = ' + \"'\" + \"'\";\r\n    //var api_request_type_val = apiPython.request_type ? apiPython.request_type : 'request_type = ' + \"'\" + \"'\";\r\n    var api_dataset_val = apiPython.dataset ? apiPython.dataset : 'dataset = ' + \"'\" + \"'\";\r\n    var api_columns_val = apiPython.columns ? apiPython.columns : 'columns = ' + \"'\" + \"'\";\r\n    var api_limit_val = apiPython.limit ? apiPython.limit : 'limit = ' + \"'\" + \"'\";\r\n    var parametersValue = '';\r\n    parametersValue += 'json_meta = {';\r\n    parametersValue += '\\n  ' + \"'type': 'service_account',\";\r\n    parametersValue += '\\n  ' + \"'project_id': 'ikigai-281320',\";\r\n    parametersValue += '\\n  ' + \"'private_key_id': 'e6f4a095bad2816b780d77b1e25e32d0f83009db',\";\r\n    parametersValue += '\\n  ' + \"'private_key': \"+ '\"\"\"' + '-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC/C1Xnth0eGY2A\\nVsKGUhECsDd2hu0gA6e7+x1Vw7e5WROdJUXJ/0GAyJ2DP4RTl9+cBGA8+JxmPz7o\\nYFntCY9VWJxBdhIlicITZR/c+ASU5hr0m2Lo5wPVCCBrDdxUOjKLoaA+jkNA/orS\\nlaJDRnQgWSmN9SNH8af9ecljFi9XBJFCSThAyyb8Cuur5qe14SpbkY9gEsMB2v42\\nlY6HJpANyFYp07RFjik24VjF3S6R0GQQdVkVdEozu81GcK1PtE4EEJfb15Cw714J\\n352JRdKHBDiFq9jb/piGZYAQVp2qxEbuZr5XSLOTMF45RVQHfsDSsm5ktqZApQkU\\nA+vM5DDlAgMBAAECggEAGWnanZ4+NVjU1/OyoMed96uVVTERriaOU5VOC7CjagaN\\nc2QX6o0IG6eUPHdglPYpCsoSO0ofFALpzWOz0rJo3MOS1aptM40lwgq7uFtN0Ljj\\ncRKSj8TbX6VbGqKXYqTzQFvZwziNfcHembDKCwT+QadavcWUUee1nyRqQ8IZvgtk\\no6QO279poau0mP4t+BaY1kan6NMOBlH84IVORI4dNz1mnRmbzA9YkcoHFg43LN8H\\nJkaxFMUdDCS9yvtaStPgrEcI0mpB3TSjbpIOOX216k+WYsD07fn6M12eq7ofniaj\\nf3sEYNf0vurNAYQWa5tZjjXGGDQuwmUJ1UQj3bBlaQKBgQDjG7P+s7bOKLIq8u4S\\nQOrnJjVCxytUqZFVMLAsxDu2CTGiv2n25C48FewlUGIxsL6fQwIzIe6jf/lbzSTc\\nWD2YKyDHsM3eAL/IxmKFJwOCaS5b7YP6/SYKY2oovOpqoSbJpqMDzjeLMBwY/OR2\\nSCnTEQnmFov9h+XIShLFCPXoJwKBgQDXWSDPI8Uyy8pEqo9BHTRA1WmB/0yYpe1c\\nmgFfW4sDNLp4nPjlF0imrePZqOOMUocq5OMp19rfVr0o1YagGUli29K1wZZnluro\\n+cx5PcpJxe6+C5Pg9Kqft0coxdy+Vbh00eFVDkE1z3KXcn6VwSi6+ACd+h4BCIHQ\\n16BsqHAaEwKBgE71NboKvzajvXXjKdQcz853YTMLTcxMe+OzXrzhqKTcQ26CwBN/\\nN3faY1SBwvHlshBq2pvuYypi9s3s37Df2OJLtETY+moBtqvWFTCX5Md1TBHX3Pfp\\nBU29TI5HR/S0fGjFT42mJ3dzzYD+g2uAIVJpbRiapCcMFV5yKl5ohB4nAoGBAL18\\n9Kyv+f5HadTgC6utCeSepPc5cOnE30ajUN/aikio5gfpf+z9fvUDf8FvpcI8gCmT\\nO/v+rt3k0g+TS6GmfneZnCBIlpLSLiQQYgaxA0XE/92EDHxebaCaQegzqphkjylj\\n4JXaNDEoN9nhaldVnwRd4xUfF7WrCad9hPD3iaS3AoGBALxVpx4hWfX4kVLM7ucR\\n/iPuc8c8Km+Xu8WsP8167OLR3e6xw66CbNuKJdWzrg1YnDbCxnq5uRl2mkAyAI6z\\n1YqL2zGwNNUhaOahBZrNkTwY7KU77xqbgBSHBybTCpX4Wb9l5HelVonOPhSoCavQ\\nxEVOPMTKOn1S1nDlbsky3/3c\\n-----END PRIVATE KEY-----' + '\"\"\"' + ',';\r\n    parametersValue += '\\n  ' + \"'client_email': 'ikigai-custom-import@ikigai-281320.iam.gserviceaccount.com',\";\r\n    parametersValue += '\\n  ' + \"'client_id': '116606549606221557577',\";\r\n    parametersValue += '\\n  ' + \"'auth_uri': 'https://accounts.google.com/o/oauth2/auth',\";\r\n    parametersValue += '\\n  ' + \"'token_uri': 'https://oauth2.googleapis.com/token',\";\r\n    parametersValue += '\\n  ' + \"'auth_provider_x509_cert_url': 'https://www.googleapis.com/oauth2/v1/certs',\";\r\n    parametersValue += '\\n  ' + \"'client_x509_cert_url': 'https://www.googleapis.com/robot/v1/metadata/x509/ikigai-custom-import%40ikigai-281320.iam.gserviceaccount.com'\";\r\n    parametersValue += '\\n' + '}';\r\n    var pythonScriptValue = '';\r\n    pythonScriptValue += this.bigQueryPScript.handle_Import;\r\n    pythonScriptValue += '\\n';\r\n    pythonScriptValue += '\\n' + parametersValue;\r\n    pythonScriptValue += '\\n\\n';\r\n    pythonScriptValue += this.bigQueryPScript.handle_Json;\r\n    pythonScriptValue += this.bigQueryPScript.handle_Pandas;\r\n    pythonScriptValue += this.bigQueryPScript.handle_Credentials;\r\n    pythonScriptValue += this.bigQueryPScript.handle_Authorize;\r\n    pythonScriptValue += '\\n';\r\n    pythonScriptValue += '\\n' + api_dataset_val;\r\n    pythonScriptValue += '\\n' + api_columns_val;\r\n    pythonScriptValue += '\\n' + api_limit_val;\r\n    pythonScriptValue += '\\n';\r\n    pythonScriptValue += this.bigQueryPScript.handle_Data;\r\n    return pythonScriptValue\r\n    //attributes['script'] = pythonScriptValue;\r\n    //this.setState({ attributes: attributes });\r\n  }\r\n\r\n  constructCustomParameters = (apiPython: any) => {\r\n    var apiParameters: any = apiPython.api_parameters;\r\n    var parametersValue = '';\r\n    /*parametersValue += '# parameters - start';\r\n    parametersValue += '\\napi_parameters = {';\r\n    if(Object.keys(apiPython.api_parameters).length > 0) {\r\n      Object.keys(apiParameters).forEach((parameterKey: any) => {\r\n        var parameterName = apiParameters[parameterKey].name ? apiParameters[parameterKey].name : '';\r\n        var parameterValue = apiParameters[parameterKey].value ? apiParameters[parameterKey].value : '';\r\n        var parameterComma = Object.keys(apiParameters).length === (parameterKey + 1) ? '' : ','\r\n        parametersValue += '\\n  ' + \"'\" + parameterName + \"': '\" + parameterValue + \"'\" + parameterComma;\r\n      })\r\n    }\r\n    parametersValue += '\\n' + '}';\r\n    parametersValue += '\\n# parameters - end';*/\r\n    var pythonScriptValue = '';\r\n    pythonScriptValue += parametersValue;\r\n    //pythonScriptValue += '\\n';\r\n    //pythonScriptValue += '\\n' + this.state.attributes['script'];\r\n    //pythonScriptValue += '\\n\\n';\r\n    return pythonScriptValue\r\n  }\r\n\r\n  constructGSheetParameters = () => {\r\n    var attributes: any = this.state.attributes;\r\n  };\r\n\r\n  /**\r\n   * Manually adds value for bucket key of the facet group dataset.\r\n   * The default value is stored in bucketDefaultValueForDataset\r\n   * @param attributeTypes Attribute types of the facet.\r\n   */\r\n\r\n  checkForDefaultValues(attributeTypes: any) {\r\n    let attrs = {};\r\n    let keys = Object.keys(attributeTypes);\r\n    for (var i = 0; i < keys.length; i++) {\r\n      if (\r\n        keys[i] === 'bucket' &&\r\n        this.props.facetGroupTitle.toLowerCase() === 'dataset'\r\n      ) {\r\n        attrs[keys[i]] = this.bucketDefaultValueForDataset;\r\n      }\r\n      // if (attributeTypes[keys[i]].default_value) {\r\n      //   attrs[keys[i]] = attributeTypes[keys[i]].default_value;\r\n      // }\r\n    }\r\n    return attrs;\r\n  }\r\n  /**\r\n   * Checks if there there are any hashmaps and checks if there are any existing entries to that key\r\n   * in the facet arguments. If there are arguments, this function adds that many number of attribute types for the children\r\n   * @param attributeTypes Attribute types of the facet\r\n   * @param attributes Existing attribute arguments of the facets.\r\n   */\r\n  checkForHashMaps(attributeTypes: any, attributes: any) {\r\n    Object.keys(attributeTypes).map((key: any) => {\r\n      var attr: any = attributeTypes[key];\r\n      var children = attr.children;\r\n      if (attr.argument_type === 'MAP' && attr.is_list) {\r\n        attr.children = [];\r\n        if (\r\n          attributes[key] &&\r\n          Array.isArray(attributes[key]) &&\r\n          attributes[key].length > 0\r\n        ) {\r\n          for (var i = 0; i < attributes[key].length; i++) {\r\n            attr.children.push({ ...children });\r\n          }\r\n        } else {\r\n          attr.children.push({ ...children });\r\n        }\r\n      }\r\n      return ''\r\n    });\r\n    return attributeTypes;\r\n  }\r\n\r\n  /**\r\n   * Updates the argument value when text field / select box is changed.\r\n   * @param name key of the argument\r\n   * @param event event from the input field\r\n   * @param type type of the argument\r\n   */\r\n\r\n  onUpdate(name: string, label: string, event: any, type: any = 'string') {\r\n    //console.log(\"name + label + type + event.target.value: \");\r\n    //console.log(name + \" - \" + label + \" - \" + type + \" - \" + event.target.value);\r\n    if(this.props.customFacetType === 'API' && this.state.attributes['api_template'] !== 'Custom') {\r\n      //console.log(name + \" - \" + label + \" - \" + type + \" - \" + event.target.value);\r\n      var value = label === 'script' ? event : label === 'associated_dataset' ? this.state.associatedDatasetAttribute : event.target.value;\r\n      var url = '';\r\n      var windex: any = 0;\r\n      //var request_type = '';\r\n      var columns = '';\r\n      var dataset = '';\r\n      var limit = '';\r\n      var scriptValue = '';\r\n      var libraries: any = [];\r\n      var parameters: any = [];\r\n\r\n      if(label === 'url') {\r\n        value = event.target.value;\r\n        var url_forScript = 'url = ' + \"'\" + value + \"'\";\r\n        url = url_forScript;\r\n        windex = this.apiPython.worksheet_index;\r\n        //request_type = this.apiPython.request_type;\r\n        dataset = this.apiPython.dataset;\r\n        columns = this.apiPython.columns;\r\n        limit = this.apiPython.limit;\r\n\r\n        this.apiPython = {\r\n          url: url,\r\n          worksheet_index: this.apiPython.worksheet_index,\r\n          //request_type: this.apiPython.request_type,\r\n          columns: this.apiPython.columns,\r\n          dataset: this.apiPython.dataset,\r\n          limit: this.apiPython.limit,\r\n          api_parameters: this.apiPython.api_parameters,\r\n        }\r\n      } else if(label === 'worksheet_index') {\r\n        value = event.target.value;\r\n        var windex_forScript = 'worksheet_index = ' + value;\r\n        url = this.apiPython.url;\r\n        windex = windex_forScript;\r\n        //request_type = this.apiPython.request_type;\r\n        dataset = this.apiPython.dataset;\r\n        columns = this.apiPython.columns;\r\n        limit = this.apiPython.limit;\r\n\r\n        this.apiPython = {\r\n          url: this.apiPython.url,\r\n          worksheet_index: windex_forScript,\r\n          //request_type: this.apiPython.request_type,\r\n          columns: this.apiPython.columns,\r\n          dataset: this.apiPython.dataset,\r\n          limit: this.apiPython.limit,\r\n          api_parameters: this.apiPython.api_parameters,\r\n        }\r\n      } else if(label === 'request_type') {\r\n        value = event.target.value;\r\n        var requestType_forScript = 'request_type = ' + \"'\" + value + \"'\";\r\n        //request_type = requestType_forScript;\r\n        url = this.apiPython.url;\r\n        dataset = this.apiPython.dataset;\r\n        columns = this.apiPython.columns;\r\n        limit = this.apiPython.limit;\r\n\r\n        this.apiPython = {\r\n          url: this.apiPython.url,\r\n          worksheet_index: this.apiPython.worksheet_index,\r\n          //request_type: request_type,\r\n          columns: this.apiPython.columns,\r\n          dataset: this.apiPython.dataset,\r\n          limit: this.apiPython.limit,\r\n          api_parameters: this.apiPython.api_parameters,\r\n        }\r\n      } else if(label === 'columns') {\r\n        value = event.target.value;\r\n        var requestColumns_forScript = 'columns = ' + \"'\" + value + \"'\";\r\n        columns = requestColumns_forScript;\r\n        //request_type = this.apiPython.request_type;\r\n        url = this.apiPython.url;\r\n        dataset = this.apiPython.dataset;\r\n        limit = this.apiPython.limit;\r\n\r\n        this.apiPython = {\r\n          url: this.apiPython.url,\r\n          worksheet_index: this.apiPython.worksheet_index,\r\n          //request_type: request_type,\r\n          columns: requestColumns_forScript,\r\n          dataset: this.apiPython.dataset,\r\n          limit: this.apiPython.limit,\r\n          api_parameters: this.apiPython.api_parameters,\r\n        }\r\n      } else if(label === 'dataset') {\r\n        value = event.target.value;\r\n        var requestDataset_forScript = 'dataset = ' + \"'\" + value + \"'\";\r\n        dataset = requestDataset_forScript;\r\n        //request_type = this.apiPython.request_type;\r\n        url = this.apiPython.url;\r\n        limit = this.apiPython.limit;\r\n        columns = this.apiPython.columns;\r\n\r\n        this.apiPython = {\r\n          url: this.apiPython.url,\r\n          worksheet_index: this.apiPython.worksheet_index,\r\n          //request_type: this.apiPython.request_type,\r\n          columns: this.apiPython.columns,\r\n          dataset: requestDataset_forScript,\r\n          limit: this.apiPython.limit,\r\n          api_parameters: this.apiPython.api_parameters,\r\n        }\r\n      } else if(label === 'limit') {\r\n        value = event.target.value;\r\n        var requestLimit_forScript = 'limit = ' + \"'\" + value + \"'\";\r\n        limit = requestLimit_forScript;\r\n        //request_type = this.apiPython.request_type;\r\n        url = this.apiPython.url;\r\n        columns = this.apiPython.columns;\r\n        dataset = this.apiPython.dataset;\r\n\r\n        this.apiPython = {\r\n          url: this.apiPython.url,\r\n          worksheet_index: this.apiPython.worksheet_index,\r\n          //request_type: request_type,\r\n          columns: this.apiPython.columns,\r\n          dataset: this.apiPython.dataset,\r\n          limit: requestLimit_forScript,\r\n          api_parameters: this.apiPython.api_parameters,\r\n        }\r\n      }\r\n\r\n      //scriptValue += this.apiPython.url;\r\n      //scriptValue += '\\n\\n' + this.apiPython.request_type;\r\n      var showApiParameters: boolean = false;\r\n      if(this.state.attributes[\"api_template\"] === 'Google Sheets') {\r\n        scriptValue = this.constructGSheetPScript(this.apiPython);\r\n        libraries = this.googleSheetsLibraries;\r\n      }else if(this.state.attributes[\"api_template\"] === 'BigQuery' || this.state.attributes[\"api_template\"] === 'Connector') {\r\n        scriptValue = this.constructBQueryPScript(this.apiPython);\r\n        libraries = this.bigQueryLibraries;\r\n      }else{\r\n        scriptValue = this.constructCustomParameters(this.apiPython);\r\n        libraries = this.customParametersLibraries;\r\n        showApiParameters = true; \r\n      }\r\n\r\n      if(label === 'api_template') {\r\n        if(value === 'Google Sheets') {\r\n          //scriptValue = value;\r\n          scriptValue = this.constructGSheetPScript(this.apiPython);\r\n          libraries = this.googleSheetsLibraries;\r\n        }else if(value === 'BigQuery' || value === 'Connector') {\r\n          scriptValue = this.constructBQueryPScript(this.apiPython);\r\n          libraries = this.bigQueryLibraries;\r\n        }else {\r\n          scriptValue = this.constructCustomParameters(this.apiPython);\r\n          libraries = this.customParametersLibraries;\r\n          showApiParameters = true;\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        showApiParameters: showApiParameters\r\n      })\r\n\r\n      this.apiPython = {\r\n        url: url,\r\n        worksheet_index: windex,\r\n        dataset: dataset,\r\n        columns: columns,\r\n        limit: limit,\r\n        api_parameters: this.apiPython.api_parameters,\r\n      }\r\n\r\n      //console.log(\"showApiParameters: \" + showApiParameters);\r\n\r\n      this.setState(\r\n        {\r\n          attributes: {\r\n            ...this.state.attributes,\r\n            [label]: value,\r\n            ['script']: scriptValue,\r\n            ['libraries']: libraries\r\n          }\r\n      }, ()=> {\r\n        //console.log(\"attributes on api update: \", this.state.attributes);\r\n        //this.handleAutoSave();\r\n        //this.props.onSubmit(this.state.attributes, false, true);\r\n      });\r\n    }else {\r\n      var value = label === 'script' ? event : label === 'associated_dataset' ? this.state.associatedDatasetAttribute : event.target.value;\r\n\r\n      //console.log(\"onUpdate - name: \" + name + \", change: \" + value);\r\n      //check for boolean string values and convert them to boolean.\r\n      if ((value === 'true' || value === true) && (this.props.facetType === 'IMPORTED' || this.props.facetType === 'EXPORTED')) {\r\n        value = true;\r\n        this.setState({ showColumNamesChips: 'hide' });\r\n      } else if ((value === 'false' || value === false) && (this.props.facetType === 'IMPORTED' || this.props.facetType === 'EXPORTED')) {\r\n        value = false;\r\n        this.setState({ showColumNamesChips: 'show' });\r\n      }\r\n      if (value === 'true') {\r\n        value = true;\r\n      } else if (value === 'false') {\r\n        value = false;\r\n      }\r\n      if (type === 'NUMBER') {\r\n        value = parseInt(value);\r\n      }\r\n      //Update the path with project-id/dataset-id/dataset-name\r\n      /*if (name === 'dataset_id' && this.props.facetType === 'IMPORTED') {\r\n        //value = `${this.props.projectId}/${value}`;\r\n        const splitDatasetIdValue = value.split('/');\r\n        value = splitDatasetIdValue[0];\r\n      }\r\n      if (this.props.facetType === 'IMPORTED' && label === 'dataset_id') {\r\n        value = `${value}`;\r\n      }\r\n      }*/\r\n      if (label === 'associated_dataset') {\r\n        //  var dashboardIds:any = this.props.datasets ? this.props.datasets.map((d:any)=>{ return value.includes(d.name)? d.dataset_id : false }):[]\r\n        var dashboardIds: any = this.state.associatedDatasetAttribute.map((a: any) => { return this.props.datasets.map((d: any) => { return d.name === a ? d.dataset_id : false }).filter((k: any) => { return k !== false })[0] })\r\n        this.setState(\r\n          {\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              [label]: value,\r\n              // eslint-disable-next-line\r\n              ['dataset_id']: dashboardIds.filter((k: any) => { return k !== false }),\r\n            }\r\n          }\r\n        );\r\n      } else if (label === 'table_side') {\r\n        this.setState(\r\n          {\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              //[name]: value,\r\n              [label]: value\r\n            }\r\n          },\r\n          () => {\r\n            //console.log(\"this.state.attributes: \");\r\n            //console.log(this.state.attributes);\r\n            this.validate();\r\n          }\r\n        );\r\n      } else if(label==='api_template' && this.props.facetType === 'API'){\r\n        var scriptValue: string = '';\r\n        var libraries: any = [];\r\n        this.apiPython = {\r\n          url: '',\r\n          worksheet_index: 1,\r\n          //request_type: this.apiPython.request_type,\r\n          columns: '',\r\n          dataset: '',\r\n          limit: '',\r\n          api_parameters: {},\r\n        }\r\n        if(value === 'Google Sheets') {\r\n          scriptValue = this.constructGSheetPScript(this.apiPython);\r\n          libraries = this.googleSheetsLibraries;\r\n        }else if(this.state.attributes[\"api_template\"] === 'BigQuery' || this.state.attributes[\"api_template\"] === 'Connector') {\r\n          scriptValue = this.constructBQueryPScript(this.apiPython);\r\n          libraries = this.bigQueryLibraries;\r\n        }else{\r\n          scriptValue = this.constructCustomParameters(this.apiPython);\r\n          libraries = this.customParametersLibraries;\r\n          showApiParameters = true; \r\n        }\r\n        this.setState(\r\n          {\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              //[name]: value,\r\n              [label]: value,\r\n              ['script']: scriptValue,\r\n              ['libraries']: libraries\r\n            }\r\n          },\r\n          () => {\r\n            //console.log(\"this.state.attributes: \");\r\n            //console.log(this.state.attributes);\r\n            this.validate();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              [label]: value\r\n            }\r\n          },\r\n          () => {\r\n            var error = this.validate();\r\n            //If updating Dynamic type of facet like e.g. Python facet (name === script), call AutoSave and Submit facet data\r\n            if (!error && label === 'script') {\r\n              this.handleAutoSave();\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the nested argument\r\n   * @param event event from the input field\r\n   * @param parentKey Parent key of the nested argument\r\n   * @param key key of the argument\r\n   * @param index index of the argument object for map\r\n   */\r\n\r\n  onUpdatedNestedComponent(\r\n    event: any,\r\n    parentKey: string,\r\n    key: string,\r\n    index: number = -1\r\n  ) {\r\n    //console.log(\"event.target.value> parentKey: \" + parentKey + \", key: \" + key + \", index: \" + index);\r\n    //console.log(event.target.value);\r\n    var temp_val: any = event.target.value;\r\n    //var attributesTypes = this.state.attributesTypes;\r\n    //console.log('attributesTypes...', attributesTypes);\r\n    if(temp_val === 'true'){\r\n        temp_val = true;\r\n    }else if(temp_val === 'false'){\r\n        temp_val = false;\r\n    }\r\n    //console.log('temp_val: ' + temp_val + ', event.target.value: ' + event.target.value);\r\n    var attributes = this.state.attributes;\r\n    var apiParameters = this.apiPython.api_parameters;\r\n    var newApiParameter: any = {};\r\n    if (index === -1) {\r\n      if (attributes[parentKey]) {\r\n        attributes[parentKey][key] = temp_val;\r\n        //apiParameters[key] = event.target.value;\r\n      } else {\r\n        attributes[parentKey] = {\r\n          [key]: temp_val\r\n        };\r\n        //apiParameters[key] = event.target.value;\r\n      }\r\n    } else {\r\n      if (!attributes[parentKey]) {\r\n        attributes[parentKey] = [];\r\n        apiParameters[parentKey] = [];\r\n        /*if(apiParameters[parentKey]) {\r\n          apiParameters[parentKey] = event.target.value;\r\n        }*/\r\n      }\r\n      if (attributes[parentKey][index]) {\r\n        attributes[parentKey][index][key] = temp_val;\r\n        //apiParameters[parentKey][key] = event.target.value;\r\n      } else {\r\n        attributes[parentKey][index] = {\r\n          [key]: temp_val\r\n        };\r\n        /*apiParameters[parentKey] = {\r\n          [key]: event.target.value\r\n        }*/\r\n      }\r\n    }\r\n    //console.log(\"onUpdatedNestedComponent: \");\r\n    //console.log(attributes);\r\n    if(parentKey === 'api_parameters') {\r\n      var val = event.target.value;\r\n      this.apiPython = {\r\n        url: this.apiPython.url,\r\n        worksheet_index: this.apiPython.worksheet_index,\r\n        dataset: this.apiPython.dataset,\r\n        columns: this.apiPython.columns,\r\n        limit: this.apiPython.limit,\r\n        api_parameters: apiParameters\r\n      }\r\n      //console.log(\"apiPython: \", this.apiPython);\r\n      var oldScriptValue = attributes['script'];\r\n      var scriptValue = '';\r\n      var parametersValue = '';\r\n      parametersValue += 'api_parameters = {';\r\n      Object.keys(apiParameters).forEach((parameterKey: any) => {\r\n        var parameterName = apiParameters[parameterKey].name ? apiParameters[parameterKey].name : '';\r\n        var parameterValue = apiParameters[parameterKey].value ? apiParameters[parameterKey].value : '';\r\n        var parameterComma = Object.keys(apiParameters).length === (parameterKey + 1) ? '' : ','\r\n        parametersValue += '\\n  ' + \"'\" + parameterName + \"': '\" + parameterValue + \"'\" + parameterComma;\r\n      })\r\n      parametersValue += '\\n' + '}';\r\n      scriptValue += '\\n' + parametersValue;\r\n      //scriptValue += '\\n' + oldScriptValue;\r\n      //attributes['script'] = scriptValue;\r\n      attributes['script'] = this.constructCustomParameters(this.apiPython);\r\n      this.setState({\r\n        ...this.state,\r\n        attributes: attributes\r\n      },() => {\r\n        //console.log(\"attributes: \", this.state.attributes)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        attributes: attributes\r\n      },\r\n        () => {\r\n          this.validate();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onAddChip(name: string, chip: string, label: string) {\r\n    //console.log('onAddChip---', 'name...', name, 'chip...', chip, 'label... ', label);\r\n    if(this.props.customFacetType === 'API') {\r\n      //console.log(\"name: \", name, \"chip: \", chip);\r\n      //this.apiPython.columns = chip;\r\n      var chips = this.state.attributes[name]\r\n      ? [...this.state.attributes[name], chip]\r\n      : [chip];\r\n      //console.log(\"chips: \", chips);\r\n      var chipsString = chips.toString();\r\n      chipsString = 'columns = ' + \"'\" + chipsString + \"'\";\r\n      this.apiPython = {\r\n        url: this.apiPython.url,\r\n        worksheet_index: this.apiPython.worksheet_index,\r\n        columns: chipsString,\r\n        dataset: this.apiPython.dataset,\r\n        limit: this.apiPython.limit,\r\n        api_parameters: this.apiPython.api_parameters\r\n      }\r\n      var scriptValue = this.constructBQueryPScript(this.apiPython);\r\n      this.setState(\r\n        {\r\n          attributes: {\r\n            ...this.state.attributes,\r\n            [name]: chips,\r\n            ['script']: scriptValue,\r\n          }\r\n        },\r\n        () => {\r\n          this.validate();\r\n        }\r\n      );\r\n    } else {\r\n      var chips = this.state.attributes[label]\r\n        ? [...this.state.attributes[label], chip]\r\n        : [chip];\r\n        console.log('chips...', chips);\r\n        this.setState(\r\n          {\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              [label]: chips\r\n            }\r\n          },\r\n          () => {\r\n            this.validate();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  onTargetColumnChange(name: string, chip: string) {\r\n    //console.log(\"onTargetColumnChange - name: \" + name + \", chip: \" + chip);\r\n    this.setState(\r\n      {\r\n        attributes: {\r\n          ...this.state.attributes,\r\n          [name]: chip\r\n        }\r\n      },\r\n      () => {\r\n        this.validate();\r\n      }\r\n    );\r\n  }\r\n\r\n  onNestedSelectColumn(selectedColumn: string, name: string, parentKey: string, key: string, index: any) {\r\n    //console.log(\"onNestedSelectColumn -  name: \" + name + \", columnName: \" + selectedColumn + \", parentKey: \" + parentKey + \", key: \" + key + \", index: \" + index);\r\n    var attributes = this.state.attributes;\r\n    /*if(attributes[parentKey]){\r\n      if(attributes[parentKey][index]){\r\n        if(attributes[parentKey][index][key]){\r\n          attributes[parentKey][index][key] = selectedColumn;\r\n        }\r\n      }\r\n    }*/\r\n    if (index === -1) {\r\n      if (attributes[parentKey]) {\r\n        attributes[parentKey][key] = selectedColumn;\r\n      } else {\r\n        attributes[parentKey] = {\r\n          [key]: selectedColumn\r\n        };\r\n      }\r\n    } else {\r\n      if (!attributes[parentKey]) {\r\n        attributes[parentKey] = [];\r\n      }\r\n      if (attributes[parentKey][index]) {\r\n        attributes[parentKey][index][key] = selectedColumn;\r\n      } else {\r\n        attributes[parentKey][index] = {\r\n          [key]: selectedColumn\r\n        };\r\n      }\r\n    }\r\n    //console.log(attributes);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        attributes: attributes\r\n      }\r\n    );\r\n  }\r\n\r\n  onDeleteChip(name: string, chip: string, label: string) {\r\n    //console.log('onDeleteChip---', 'name...', name, 'chip...', chip, 'label... ', label);\r\n    var chips = this.state.attributes[label].filter((c: string) => c !== chip);\r\n    this.setState(\r\n      {\r\n        attributes: {\r\n          ...this.state.attributes,\r\n          [label]: chips\r\n        }\r\n      },\r\n      () => {\r\n        this.validate();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleRequestClose() {\r\n    // this.setState({\r\n    //   attributes: {}\r\n    // });\r\n  }\r\n\r\n  /**\r\n   * Returns the form for attributes\r\n   */\r\n\r\n  filterAttributes(arrKey: any) {\r\n    if (arrKey === \"overwrite\" || arrKey === \"project_id\" || arrKey === \"user_email\") {\r\n      return false\r\n    } else if (this.state.facetType === 'Exported' && (arrKey === \"dataset_id\")) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  getAttributes = (updateCallback: (key: string, label: string, e: any) => void): any => {\r\n\r\n    if (\r\n      this.state &&\r\n      this.state.attributesTypes &&\r\n      Object.keys(this.state.attributesTypes).length > 0\r\n    ) {\r\n      //console.log(\"this.state.attributesTypes: \");\r\n      //console.log(this.state.attributesTypes);\r\n      var attributesTypes: any = this.state.attributesTypes;\r\n      if (this.state.chainGroup === '' && this.state.facetGroup === '' && this.state.facetType === '') {\r\n        //console.log(\"attributesTypes: \");\r\n        //console.log(attributesTypes);\r\n        if (attributesTypes.title1) {\r\n          //console.log(\"attributesTypes.title2: \");\r\n          //console.log(attributesTypes.title2);\r\n          //if(attributesTypes.title2.title2 === \"Join\"){\r\n          var facetType = attributesTypes.title1.title1;\r\n          const splitTitel1Value = attributesTypes.title1.title1.split('/');\r\n          var chainGroup = splitTitel1Value[0];\r\n          var facetGroup = splitTitel1Value[1];\r\n          this.setState({\r\n            chainGroup: chainGroup,\r\n            facetGroup: facetGroup,\r\n            facetType: facetType\r\n          });\r\n          delete attributesTypes.title1;\r\n          //}\r\n        } else if (attributesTypes.title2) {\r\n          //console.log(\"attributesTypes.title2: \");\r\n          //console.log(attributesTypes.title2);\r\n          //if(attributesTypes.title2.title2 === \"Join\"){\r\n          // eslint-disable-next-line\r\n          var facetType = attributesTypes.title2.title2;\r\n          const splitTitel1Value = attributesTypes.title2.title1.split('/');\r\n          // eslint-disable-next-line\r\n          var chainGroup = splitTitel1Value[0];\r\n          // eslint-disable-next-line\r\n          var facetGroup = splitTitel1Value[1];\r\n          this.setState({\r\n            chainGroup: chainGroup,\r\n            facetGroup: facetGroup,\r\n            facetType: facetType\r\n          });\r\n          delete attributesTypes.title2;\r\n          //}\r\n        }\r\n        //console.log(\"attributesTypes 2: \");\r\n        //console.log(attributesTypes);\r\n      }\r\n      var attributesTypesArr: any = {};\r\n      var attributesofImpDataset: any = {};\r\n      if (this.state.facetGroup === 'Dataset' && this.state.facetType === 'Imported') {\r\n        Object.keys(attributesTypes).map((key: string) => {\r\n          if (key === 'dataset_id') {\r\n            attributesofImpDataset[key] = attributesTypes[key];\r\n          } else {\r\n            attributesTypesArr[key] = attributesTypes[key];\r\n          }\r\n          return ''\r\n        });\r\n        attributesTypesArr['dataset_id'] = attributesofImpDataset['dataset_id'];\r\n        //attributesTypesArr = attributesTypes;\r\n      } else {\r\n        attributesTypesArr = attributesTypes;\r\n      }\r\n      //console.log(this.state)\r\n      if (this.state.facetType === 'Imported' && this.state.facetGroup === 'Dataset' && this.state.chainGroup === 'Input') {\r\n        // eslint-disable-next-line\r\n        return Object.keys(attributesTypesArr).filter((key: string) => {\r\n          return key !== \"overwrite\" && key !== \"project_id\" && key !== \"user_email\" && key !== \"dashboard_id\"\r\n        }).map((key: string) => {\r\n          var attrs: any = attributesTypes[key];\r\n          //console.log(\"getAttributes: \");\r\n\r\n          if (attrs !== undefined) {\r\n            return this.getInputComponent(\r\n              updateCallback,\r\n              this.state.attributes[key],\r\n              attrs['name'],\r\n              key,\r\n              attrs\r\n            );\r\n          }\r\n          return ''\r\n        });\r\n      } else if (this.state.facetType === 'Dash' && this.state.facetGroup === 'Dashboard' && this.state.chainGroup === 'Output') {\r\n        // eslint-disable-next-line\r\n        return Object.keys(attributesTypesArr).filter((key: string) => {\r\n          return key !== \"overwrite\" && key !== \"project_id\" && key !== \"user_email\" && key !== \"dashboard_id\" && key !== \"dataset_name\"\r\n        }).map((key: string) => {\r\n          var attrs: any = attributesTypes[key];\r\n          //console.log(\"getAttributes: \");\r\n\r\n          if (attrs !== undefined) {\r\n            return this.getInputComponent(\r\n              updateCallback,\r\n              this.state.attributes[key],\r\n              attrs['name'],\r\n              key,\r\n              attrs\r\n            );\r\n          }\r\n          return ''\r\n        });\r\n      } else {\r\n        // eslint-disable-next-line\r\n        return Object.keys(attributesTypesArr).filter((key: string) => {\r\n          return key !== \"overwrite\" && key !== \"project_id\" && key !== \"user_email\" && key !== \"dashboard_id\" && key !== \"dataset_id\"\r\n        }).map((key: string) => {\r\n          var attrs: any = attributesTypes[key];\r\n          //console.log(\"getAttributes: \");\r\n\r\n          if (attrs !== undefined) {\r\n            return this.getInputComponent(\r\n              updateCallback,\r\n              this.state.attributes[key],\r\n              attrs['name'],\r\n              key,\r\n              attrs\r\n            );\r\n          }\r\n          return ''\r\n        });\r\n      }\r\n\r\n    } else {\r\n      return <Box mb={2}>No attributes</Box>;\r\n    }\r\n  };\r\n\r\n  getAttributesForAPIFacet = (updateCallback: (key: string,label:string, e: any) => void, customType?: any): any => {\r\n    //console.log(\"customType: \", customType);\r\n    if (\r\n      this.state &&\r\n      this.state.attributesTypes &&\r\n      Object.keys(this.state.attributesTypes).length > 0\r\n    ) {\r\n      //console.log(\"this.state.attributesTypes: \");\r\n      //console.log(this.state.attributesTypes);\r\n        var attributesTypes: any = this.state.attributesTypes;\r\n\r\n        if(customType && customType === 'api-facet-left'){\r\n          if(this.state.attributes['api_template'] === 'Google Sheets'){\r\n            return Object.keys(attributesTypes).filter((key:string)=>{\r\n              return key !== \"libraries\" && key !== \"script\" && key !== \"dataset\" && key !== \"columns\" && key !== \"limit\" && key!== \"api_parameters\"\r\n            }).map((key: string) => {\r\n              var attrs: any = attributesTypes[key];\r\n              //console.log(\"getAttributes: \");\r\n              \r\n              if(attrs!=undefined){\r\n                return this.getInputComponent(\r\n                  updateCallback,\r\n                  this.state.attributes[key],\r\n                  attrs['name'],\r\n                  key,\r\n                  attrs\r\n                );\r\n              }\r\n            }); \r\n          } else if(this.state.attributes['api_template'] === 'BigQuery' || this.state.attributes[\"api_template\"] === 'Connector'){\r\n            return Object.keys(attributesTypes).filter((key:string)=>{\r\n              return key !== \"libraries\" && key !== \"script\" && key!== \"url\" && key!== \"api_parameters\" && key!== \"worksheet_index\"\r\n            }).map((key: string) => {\r\n              var attrs: any = attributesTypes[key];\r\n              //console.log(\"getAttributes: \");\r\n              \r\n              if(attrs!=undefined){\r\n                return this.getInputComponent(\r\n                  updateCallback,\r\n                  this.state.attributes[key],\r\n                  attrs['name'],\r\n                  key,\r\n                  attrs\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            return Object.keys(attributesTypes).filter((key:string)=>{\r\n              return key !== \"libraries\" && key !== \"script\" && key !== \"dataset\" && key !== \"columns\" && key !== \"limit\" && key!== \"url\" && key!== \"worksheet_index\"\r\n            }).map((key: string) => {\r\n              var attrs: any = attributesTypes[key];\r\n              //console.log(\"getAttributes: \");\r\n              \r\n              if(attrs!=undefined){\r\n                return this.getInputComponent(\r\n                  updateCallback,\r\n                  this.state.attributes[key],\r\n                  attrs['name'],\r\n                  key,\r\n                  attrs\r\n                );\r\n              }\r\n            }); \r\n          }\r\n          /*return Object.keys(attributesTypes).filter((key:string)=>{\r\n            return key !== \"libraries\" && key !== \"script\"\r\n          }).map((key: string) => {\r\n            var attrs: any = attributesTypes[key];\r\n            //console.log(\"getAttributes: \");\r\n            \r\n            if(attrs!=undefined){\r\n              return this.getInputComponent(\r\n                updateCallback,\r\n                this.state.attributes[key],\r\n                attrs['name'],\r\n                key,\r\n                attrs\r\n              );\r\n            }\r\n          });*/   \r\n        } else if(customType && customType === 'api-facet-right'){\r\n          return Object.keys(attributesTypes).filter((key:string)=>{\r\n            return key!== \"url\" && key !== \"api_template\" && key !== \"dataset\" && key !== \"columns\" && key !== \"limit\" && key!== \"api_parameters\" && key!== \"worksheet_index\"\r\n          }).map((key: string) => {\r\n            var attrs: any = attributesTypes[key];\r\n            //console.log(\"getAttributes: \");\r\n            \r\n            if(attrs!=undefined){\r\n              return this.getInputComponent(\r\n                updateCallback,\r\n                this.state.attributes[key],\r\n                attrs['name'],\r\n                key,\r\n                attrs\r\n              );\r\n            }\r\n          }); \r\n        } else if(customType && customType === 'api-facet-top'){\r\n          return Object.keys(attributesTypes).filter((key:string)=>{\r\n            return key!== \"url\" && key !== \"libraries\" && key !== \"script\" && key !== \"dataset\" && key !== \"columns\" && key !== \"limit\" && key!== \"api_parameters\" && key!== \"worksheet_index\"\r\n          }).map((key: string) => {\r\n            var attrs: any = attributesTypes[key];\r\n            //console.log(\"getAttributes: \");\r\n            \r\n            if(attrs!=undefined){\r\n              return this.getInputComponent(\r\n                updateCallback,\r\n                this.state.attributes[key],\r\n                attrs['name'],\r\n                key,\r\n                attrs\r\n              );\r\n            }\r\n          }); \r\n        }\r\n    } else {\r\n      return <Box mb={2}>No attributes</Box>;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the input based on the attribute type. This function is particular to nested input\r\n   */\r\n\r\n  getNestedInputComponent = (\r\n    attribute: any,\r\n    parentKey: any,\r\n    index: number = -1\r\n  ) => {\r\n    // eslint-disable-next-line\r\n    return Object.keys(attribute).map((key: any) => {\r\n      var nestedAttribute = attribute[key];\r\n      //console.log(\"nestedAttribute: \");\r\n      //console.log(nestedAttribute);\r\n      var value;\r\n      if (index !== -1) {\r\n        value =\r\n          this.state.attributes[parentKey] &&\r\n            this.state.attributes[parentKey][index] &&\r\n            this.state.attributes[parentKey][index][key]\r\n            ? this.state.attributes[parentKey][index][key]\r\n            : '';\r\n      } else {\r\n        value =\r\n          this.state.attributes[parentKey] &&\r\n            this.state.attributes[parentKey][key]\r\n            ? this.state.attributes[parentKey][key]\r\n            : '';\r\n      }\r\n      if (nestedAttribute.argument_type === 'TEXT') {\r\n        //console.log(\"nestedAttribute.argument_type> \" + nestedAttribute.argument_type);\r\n        if (nestedAttribute.have_options) {\r\n          return (\r\n              <IkiInput \r\n                _required={nestedAttribute.is_required}\r\n                _error={nestedAttribute.error ? 'Required' : ''}\r\n                _label={getFriendlyLabel(key)}\r\n                _placeholder={\"Select \" + getFriendlyLabel(key)}\r\n                _type='text'\r\n                _autoComplete=\"new-password\"\r\n                _value={value ? value : ''}\r\n                _isSelect={true}\r\n                _fullWidth={true}\r\n                _selectOptions={nestedAttribute.options}\r\n                _selectOptionsKeyForVal=''\r\n                _selectOptionsKeyForTxt=''\r\n                _onChange={(event: any) => {\r\n                  this.onUpdatedNestedComponent(event, parentKey, key, index);\r\n                }}\r\n              />\r\n          );\r\n        } else {\r\n          if (nestedAttribute.name === \"column_name\") {\r\n            var beautifiedVal: any = \"\";\r\n            if (value !== \"\" && value !== undefined) {\r\n              beautifiedVal = getFriendlyLabel(value);\r\n            } else {\r\n              beautifiedVal = \"\";\r\n            }\r\n            return (\r\n                <Box my={2} style={{ width: '100%' }}>\r\n                  <IkiAutocomplete \r\n                    _label={getFriendlyLabel(nestedAttribute.name)}\r\n                    _placeholder={'Type to search ' + getFriendlyLabel(nestedAttribute.name)}\r\n                    _value={value ? value : ''}\r\n                    _selectOptions={this.state.suggestColumnNames.sort()}\r\n                    _noOptionsText={this.state.noColOptionsText}\r\n                    _fullWidth={true}\r\n                    _keyValue=''\r\n                    _nameValue=''\r\n                    _onChange={(event: object, option: any) => this.onNestedSelectColumn(option, nestedAttribute.name, parentKey, key, index)}\r\n                  />\r\n                </Box>\r\n            );\r\n          } else {\r\n            return (\r\n                <IkiInput\r\n                  key={'ikinput-' + key} \r\n                  _label={getFriendlyLabel(key)}\r\n                  _placeholder={\"Enter \" + getFriendlyLabel(key)}\r\n                  _type='text'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={value}\r\n                  _onChange={(event: any) => {\r\n                    this.onUpdatedNestedComponent(event, parentKey, key, index);\r\n                  }}\r\n                  _fullWidth={true}\r\n                  _required={nestedAttribute.is_required}\r\n                  _error={nestedAttribute.error ? 'Required' : ''}\r\n                />\r\n            );\r\n          }\r\n        }\r\n      } else if (nestedAttribute.argument_type === 'BOOLEAN') {\r\n        return (\r\n          <IkiInput \r\n            key={'ikinput-' + key} \r\n            _required={attribute.is_required}\r\n            _error={attribute.error ? 'Required' : ''}\r\n            _label={getFriendlyLabel(key)}\r\n            _placeholder={\"Select \" + getFriendlyLabel(key)}\r\n            _type='text'\r\n            _autoComplete=\"new-password\"\r\n            _value={value !== undefined ? (value === true ? 'true' : 'false') : ''}\r\n            _isSelect={true}\r\n            _fullWidth={true}\r\n            _selectOptions={['', 'true', 'false']}\r\n            _selectOptionsKeyForVal=''\r\n            _selectOptionsKeyForTxt=''\r\n            _onChange={(event: any) => {\r\n              this.onUpdatedNestedComponent(event, parentKey, key, index);\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Returns nested input component for map. For a nested input component, user can add more set of inputs\r\n   * by clicking the + button.\r\n   */\r\n\r\n  getNestedInput = (attribute: any, label: string) => {\r\n    if (attribute.is_list) {\r\n      return attribute.children.map((attr: any, index: number) => {\r\n        if(this.props.customFacetType === 'API') {\r\n          return (\r\n            <div className=\"flow-nested-input-group api-facet\" key={index}>\r\n              <Fab\r\n                color=\"primary\"\r\n                aria-label=\"delete\"\r\n                size=\"small\"\r\n                className=\"flow-nested-delete-btn\"\r\n                disabled={attribute.children.length === 1}\r\n                onClick={() => {\r\n                  this.deleteNestedInputGroup(attribute, label, index);\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </Fab>\r\n  \r\n              {this.getNestedInputComponent(attr, label, index)}\r\n            </div>\r\n          );\r\n        } else{\r\n          return (\r\n            <div className=\"flow-nested-input-group\" key={index}>\r\n              <Fab\r\n                color=\"primary\"\r\n                aria-label=\"delete\"\r\n                size=\"small\"\r\n                className=\"flow-nested-delete-btn\"\r\n                disabled={attribute.children.length === 1}\r\n                onClick={() => {\r\n                  this.deleteNestedInputGroup(attribute, label, index);\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </Fab>\r\n\r\n              {this.getNestedInputComponent(attr, label, index)}\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      return this.getNestedInputComponent(attribute.children, label);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns input component based on the attribute type. This function is particular to non-nested components.\r\n   * @param callback callback function\r\n   * @param value existing value of the attribute. This vaue is used to auto fill the input components that were added previously.\r\n   * @param label The key of the attribute\r\n   * @param attribute The attribute object\r\n   */\r\n\r\n  getInputComponent = (\r\n    callback: any,\r\n    value: any,\r\n    label: any,\r\n    key: any,\r\n    attribute: any\r\n  ) => {\r\n    //console.log(\"getInputComponent - key: \" + key + \", label: \" + label + \", attribute.argument_type: \" + attribute.argument_type + \", attribute.have_options: \" + attribute.have_options);\r\n    //console.log(\"getInputComponent - key: \" + key + \", label: \" + label + \", name: \" + attribute.name + \", value: \" + value + \", attribute: \");\r\n    //console.log(attribute);\r\n    //console.log(\"this.state.attributes: \");\r\n    //console.log(this.state.attributes);\r\n    /**\r\n     * If the argument type is title, display the title in the form\r\n     * This particular argument_type does not come from the backend. This is used to display the facet title for arrow arguments.\r\n     * This method had to be used for cases where we need to display the title of both in arrow and out arrow arguments.\r\n     * */\r\n    if (attribute.argument_type === 'title') {\r\n      return (\r\n        <Box className=\"dialog-title default-color\" mb={2}>\r\n          <div className=\"chain-and-group\">\r\n            <span className=\"chain-group-title\">{attribute.title1}</span>\r\n          </div>\r\n          <div className=\"facet-title\">{attribute.title2}</div>\r\n        </Box>\r\n      );\r\n    } else if (attribute.argument_type === 'MAP') {\r\n      /**\r\n       * If the argument_type is Map add nested input group.\r\n       */\r\n      return (\r\n        <Fragment>\r\n            {this.props.customFacetType === 'API' ? (\r\n              this.state.attributes['api_template'] === 'Custom' && this.state.showApiParameters ? (\r\n                <div className=\"flow-nested-arg\" key={label}>\r\n                <div className=\"flow-nested-arg-title\">\r\n                  {this.props.customFacetType === 'API' ? (\r\n                    <div className=\"flow-nested-arg-label\">{getFriendlyLabel(label)}</div>\r\n                  ):(\r\n                    <div className=\"flow-nested-arg-label\">{label}</div>\r\n                  )}\r\n                  {attribute.is_list && (\r\n                    <IkiButton\r\n                      _disabled={attribute.children.length === 3}\r\n                      _variant='text'\r\n                      _color='default'\r\n                      _label=\"Add\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _startIcon={<AddIcon />}\r\n                      _onClick={() => this.addNestedInputGroup(attribute, label)}\r\n                    />\r\n                  )}\r\n                </div>\r\n                {this.getNestedInput(attribute, label)}\r\n              </div>\r\n              ):(\r\n                ''\r\n              )\r\n              ):(\r\n                <div className=\"flow-nested-arg\" key={label}>\r\n                  <div className=\"flow-nested-arg-title\">\r\n                    {this.props.customFacetType === 'API' ? (\r\n                      <div className=\"flow-nested-arg-label\">{getFriendlyLabel(label)}</div>\r\n                    ):(\r\n                      <div className=\"flow-nested-arg-label\">{label}</div>\r\n                    )}\r\n                    {attribute.is_list && (\r\n                      <IkiButton\r\n                        _disabled={attribute.children.length === 3}\r\n                        _variant='text'\r\n                        _color='default'\r\n                        _label=\"Add\"\r\n                        _type='button'\r\n                        _fullWidth={false}\r\n                        _startIcon={<AddIcon />}\r\n                        _onClick={() => this.addNestedInputGroup(attribute, label)}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  {this.getNestedInput(attribute, label)}\r\n                </div>\r\n              )}\r\n            </Fragment>\r\n      );\r\n    } else if (attribute.argument_type === 'TEXT') {\r\n      if (attribute.have_options) {\r\n        if (label === 'table_side') {\r\n          var temp_val: any;\r\n          if (this.state.attributes[label]) {\r\n            temp_val = this.state.attributes[label];\r\n            attribute.options.forEach((attr: any, index: number) => {\r\n              // eslint-disable-next-line\r\n              var temp_key_val = index;\r\n              //console.log(\"attr: \" + attr + \", temp_val: \" + temp_val + \", index: \" + index + \", ---temp_key_val: \" + temp_key_val);\r\n              if (attr === temp_val) {\r\n                value = temp_val;\r\n              }\r\n              //return ''\r\n            });\r\n            //return ''\r\n          }\r\n          //console.log(\"label: \" + label + \", value: \" + value);\r\n          //value = getFriendlyLabel(value);\r\n        }\r\n        return (\r\n              <IkiInput \r\n                key={'ikinput-' + label} \r\n                _required={attribute.is_required}\r\n                _error={attribute.error ? 'Required' : ''}\r\n                _label={getFriendlyLabel(label)}\r\n                _placeholder={\"Select \" + getFriendlyLabel(label)}\r\n                _type='text'\r\n                _autoComplete=\"new-password\"\r\n                _value={value ? value : ''}\r\n                _isSelect={true}\r\n                _fullWidth={true}\r\n                _selectOptions={attribute.options}\r\n                _selectOptionsKeyForVal=''\r\n                _selectOptionsKeyForTxt=''\r\n                _onChange={(event: any) => {\r\n                  callback(key, label, event, attribute.argument_type);\r\n                }}\r\n              />\r\n        );\r\n      } else if (attribute.is_list) {\r\n        //Show column names fileld based on the header value for input / AWS component.\r\n        if (\r\n          this.state.showColumNamesChips === 'show' ||\r\n          label !== 'column_names' ||\r\n          label !== 'libraries'\r\n        ) {\r\n          if (label === 'target_columns' || label === 'target_column') {\r\n            return (\r\n              <IkiAutocomplete \r\n                  key={label}\r\n                  _label={getFriendlyLabel(label)}\r\n                  _placeholder={'Type to search ' + getFriendlyLabel(label)}\r\n                  _value={value ? value : []}\r\n                  _isMultiple={true}\r\n                  _selectOptions={this.state.suggestColumnNames.sort()}\r\n                  _noOptionsText={this.state.noColOptionsText}\r\n                  _fullWidth={true}\r\n                  _keyValue=''\r\n                  _nameValue=''\r\n                  _onChange={(event: object, option: any) => this.onTargetColumnChange(label, option)}\r\n                  _renderTags={(value: any, getTagProps: any) =>\r\n                    value.map((option: any, index: any) => (\r\n                      <Chip label={getFriendlyLabel(option)} {...getTagProps({ index })} />\r\n                    ))\r\n                  }\r\n              />\r\n            );\r\n          }\r\n          else if (label === 'associated_dataset') {\r\n            if (this.state.attributes['associated_dataset'] && this.state.associatedDatasetAttribute.length === 0) {\r\n              this.setState({\r\n                associatedDatasetAttribute: this.state.attributes['associated_dataset']\r\n              })\r\n            } else if (!this.state.attributes['associated_dataset'] && this.state.associatedDatasetAttribute.length === 0) {\r\n\r\n              this.setState({\r\n                associatedDatasetAttribute: [' ']\r\n              })\r\n            }\r\n\r\n            return (\r\n              <div className=\"flow-nested-arg in-pipeline\" key={label}>\r\n                <div className=\"flow-nested-arg-title\">\r\n                  <div className=\"mt-10\"><br /><br /></div>\r\n                  <div className=\"flow-nested-arg-label\">{label.split(\"_\").join(\" \")}</div>\r\n                  {attribute.is_list && (\r\n                    <IkiButton\r\n                      _variant='text'\r\n                      _color='default'\r\n                      _label=\"Add\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _startIcon={<AddIcon />}\r\n                      _onClick={() => {\r\n                        this.setState({\r\n                          associatedDatasetAttribute: [...this.state.associatedDatasetAttribute, ' ']\r\n                        })\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n\r\n                {\r\n                  this.state.associatedDatasetAttribute.map((data: any, index: number) => (\r\n                    <Fragment>\r\n                      <div className=\"flow-addon-associated_datasets\" key={index}>\r\n                        {(<Fab\r\n                          color=\"primary\"\r\n                          aria-label=\"delete\"\r\n                          size=\"small\"\r\n                          className=\"flow-nested-associated-btn\"\r\n                          disabled={this.state.associatedDatasetAttribute.length === 1}\r\n                          onClick={() => {\r\n                            var temp: any = this.state.associatedDatasetAttribute.filter((a: any, i: number) => { return i !== index })\r\n                            this.setState({\r\n                              associatedDatasetAttribute: temp\r\n                            })\r\n                            setTimeout(() => {\r\n                              callback(key, label, '', attribute.argument_type);\r\n                            }, 200)\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </Fab>)}\r\n\r\n                        <IkiInput \r\n                          key={'ikinput-assoc-d-' + (index + 1)} \r\n                          _required={true}\r\n                          _error={this.state.associatedDatasetAttribute[index] === ' ' ? 'Required' : ''}\r\n                          _label={\"Associated Dataset #\" + (index + 1)}\r\n                          _placeholder={\"Select Associated Dataset #\" + (index + 1)}\r\n                          _type='text'\r\n                          _autoComplete=\"new-password\"\r\n                          _value={this.state.associatedDatasetAttribute[index] !== '' ? this.state.associatedDatasetAttribute[index] : ' '}\r\n                          _isSelect={true}\r\n                          _fullWidth={true}\r\n                          _selectOptions={this.props.datasets}\r\n                          _selectOptionsKeyForVal='name'\r\n                          _selectOptionsKeyForTxt='name'\r\n                          _onChange={(event: any) => {\r\n                            var updatedAssociatedDatasets: any = this.state.associatedDatasetAttribute\r\n                            updatedAssociatedDatasets[index] = event.target.value\r\n                            this.setState({\r\n                              associatedDatasetAttribute: updatedAssociatedDatasets,\r\n                            })\r\n                            callback(key, label, event, attribute.argument_type);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Fragment>\r\n                  ))\r\n                }\r\n                <div className=\"mb-10\">\r\n                  {attribute.is_list && (\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"Add another Associated Dataset\"\r\n                      _type='button'\r\n                      _fullWidth={true}\r\n                      _startIcon={<AddIcon />}\r\n                      _onClick={() => {\r\n                        this.setState({\r\n                          associatedDatasetAttribute: [...this.state.associatedDatasetAttribute, ' ']\r\n                        })\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            if (label === 'values') {\r\n              value = this.state.attributes[label];\r\n            }\r\n            if (this.props.facetType === 'IMPORTED' || this.props.facetType === 'EXPORTED') {\r\n              if (this.state.showColumNamesChips === 'show') {\r\n                return (\r\n                  <IkiChipInput \r\n                    key={'chipinput-' + label} \r\n                    _required={attribute.is_required}\r\n                    _error={attribute.error ? 'Required' : ''}\r\n                    _label={getFriendlyLabel(label)}\r\n                    _placeholder={\"Type and press enter to add \" + getFriendlyLabel(label)}\r\n                    _type='text'\r\n                    _autoComplete=\"new-password\"\r\n                    _value={value ? value : []}\r\n                    _fullWidth={true}\r\n                    _margin=\"normal\"\r\n                    _variant=\"outlined\"\r\n                    _addChip={(chip: any) => {\r\n                      this.onAddChip(key, chip, label);\r\n                    }}\r\n                    _deleteChip={(deletedChip: any) => {\r\n                      this.onDeleteChip(key, deletedChip, label);\r\n                    }}\r\n                  />\r\n                );\r\n              }\r\n            } else {\r\n              return (\r\n                <IkiChipInput \r\n                    key={'chipinput-' + label} \r\n                    _required={attribute.is_required}\r\n                    _error={attribute.error ? 'Required' : ''}\r\n                    _label={getFriendlyLabel(label)}\r\n                    _placeholder={\"Type and press enter to add \" + getFriendlyLabel(label)}\r\n                    _type='text'\r\n                    _autoComplete=\"new-password\"\r\n                    _value={value ? value : []}\r\n                    _fullWidth={true}\r\n                    _margin=\"normal\"\r\n                    _variant=\"outlined\"\r\n                    _addChip={(chip: any) => {\r\n                      //console.log('inputchage chip...', chip);\r\n                      this.onAddChip(key, chip, label);\r\n                    }}\r\n                    _deleteChip={(deletedChip: any) => {\r\n                      this.onDeleteChip(key, deletedChip, label);\r\n                    }}\r\n                />\r\n              );\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (label === 'dataset_id' || this.props.facetType === 'IMPORTED') {\r\n          var alternativeLabel = 'Dataset Name';\r\n          return (\r\n            <div key={label}>\r\n                <IkiInput \r\n                  key={'ikinput-' + label} \r\n                  _required={attribute.is_required}\r\n                  _error={attribute.error ? 'Required' : ''}\r\n                  _label={alternativeLabel}\r\n                  _placeholder={\"Select \" + alternativeLabel}\r\n                  _type='text'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={value ? value : ''}\r\n                  _isSelect={true}\r\n                  _fullWidth={true}\r\n                  _selectOptions={this.props.datasets}\r\n                  _selectOptionsKeyForVal='dataset_id'\r\n                  _selectOptionsKeyForTxt='name'\r\n                  _onChange={(event: any) => {\r\n                    callback(key, label, event, attribute.argument_type);\r\n                  }}\r\n                />\r\n              <IkiDivider\r\n                _text='or'\r\n              />\r\n              <div>\r\n                <IkiButton\r\n                      _variant='outlined'\r\n                      _color='primary'\r\n                      _label=\"Upload New Dataset\"\r\n                      _type='button'\r\n                      _fullWidth={true}\r\n                      _startIcon={\r\n                        <i className=\"zmdi zmdi-cloud-upload zmdi-hc-fw\"></i>\r\n                      }\r\n                      _onClick={this.props.handleCreateNewDataset}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        if (label === 'script') {\r\n          return (\r\n            <div key={'py-script-div'}>\r\n              <AceEditor\r\n                mode=\"python\"\r\n                theme=\"kuroir\"\r\n                onChange={(event: any) => {\r\n                  callback(key, label, event, attribute.argument_type);\r\n                }}\r\n                value={value}\r\n                name=\"script\"\r\n                editorProps={{\r\n                  $blockScrolling: false\r\n                }}\r\n                focus={true}\r\n                setOptions={{\r\n                  enableBasicAutocompletion: true,\r\n                  enableLiveAutocompletion: true,\r\n                  enableSnippets: true,\r\n                  showLineNumbers: true,\r\n                  tabSize: 2,\r\n                }}\r\n              />\r\n              {attribute.is_required && attribute.error && (\r\n                <FormHelperText className=\"input-error\" error>\r\n                  <ErrorIcon />\r\n                  <span>Required</span>\r\n                </FormHelperText>\r\n              )}\r\n            </div>\r\n          );\r\n        }\r\n        //disable the text field for bucket property of\r\n        var isBucket =\r\n          label === 'bucket' &&\r\n          this.state.facetGroup.toLowerCase() === 'dataset';\r\n        // If the input is bucket disable the input and fill the default value\r\n        return (\r\n            <IkiInput \r\n                  key={'ikinput-' + key} \r\n                  _label={getFriendlyLabel(key)}\r\n                  _placeholder={\"Enter \" + getFriendlyLabel(key)}\r\n                  _type='text'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={value}\r\n                  _onChange={(event: any) => {\r\n                    callback(key, label, event, attribute.argument_type);\r\n                  }}\r\n                  _fullWidth={true}\r\n                  _required={attribute.is_required}\r\n                  _error={attribute.error ? 'Required' : ''}\r\n                  _disabled={isBucket}\r\n            />\r\n        );\r\n      }\r\n    } else if (attribute.argument_type === 'BOOLEAN') {\r\n      /*if (\r\n        label === 'header' &&\r\n        value === false &&\r\n        this.state.showColumNamesChips === ''\r\n      ) {\r\n        this.setState({ showColumNamesChips: 'show' });\r\n      } else if (\r\n        label === 'header' &&\r\n        value === true &&\r\n        this.state.showColumNamesChips === 'show'\r\n      ) {\r\n        this.setState({ showColumNamesChips: 'hide' });\r\n      }*/\r\n      return (\r\n        <IkiInput \r\n          key={'ikinput-' + label} \r\n          _required={attribute.is_required}\r\n          _error={attribute.error ? 'Required' : ''}\r\n          _label={getFriendlyLabel(label)}\r\n          _placeholder={\"Select \" + getFriendlyLabel(label)}\r\n          _type='text'\r\n          _autoComplete=\"new-password\"\r\n          _value={value !== undefined ? (value === true ? 'true' : 'false') : ''}\r\n          _isSelect={true}\r\n          _fullWidth={true}\r\n          _selectOptions={['true', 'false']}\r\n          _selectOptionsKeyForVal=''\r\n          _selectOptionsKeyForTxt=''\r\n          _onChange={(event: any) => {\r\n            callback(key, label, event, attribute.argument_type);\r\n          }}\r\n        />\r\n      );\r\n    } else if (attribute.type === 'email') {\r\n      return (\r\n        <div key={label}>\r\n          <IkiInput \r\n                  key={'ikinput-' + key} \r\n                  _label={getFriendlyLabel(key)}\r\n                  _placeholder={\"Enter \" + getFriendlyLabel(key)}\r\n                  _type='email'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={value}\r\n                  _onChange={(event: any) => {\r\n                    callback(key, label, event, 'email');\r\n                  }}\r\n                  _fullWidth={true}\r\n                  _required={attribute.is_required}\r\n                  _error={attribute.error ? 'Required' : ''}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (attribute.argument_type === 'NUMBER') {\r\n      return (\r\n        <div key={label}>\r\n          <IkiInput \r\n                  key={'ikinput-' + key} \r\n                  _label={getFriendlyLabel(key)}\r\n                  _placeholder={\"Enter \" + getFriendlyLabel(key)}\r\n                  _type='number'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={value}\r\n                  _onChange={(event: any) => {\r\n                    callback(key, label, event);\r\n                  }}\r\n                  _fullWidth={true}\r\n                  _required={attribute.is_required}\r\n                  _error={attribute.error ? 'Required' : ''}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  addNestedInputGroup(attribute: any, label: string) {\r\n    var firstElement = cloneObject(attribute.children[0]);\r\n    attribute.children = [...attribute.children, firstElement];\r\n    this.setState({\r\n      ...this.state,\r\n      attributesTypes: {\r\n        ...this.state.attributesTypes,\r\n        [label]: attribute\r\n      }\r\n    });\r\n  }\r\n  deleteNestedInputGroup(attributeTypes: any, key: any, index: any) {\r\n    attributeTypes.children = attributeTypes.children.filter(\r\n      (attr: any, i: any) => {\r\n        return i !== index;\r\n      }\r\n    );\r\n    var attributes = this.state.attributes;\r\n    if (attributes[key]) {\r\n      attributes[key] = attributes[key].filter((attr: any, i: any) => {\r\n        return i !== index;\r\n      });\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      attributesTypes: {\r\n        ...this.state.attributesTypes,\r\n        [key]: attributeTypes\r\n      },\r\n      attributes: attributes\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validates form to check if all the required arguments are entered\r\n   */\r\n\r\n  validate() {\r\n    var attributeTypes = this.state.attributesTypes;\r\n    var error = false;\r\n    //console.log(attributeTypes);\r\n    //console.log('validat---', 'this.state.attributes[key]...', this.state.attributes[key], 'attributeTypes...', attributeTypes)\r\n    // eslint-disable-next-line\r\n    Object.keys(attributeTypes).filter((key: string) => {\r\n      //return key !== \"dataset_id\" && key !== \"overwrite\"  && key !== \"project_id\" && key !== \"user_email\" && key  !== \"dashboard_id\" && key  !== \"dataset_name\"\r\n      return (\r\n        key !== \"overwrite\" &&\r\n        key !== \"project_id\" &&\r\n        key !== \"user_email\" &&\r\n        (\r\n          (key !== \"dataset_id\" && key !== \"dashboard_id\" && key !== \"dataset_name\") ||\r\n          (this.state.facetType === \"Exported\" && this.state.facetGroup === \"Dataset\" && key !== \"dataset_id\") ||\r\n          (this.state.facetType === \"Imported\" && this.state.facetGroup === \"Dataset\" && key !== \"dataset_name\")\r\n        )\r\n      )\r\n      // eslint-disable-next-line\r\n    }).map((key: string) => {\r\n      var attrType = attributeTypes[key];\r\n      if (attrType.argument_type === 'MAP') {\r\n        if (attrType.is_list) {\r\n          // eslint-disable-next-line\r\n          attrType.children.map((childAttr: any, index: number) => {\r\n            // eslint-disable-next-line\r\n            Object.keys(childAttr).map((key1: string) => {\r\n              var childAttrType = childAttr[key1];\r\n              if (childAttrType.is_list) {\r\n                childAttrType.error =\r\n                  childAttrType.is_required &&\r\n                  (this.state.attributes[key] === undefined ||\r\n                    this.state.attributes[key][index] === undefined ||\r\n                    this.state.attributes[key][index][key1] === undefined ||\r\n                    this.state.attributes[key][index][key1].length === 0);\r\n              } else {\r\n                childAttrType.error =\r\n                  childAttrType.is_required &&\r\n                  (this.state.attributes[key] === undefined ||\r\n                    this.state.attributes[key][index] === undefined ||\r\n                    this.state.attributes[key][index][key1] === undefined ||\r\n                    this.state.attributes[key][index][key1] === '');\r\n              }\r\n              if (!error) {\r\n                error = childAttrType.error;\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          // eslint-disable-next-line\r\n          Object.keys(attrType.children).map((key1: string) => {\r\n            var childAttrType = attrType.children[key1];\r\n            if (childAttrType.is_list) {\r\n              childAttrType.error =\r\n                childAttrType.is_required &&\r\n                (this.state.attributes[key] === undefined ||\r\n                  this.state.attributes[key][key1] === undefined ||\r\n                  this.state.attributes[key][key1].length === 0);\r\n            } else {\r\n              childAttrType.error =\r\n                childAttrType.is_required &&\r\n                (this.state.attributes[key] === undefined ||\r\n                  this.state.attributes[key][key1] === undefined ||\r\n                  this.state.attributes[key][key1] === '');\r\n            }\r\n            if (!error) {\r\n              error = childAttrType.error;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        //console.log('validatw---', 'key...', key, 'this.state.attributes[key]...', this.state.attributes[key], 'attributeTypes...', attributeTypes)\r\n        if (attrType.is_list) {\r\n          if (attrType.name === 'associated_dataset') {\r\n            var temp2 = this.state.associatedDatasetAttribute.filter((d: any) => { return d === ' ' })\r\n            attrType.error = temp2.length > 0 ? true : false\r\n          } else if (attrType.is_required && attrType.name === 'values') {\r\n            //console.log(\"this.state.attributes['values']...\", this.state.attributes['values']);\r\n            if (this.state.attributes['values']) {\r\n              attrType.error = false;\r\n            } else {\r\n              attrType.error = true;\r\n            }\r\n          } else {\r\n            attrType.error =\r\n              attrType.is_required &&\r\n              (this.state.attributes[key] === undefined ||\r\n                this.state.attributes[key].length === 0);\r\n          }\r\n        } else {\r\n          if (attrType.name === 'table_side') {\r\n            if (this.state.attributes[attrType.name]) {\r\n              attrType.error = false;\r\n            } else {\r\n              attrType.error = true;\r\n            }\r\n            //console.log(\"validate table_side key: \" + key + \", name: \" + attrType.name);\r\n            //console.log(\"this.state.attributes: \");\r\n            //console.log(this.state.attributes);\r\n          } else {\r\n            attrType.error =\r\n              attrType.is_required &&\r\n              (this.state.attributes[key] === undefined ||\r\n                this.state.attributes[key] === '');\r\n          }\r\n        }\r\n      }\r\n      if (!error) {\r\n        error = attrType.error;\r\n      }\r\n    });\r\n    this.setState({\r\n      attributesTypes: attributeTypes\r\n    });\r\n    return error;\r\n  }\r\n\r\n  checkForOutputDashName() {\r\n    return new Promise<object>((resolve, reject) => {\r\n      //console.log(this.props.facetType);\r\n\r\n      if (this.props.facetType === 'DASH') {\r\n        var checkNameOverlap = false;\r\n        var checkDashboardname = ''\r\n        var checkDashboardId = ''\r\n        //console.log(this.state);\r\n        //console.log(this.props.dashboards);\r\n\r\n        this.props.dashboards.map((dashboardData: any) => {\r\n          if (dashboardData.name === this.state.attributes['dashboard_name']) {\r\n            checkNameOverlap = true;\r\n            checkDashboardname = dashboardData.name;\r\n            checkDashboardId = dashboardData.dashboard_id;\r\n          }\r\n          return ''\r\n        })\r\n        if (checkNameOverlap) {\r\n          //console.log(\"name foun\");\r\n\r\n          this.setState({\r\n            ...this.state,\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              overwrite: true,\r\n              project_id: this.props.projectId,\r\n              dashboard_id: checkDashboardId\r\n            },\r\n            newlyAddedDashboardNameExists: true,\r\n            newlyAddedDashboardName: checkDashboardname,\r\n            newlyAddedDashboardID: checkDashboardId\r\n          });\r\n          reject();\r\n        } else {\r\n          //console.log('**********here');\r\n\r\n          this.setState({\r\n            ...this.state,\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              dashboard_id: '*',\r\n              project_id: this.props.projectId,\r\n              overwrite: false\r\n            }\r\n          });\r\n          resolve();\r\n        }\r\n      }\r\n    })\r\n  }\r\n  /***\r\n   * Check if the output dataset name overlap with any of the existing datasets of the project.\r\n   */\r\n\r\n  checkForOutputDataset() {\r\n    return new Promise<object>((resolve, reject) => {\r\n      //console.log(â€œthis.props.facetTypeâ€);\r\n      //console.log(this.props.facetType);\r\n      if (this.props.facetType === 'EXPORTED') {\r\n        var checkDatasetNameOverlap = false;\r\n        var checkDatasetNameOverlapName = '';\r\n        var checkDatasetNameOverlapID = '';\r\n        this.props.datasets.map((datasetData: any) => {\r\n          //console.log(â€œdatasetData.dataset.name: â€ + datasetData.name + â€œ, this.state.attributes: â€ + this.state.attributes[â€œdataset_nameâ€]);\r\n          if (\r\n            datasetData.name === this.state.attributes['dataset_name']\r\n          ) {\r\n            //console.log(â€œOVERWRITE HIT for name: â€ + datasetData.name);\r\n            checkDatasetNameOverlap = true;\r\n            checkDatasetNameOverlapName = datasetData.name;\r\n            checkDatasetNameOverlapID = datasetData.dataset_id;\r\n          }\r\n          return ''\r\n        });\r\n        if (checkDatasetNameOverlap !== false) {\r\n          this.setState({\r\n            ...this.state,\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              project_id: this.props.projectId,\r\n              user_email: this.props.user,\r\n              overwrite: true,\r\n              dataset_id: checkDatasetNameOverlapID\r\n            },\r\n            newlyAddedDatasetNameExists: true,\r\n            newlyAddedDatasetName: checkDatasetNameOverlapName,\r\n            newlyAddedDatasetID: checkDatasetNameOverlapID\r\n          });\r\n          reject();\r\n        } else {\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              attributes: {\r\n                ...this.state.attributes,\r\n                project_id: this.props.projectId,\r\n                user_email: this.props.user,\r\n                overwrite: false,\r\n                dataset_id: ''\r\n              }\r\n            },\r\n            () => {\r\n              resolve();\r\n            }\r\n          );\r\n        }\r\n      } else if (this.props.facetType === 'DASH') {\r\n        this.setState({\r\n          attributes: {\r\n            ...this.state.attributes,\r\n            project_id: this.props.projectId,\r\n            overwrite: false\r\n          }\r\n        }, () => {\r\n          resolve()\r\n        })\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates output path of the props by adding user email / project id / dataset id / dataset name\r\n   * @param projectId Project Id\r\n   * @param datasetId Dataset Id\r\n   * @param datasetName Dataset Name\r\n   */\r\n\r\n  updateOutputPath(projectId: string, datasetId: string, datasetName: string) {\r\n    const promise = new Promise<object>((resolve, reject) => {\r\n      if (this.props.facetType === 'EXPORTED') {\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            attributes: {\r\n              ...this.state.attributes,\r\n              path: `${this.props.user}/${projectId}/${datasetId}/${datasetName}`\r\n            }\r\n          },\r\n          () => resolve()\r\n        );\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  handleDismissDatasetNameExists() {\r\n    this.setState({\r\n      newlyAddedDatasetNameExists: false,\r\n      newlyAddedDatasetName: '',\r\n      newlyAddedDatasetID: ''\r\n    });\r\n  }\r\n  handleDismissDashboardNameExists() {\r\n    this.setState({\r\n      newlyAddedDashboardNameExists: false,\r\n      newlyAddedDashboardName: '',\r\n      newlyAddedDashboardID: ''\r\n    });\r\n  }\r\n\r\n  handleDatasetOverwriteYes() {\r\n    //console.log('lll');\r\n    if (this.props.facetType === 'EXPORTED') {\r\n      //this.state.attributes[â€˜overwriteâ€™] = true;\r\n      //this.state.attributes[â€˜dataset_idâ€™] = this.state.newlyAddedDatasetID;\r\n      //this.forceUpdate();\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          attributes: {\r\n            ...this.state.attributes,\r\n            overwrite: true,\r\n            dataset_id: this.state.newlyAddedDatasetID,\r\n            project_id: this.props.projectId,\r\n            user_email: this.props.user\r\n          }\r\n        },\r\n        () => {\r\n          this.props.handleNamingFacet(this.state.customFacetName);\r\n          this.props.onSubmit(this.state.attributes);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  handleDashboardOverwriteYes() {\r\n    if (this.props.facetType === 'DASH') {\r\n      //this.state.attributes[â€˜overwriteâ€™] = true;\r\n      //this.state.attributes[â€˜dataset_idâ€™] = this.state.newlyAddedDatasetID;\r\n      //this.forceUpdate();\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          attributes: {\r\n            ...this.state.attributes,\r\n            overwrite: true\r\n          }\r\n        },\r\n        () => {\r\n          this.props.handleNamingFacet(this.state.customFacetName);\r\n          this.props.onSubmit(this.state.attributes);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Auto save Dynamic type of facets when typing e.g Python facet\r\n   */\r\n\r\n  handleAutoSave = () => {\r\n    this.setState({\r\n      autoSaveTimeout: this.resetTimeout(this.state.autoSaveTimeout, setTimeout(this.handleSubmitScriptFacetOnChange, 400))\r\n    });\r\n  }\r\n\r\n  handleSubmitScriptFacetOnChange = () => {\r\n    this.props.onSubmit(this.state.attributes, false, true);\r\n    this.setState({ ...this.state, autoSaveSaved: true });\r\n    setTimeout(() => this.setState({ ...this.state, autoSaveSaved: false }), 1000)\r\n  }\r\n\r\n  resetTimeout = (id: any, newID: any) => {\r\n    clearTimeout(id)\r\n    return newID\r\n  }\r\n\r\n  standardDialog = () => {\r\n    var attributesTypes: any = this.state.attributesTypes;\r\n    //console.log(\"UPDATE MODAL - this.state.chainGroup: \" + this.state.chainGroup + \", this.state.facetGroup: \" + this.state.facetGroup + \", this.state.facetType: \" + this.state.facetType)\r\n    return (\r\n      <IkiDialog\r\n        _open={this.props.open}\r\n        _type='regular'\r\n        _icon={false}\r\n        _title={this.state.facetType}\r\n        _subtitle={\r\n          this.state.chainGroup !== '' ? (\r\n            this.state.chainGroup + ' / ' + this.state.facetGroup\r\n          ):(\r\n            ''\r\n          )\r\n        }\r\n        _size='xs'\r\n        _content={\r\n          this.state.newlyAddedDatasetNameExists === true ? (\r\n            <Fragment>\r\n              <AlertMsg\r\n                alertType=\"warning\"\r\n                alertContent={\r\n                  <Fragment>\r\n                    <Box>\r\n                      <span>Dataset with same name already exists.</span>\r\n                      <br />\r\n                      <strong>{this.state.newlyAddedDatasetName}</strong>\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      Please note:\r\n                      <br /> All flows which contain this dataset will be\r\n                      reflected by this change.\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      <strong>\r\n                        Are you sure you want to continue and overwrite dataset?\r\n                      </strong>\r\n                    </Box>\r\n                  </Fragment>\r\n                }\r\n                alertButtons={\r\n                  <Fragment>\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"No, go back\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDismissDatasetNameExists()}\r\n                    />\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='warning'\r\n                      _label=\"Yes, overwrite\"\r\n                      _type='button'\r\n                      _isWarning={true}\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDatasetOverwriteYes()}\r\n                    />\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Fragment>\r\n          ) : this.state.newlyAddedDashboardNameExists === true ? (\r\n            <Fragment>\r\n              <AlertMsg\r\n                alertType=\"warning\"\r\n                alertContent={\r\n                  <Fragment>\r\n                    <Box>\r\n                      <span>Dashboard with same name already exists.</span>\r\n                      <br />\r\n                      <strong>{this.state.newlyAddedDashboardName}</strong>\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      Please note:\r\n                      <br /> All flows which contain this dashboard will be\r\n                      reflected by this change.\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      <strong>\r\n                        Are you sure you want to continue and overwrite dashboard?\r\n                      </strong>\r\n                    </Box>\r\n                  </Fragment>\r\n                }\r\n                alertButtons={\r\n                  <Fragment>\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"No, go back\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDismissDashboardNameExists()}\r\n                    />\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='warning'\r\n                      _label=\"Yes, overwrite\"\r\n                      _type='button'\r\n                      _isWarning={true}\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDashboardOverwriteYes()}\r\n                    />\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Fragment>\r\n          )\r\n              : (\r\n                <Fragment>\r\n                  {this.props.facetDocumentation && (\r\n                    <div className=\"dialog-help\">\r\n                      <HelpPopover\r\n                        helpText={this.props.facetDocumentation.documentation}\r\n                      ></HelpPopover>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-container\">\r\n                    {this.state.chainGroup !== '' && this.state.facetGroup !== '' && this.state.facetType !== '' && (!this.props.attributesTypes.title1 && !this.props.attributesTypes.title2) && (\r\n                      <Box mb={3}>\r\n                        <IkiInput \r\n                              key={'ikinput-fcn-' + this.state.facetType} \r\n                              _label=\"Facet Name (optional)\"\r\n                              _placeholder=\"Enter Facet Name\"\r\n                              _type='search'\r\n                              _autoComplete=\"new-password\"\r\n                              _value={this.state.customFacetName}\r\n                              _onChange={(e: any) => {\r\n                                this.setState({\r\n                                  customFacetName: e.target.value\r\n                                });\r\n                              }}\r\n                              _characterCounter={15}\r\n                              _autoFocus={true}\r\n                              _fullWidth={true}\r\n                        />\r\n                      </Box>\r\n                    )}\r\n                    {this.getAttributes(this.onUpdate.bind(this))}\r\n                  </div>\r\n                </Fragment>\r\n              )\r\n        }\r\n        _actions={\r\n          <Fragment>\r\n            {!this.state.newlyAddedDatasetNameExists && (\r\n              <Fragment>\r\n                {this.state.facetGroup === 'Dynamic' && this.state.autoSaveSaved &&\r\n                  <div className=\"succes-color fade-in-out mr-auto\">\r\n                    <i className=\"zmdi zmdi-check zmdi-hc-fw\" />\r\n                    <span className=\"ml-7\">Saved</span>\r\n                  </div>\r\n                }\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={this.props.onCancel}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Update\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _disabled={false}\r\n                  _onClick={\r\n                    () => {\r\n                      var error = this.validate();\r\n                      if (!error) {\r\n                        //console.log(this.props.facetType);\r\n                        if (this.props.facetType === 'DASH') {\r\n                          this.props.handleNamingFacet(this.state.customFacetName);\r\n                          this.checkForOutputDashName().then(() => {\r\n                            this.props.onSubmit(this.state.attributes);\r\n                          });\r\n                        } else {\r\n                          this.props.handleNamingFacet(this.state.customFacetName);\r\n                          this.checkForOutputDataset().then(() => {\r\n                            this.props.onSubmit(this.state.attributes);\r\n                          });\r\n                        }\r\n      \r\n                      }\r\n                    }\r\n                  }\r\n                />\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  apiDialog = () => {\r\n    var attributesTypes: any = this.state.attributesTypes;\r\n    //console.log(\"UPDATE MODAL - this.state.chainGroup: \" + this.state.chainGroup + \", this.state.facetGroup: \" + this.state.facetGroup + \", this.state.facetType: \" + this.state.facetType)\r\n    return (\r\n      <IkiDialog\r\n        _open={this.props.open}\r\n        _type='regular'\r\n        _icon={false}\r\n        _title='API'\r\n        _subtitle={\r\n          this.state.chainGroup !== '' ? (\r\n            this.state.chainGroup + ' / ' + this.state.facetGroup\r\n          ):(\r\n            ''\r\n          )\r\n        }\r\n        _size='xs'\r\n        _content={\r\n          this.state.newlyAddedDatasetNameExists === true ? (\r\n            <Fragment>\r\n              <AlertMsg\r\n                alertType=\"warning\"\r\n                alertContent={\r\n                  <Fragment>\r\n                    <Box>\r\n                      <span>Dataset with same name already exists.</span>\r\n                      <br />\r\n                      <strong>{this.state.newlyAddedDatasetName}</strong>\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      Please note:\r\n                      <br /> All flows which contain this dataset will be\r\n                      reflected by this change.\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      <strong>\r\n                        Are you sure you want to continue and overwrite dataset?\r\n                      </strong>\r\n                    </Box>\r\n                  </Fragment>\r\n                }\r\n                alertButtons={\r\n                  <Fragment>\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"No, go back\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDismissDatasetNameExists()}\r\n                    />\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='warning'\r\n                      _label=\"Yes, overwrite\"\r\n                      _type='button'\r\n                      _isWarning={true}\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDatasetOverwriteYes()}\r\n                    />\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Fragment>\r\n          ) : this.state.newlyAddedDashboardNameExists === true ? (\r\n            <Fragment>\r\n              <AlertMsg\r\n                alertType=\"warning\"\r\n                alertContent={\r\n                  <Fragment>\r\n                    <Box>\r\n                      <span>Dashboard with same name already exists.</span>\r\n                      <br />\r\n                      <strong>{this.state.newlyAddedDashboardName}</strong>\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      Please note:\r\n                      <br /> All flows which contain this dashboard will be\r\n                      reflected by this change.\r\n                    </Box>\r\n                    <Box mt={3}>\r\n                      <strong>\r\n                        Are you sure you want to continue and overwrite dashboard?\r\n                      </strong>\r\n                    </Box>\r\n                  </Fragment>\r\n                }\r\n                alertButtons={\r\n                  <Fragment>\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"No, go back\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDismissDashboardNameExists()}\r\n                    />\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='warning'\r\n                      _label=\"Yes, overwrite\"\r\n                      _type='button'\r\n                      _isWarning={true}\r\n                      _fullWidth={false}\r\n                      _onClick={() => this.handleDashboardOverwriteYes()}\r\n                    />\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Fragment>\r\n          )\r\n              : (\r\n                <Fragment>\r\n                  {this.props.facetDocumentation && (\r\n                    <div className=\"dialog-help\">\r\n                      <HelpPopover\r\n                        helpText={this.props.facetDocumentation.documentation}\r\n                      ></HelpPopover>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"form-container\">\r\n                    {this.state.chainGroup !== '' && this.state.facetGroup !== '' && this.state.facetType !== '' && (!this.props.attributesTypes.title1 && !this.props.attributesTypes.title2) && (\r\n                      <Box mb={3}>\r\n                        <IkiInput \r\n                              key={'ikinput-fcn-' + this.state.facetType} \r\n                              _label=\"Facet Name (optional)\"\r\n                              _placeholder=\"Enter Facet Name\"\r\n                              _type='search'\r\n                              _autoComplete=\"new-password\"\r\n                              _value={this.state.customFacetName}\r\n                              _onChange={(e: any) => {\r\n                                this.setState({\r\n                                  customFacetName: e.target.value\r\n                                });\r\n                              }}\r\n                              _characterCounter={15}\r\n                              _autoFocus={true}\r\n                              _fullWidth={true}\r\n                        />\r\n                      </Box>\r\n                    )}\r\n                    <Fragment>\r\n                      <Box mb={2}>\r\n                              <ButtonGroup className=\"api-facet-button-group\" variant=\"contained\" aria-label=\"button group\" fullWidth>\r\n                                <Button \r\n                                  variant={this.state.buttonGroupValue === 'config' ? 'contained' : 'outlined'}\r\n                                  color=\"primary\"\r\n                                  startIcon={<SettingsIcon />}\r\n                                  onClick={() => this.setState({ buttonGroupValue: 'config' })}\r\n                                >\r\n                                  Configure API\r\n                                </Button>\r\n                                <Button \r\n                                  variant={this.state.buttonGroupValue === 'script' ? 'contained' : 'outlined'}\r\n                                  color=\"primary\"\r\n                                  startIcon={<CodeIcon />}\r\n                                  onClick={() => this.setState({ buttonGroupValue: 'script' })}\r\n                                >\r\n                                  Python Script\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                      </Box>\r\n                      <div className=\"api-facet-content\">\r\n                          {this.state.buttonGroupValue === 'config' ? (\r\n                            //this.getAttributesForAPIFacet(this.onUpdate.bind(this), 'api-facet-top')\r\n                            this.getAttributesForAPIFacet(this.onUpdate.bind(this), 'api-facet-left')\r\n                          ):(\r\n                            this.getAttributesForAPIFacet(this.onUpdate.bind(this), 'api-facet-right')\r\n                          )}\r\n                    </div>\r\n                  </Fragment>\r\n                  </div>\r\n                </Fragment>\r\n              )\r\n        }\r\n        _actions={\r\n          <Fragment>\r\n            {!this.state.newlyAddedDatasetNameExists && (\r\n              <Fragment>\r\n                {this.state.facetGroup === 'Dynamic' && this.state.autoSaveSaved &&\r\n                  <div className=\"succes-color fade-in-out mr-auto\">\r\n                    <i className=\"zmdi zmdi-check zmdi-hc-fw\" />\r\n                    <span className=\"ml-7\">Saved</span>\r\n                  </div>\r\n                }\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={this.props.onCancel}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Update\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _disabled={false}\r\n                  _onClick={() => {\r\n                    var error = this.validate();\r\n                    if (!error) {\r\n                      //this.props.onSubmit(this.state.attributes);\r\n                      this.props.handleNamingFacet(this.state.customFacetName);\r\n                      this.checkForOutputDataset().then(() => {\r\n                        this.props.onSubmit(this.state.attributes);\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var prepareDialog;\r\n    if(this.props.customFacetType === 'API'){\r\n      prepareDialog = this.apiDialog();\r\n    }else {\r\n      prepareDialog = this.standardDialog()\r\n    }\r\n    return prepareDialog\r\n  }\r\n}\r\n\r\nexport default UpdateModel;","//Parses a cron string. The cron string is used to schedule the flow run.\r\nexport const parseCronString = cronString => {\r\n  var elements = cronString.split(' ');\r\n  var minutes = getCronElement(elements[0]);\r\n  var hours = getCronElement(elements[1]);\r\n  var dayOfMonth = getCronElement(elements[2]);\r\n  var month = getCronElement(elements[3]);\r\n  var dayOfWeek = elements[4];\r\n  if (dayOfWeek.indexOf(',') > -1) {\r\n    dayOfWeek = dayOfWeek.split(',');\r\n  }\r\n  return {\r\n    minutes,\r\n    hours,\r\n    dayOfMonth,\r\n    month,\r\n    dayOfWeek\r\n  };\r\n};\r\n\r\nconst getCronElement = elementString => {\r\n  return {\r\n    recur: elementString.indexOf('*/') > -1,\r\n    value:\r\n      elementString !== '*'\r\n        // eslint-disable-next-line\r\n        ? parseInt(elementString.replace(/[\\/!@#$%^&*]/g, ''))\r\n        : elementString\r\n  };\r\n};\r\n\r\n/**\r\n * converts the time objects to cron string.\r\n * @param minutes: Object {value:string, recur:boolean}\r\n * @param hours: Object {value:string, recur:boolean}\r\n * @param dayOfMonth Object {value:string, recur:boolean}\r\n * @param month Object {value:string, recur:boolean}\r\n * @param dayOfWeek Object {value:string, recur:boolean}\r\n *\r\n * @returns string\r\n */\r\n\r\nexport const convertToCronString = (\r\n  minutes,\r\n  hours,\r\n  dayOfMonth,\r\n  month,\r\n  dayOfWeek\r\n) => {\r\n  var cronArray = [];\r\n  cronArray[0] = minutes\r\n    ? minutes.recur\r\n      ? `*/${minutes.value}`\r\n      : minutes.value\r\n    : '*';\r\n  cronArray[1] = hours ? (hours.recur ? `*/${hours.value}` : hours.value) : '*';\r\n  cronArray[2] = dayOfMonth\r\n    ? dayOfMonth.recur\r\n      ? `*/${dayOfMonth.value}`\r\n      : dayOfWeek.value\r\n    : '*';\r\n  cronArray[3] = month ? (month.recur ? `*/${month.value}` : month.value) : '*';\r\n  cronArray[4] =\r\n    dayOfWeek && dayOfWeek.length > 0\r\n      ? Array.isArray(dayOfWeek)\r\n        ? dayOfWeek.join(',')\r\n        : dayOfWeek\r\n      : '*';\r\n  return cronArray.join(' ');\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { DatePicker, TimePicker } from 'material-ui-pickers';\r\n\r\nimport { parseCronString } from '../../../util/cron';\r\n\r\nimport {\r\n  withStyles,\r\n  TextField,\r\n  Radio,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\ntype ScheduleSettingsProps = {\r\n  classes: any;\r\n  settings: any;\r\n  validated: boolean;\r\n  onChange: (name: string, settings: any) => void;\r\n};\r\ntype ScheduleSettingsState = {};\r\n\r\nconst styles = (theme: any) => ({\r\n  textField: {\r\n    width: '100%'\r\n  },\r\n  formBox: {\r\n    padding: theme.spacing(2),\r\n    border: '1px solid rgba(0, 0, 0, 0.42)',\r\n    marginTop: 20\r\n  },\r\n  formBoxTitle: {\r\n    color: '#000',\r\n    marginTop: -32,\r\n    marginLeft: 5,\r\n    backgroundColor: '#FFF',\r\n    display: 'inline-block',\r\n    /* width: 100%; */\r\n    position: 'absolute' as 'absolute',\r\n    padding: 5\r\n  },\r\n  sheduleDialog: {},\r\n  scheduleDialogContent: {\r\n    padding: 0\r\n  },\r\n  scheduleTable: {},\r\n  scheduleTableRow: {\r\n    width: '100%',\r\n    borderBottom: '1px solid #ccc',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  scheduleTableRowCenter: {\r\n    borderBottom: '0'\r\n  },\r\n  scheduleTableCell: {\r\n    width: '25%',\r\n    float: 'left' as 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  scheduleTableCell1: {\r\n    width: '15%',\r\n    float: 'left' as 'left',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  scheduleTableCellDays: {\r\n    width: '100%'\r\n  },\r\n  scheduleTableleft: {\r\n    width: 'auto',\r\n    float: 'left' as 'left',\r\n    marginRight: 10\r\n  },\r\n  scheduleTableright: {\r\n    width: '60%',\r\n    float: 'right' as 'right'\r\n  },\r\n  scheduleNumberTextField: {\r\n    width: 30\r\n  }\r\n});\r\n\r\nclass ScheduleSettings extends Component<\r\n  ScheduleSettingsProps,\r\n  ScheduleSettingsState\r\n> {\r\n  state = {\r\n    name: '',\r\n    settings: {\r\n      oneTime: {\r\n        enabled: true,\r\n        startDate: moment(),\r\n        startTime: moment()\r\n      },\r\n      day: {\r\n        enabled: false,\r\n        recurEvery: 1,\r\n        atTime: moment(),\r\n        startDate: moment(),\r\n        endDate: moment()\r\n      },\r\n      week: {\r\n        enabled: false,\r\n        recurEvery: 1,\r\n        atTime: moment(),\r\n        startDate: moment(),\r\n        endDate: moment(),\r\n        days: [\r\n          {\r\n            day: 'Monday',\r\n            value: false,\r\n            shortForm: 'mon'\r\n          },\r\n          {\r\n            day: 'Tuesday',\r\n            value: false,\r\n            shortForm: 'tue'\r\n          },\r\n          {\r\n            day: 'Wednesday',\r\n            value: false,\r\n            shortForm: 'wed'\r\n          },\r\n          {\r\n            day: 'Thursday',\r\n            value: false,\r\n            shortForm: 'thu'\r\n          },\r\n          {\r\n            day: 'Friday',\r\n            value: false,\r\n            shortForm: 'fri'\r\n          },\r\n          {\r\n            day: 'Saturday',\r\n            value: false,\r\n            shortForm: 'sat'\r\n          },\r\n          {\r\n            day: 'Sunday',\r\n            value: false,\r\n            shortForm: 'sun'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    var cron = this.props.settings.cron;\r\n\r\n    //var startTime_temp = this.props.settings.start_time;\r\n    var startTime = moment(\r\n      this.props.settings.start_time,\r\n      'MMMM Do YYYY, h:mm:ss a'\r\n    );\r\n    //console.log(\"startTime_temp: \" + startTime_temp);\r\n    //var stillUtc = new Date(startTime_temp * 1000)\r\n    //console.log(\"stillUtc: \" + stillUtc);\r\n    //var startTime= moment.utc(stillUtc).local().format();\r\n    //console.log(\"startTime: \" + startTime);\r\n    var endTime = this.props.settings.end_time\r\n      ? moment(this.props.settings.end_time, 'MMMM Do YYYY, h:mm:ss a')\r\n      : moment();\r\n    if (!startTime.isValid()) {\r\n      startTime = moment();\r\n      //var startTime_temp = (new Date(startTime.toString()).getTime() / 1000)\r\n      //startTime = moment(startTime_temp, \"MMMM Do YYYY, h:mm:ss a\");\r\n      //console.log(\"startTime: \" + startTime + \", startTime_temp: \" + startTime_temp);\r\n    }\r\n    if (!endTime.isValid()) {\r\n      endTime = moment();\r\n    }\r\n    var time;\r\n    if (cron !== '') {\r\n      var cronObject = parseCronString(cron);\r\n      if (cronObject.dayOfMonth.recur) {\r\n        if (cronObject.dayOfMonth.value % 7 !== 0) {\r\n          time = this.state.settings.day.atTime.clone();\r\n          /*time.set({\r\n            hour: cronObject.hours.value,\r\n            minute: cronObject.minutes.value\r\n          });*/\r\n          time.set({\r\n            hour: new Date(this.props.settings.start_time * 1000).getHours(),\r\n            minute: new Date(this.props.settings.start_time * 1000).getMinutes()\r\n          });\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              name: this.props.settings.name,\r\n              settings: {\r\n                ...this.state.settings,\r\n                oneTime: {\r\n                  ...this.state.settings.oneTime,\r\n                  enabled: false\r\n                },\r\n                week: {\r\n                  ...this.state.settings.week,\r\n                  enabled: false\r\n                },\r\n                day: {\r\n                  enabled: true,\r\n                  recurEvery: cronObject.dayOfMonth.value,\r\n                  atTime: time,\r\n                  startDate: startTime,\r\n                  endDate: endTime\r\n                }\r\n              }\r\n            },\r\n            this.callback\r\n          );\r\n        } else {\r\n          time = this.state.settings.week.atTime.clone();\r\n          time.set({\r\n            hour: new Date(this.props.settings.start_time * 1000).getHours(),\r\n            minute: new Date(this.props.settings.start_time * 1000).getMinutes()\r\n          });\r\n          /*time.set({\r\n            hour: cronObject.hours.value,\r\n            minute: cronObject.minutes.value\r\n          });*/\r\n          var days = this.state.settings.week.days.map(day => {\r\n            day.value = cronObject.dayOfWeek.indexOf(day.shortForm) > -1;\r\n            return day;\r\n          });\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              name: this.props.settings.name,\r\n              settings: {\r\n                ...this.state.settings,\r\n                oneTime: {\r\n                  ...this.state.settings.oneTime,\r\n                  enabled: false\r\n                },\r\n                day: {\r\n                  ...this.state.settings.day,\r\n                  enabled: false\r\n                },\r\n                week: {\r\n                  enabled: true,\r\n                  recurEvery: cronObject.dayOfMonth.value / 7,\r\n                  atTime: time,\r\n                  days: days,\r\n                  startDate: startTime,\r\n                  endDate: endTime\r\n                }\r\n              }\r\n            },\r\n            this.callback\r\n          );\r\n        }\r\n      } else {\r\n        time = this.state.settings.oneTime.startTime.clone();\r\n        //var utcToUserStartTime = new Date(this.props.settings.start_time * 1000).getHours() + \":\" + new Date(this.props.settings.start_time * 1000).getMinutes();\r\n        time.set({\r\n          hour: new Date(this.props.settings.start_time * 1000).getHours(),\r\n          minute: new Date(this.props.settings.start_time * 1000).getMinutes()\r\n        });\r\n        /*time.set({\r\n          hour: cronObject.hours.value,\r\n          minute: cronObject.minutes.value\r\n        });*/\r\n        //console.log(time, startTime);\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            name: this.props.settings.name,\r\n            settings: {\r\n              ...this.state.settings,\r\n              oneTime: {\r\n                startTime: time,\r\n                startDate: startTime,\r\n                enabled: true\r\n              },\r\n              day: {\r\n                ...this.state.settings.day,\r\n                enabled: false\r\n              },\r\n              week: {\r\n                ...this.state.settings.week,\r\n                enabled: false\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n      }\r\n    } else {\r\n      this.callback();\r\n    }\r\n  }\r\n  handleChangeForm = (name: any) => (event: any) => {\r\n    switch (name) {\r\n      case 'name':\r\n        this.setState(\r\n          {\r\n            name: event.target.value\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'oneTime':\r\n      case 'day':\r\n      case 'week':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              oneTime: {\r\n                ...this.state.settings.oneTime,\r\n                enabled: name === 'oneTime'\r\n              },\r\n              day: {\r\n                ...this.state.settings.day,\r\n                enabled: name === 'day'\r\n              },\r\n              week: {\r\n                ...this.state.settings.week,\r\n                enabled: name === 'week'\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'oneTimeDate':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              oneTime: {\r\n                ...this.state.settings.oneTime,\r\n                startDate: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'oneTimeStartTime':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              oneTime: {\r\n                ...this.state.settings.oneTime,\r\n                startTime: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'dayRecurEvery':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              day: {\r\n                ...this.state.settings.day,\r\n                recurEvery: event.target.value\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'dayAtTime':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              day: {\r\n                ...this.state.settings.day,\r\n                atTime: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'dayStartDate':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              day: {\r\n                ...this.state.settings.day,\r\n                startDate: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'dayEndDate':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              day: {\r\n                ...this.state.settings.day,\r\n                endDate: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'weekRecurEvery':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              week: {\r\n                ...this.state.settings.week,\r\n                recurEvery: event.target.value\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'weekStartDate':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              week: {\r\n                ...this.state.settings.week,\r\n                startDate: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'weekEndDate':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              week: {\r\n                ...this.state.settings.week,\r\n                endDate: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'weekAtTime':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              week: {\r\n                ...this.state.settings.week,\r\n                atTime: event\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n      case 'weekday':\r\n        this.setState(\r\n          {\r\n            settings: {\r\n              ...this.state.settings,\r\n              week: {\r\n                ...this.state.settings.week,\r\n                days: this.state.settings.week.days.map((day: any) => {\r\n                  if (day.day === event.target.value) {\r\n                    day.value = !day.value;\r\n                  }\r\n                  return day;\r\n                })\r\n              }\r\n            }\r\n          },\r\n          this.callback\r\n        );\r\n        break;\r\n    }\r\n  };\r\n  callback() {\r\n    this.props.onChange(this.state.name, this.state.settings);\r\n  }\r\n  render() {\r\n    /*console.log('====================================');\r\n    console.log(this.state.settings.oneTime.startDate);\r\n    console.log(this.state.settings.oneTime.startTime);\r\n    console.log('====================================');*/\r\n    return (\r\n      <div className=\"tab-content\">\r\n        <TextField\r\n          error={this.props.validated && this.state.name === ''}\r\n          id=\"standard-name\"\r\n          label=\"Name\"\r\n          placeholder=\"Enter schedule flow\"\r\n          className={this.props.classes.textField}\r\n          value={this.state.name}\r\n          onChange={this.handleChangeForm('name')}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n        />\r\n        <Grid\r\n          container\r\n          className=\"cardboxes-container settings-container\"\r\n          alignItems=\"stretch\"\r\n          spacing={4}\r\n        >\r\n          {/* <span className=\"settings-box-title\">SETTINGS</span>\r\n          <FormLabel>Schedule on every:</FormLabel> */}\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                className=\"grid-view settings-box\"\r\n              >\r\n                <div className={this.state.settings.oneTime.enabled ? \"settings-box-card selected\" : \"settings-box-card\"}>\r\n                  <div className=\"settings-box-card-header\">\r\n                    <FormControlLabel\r\n                      value=\"bottom\"\r\n                      className=\"header-title\"\r\n                      control={\r\n                        <Radio\r\n                          color=\"primary\"\r\n                          checked={this.state.settings.oneTime.enabled}\r\n                          onChange={this.handleChangeForm('oneTime')}\r\n                          value=\"a\"\r\n                          aria-label=\"A\"\r\n                        />\r\n                      }\r\n                      label=\"One time\"\r\n                      labelPlacement=\"bottom\"\r\n                    />\r\n                    <div className=\"header-descr\">\r\n                      Execute flow only once\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"settings-box-card-divider\" />\r\n                  <FormControl fullWidth>\r\n                    <DatePicker\r\n                      fullWidth\r\n                      value={this.state.settings.oneTime.startDate}\r\n                      onChange={this.handleChangeForm('oneTimeDate')}\r\n                      disabled={!this.state.settings.oneTime.enabled}\r\n                      variant=\"outlined\"\r\n                      label=\"Start date\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    ></DatePicker>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <TimePicker\r\n                      fullWidth\r\n                      value={this.state.settings.oneTime.startTime}\r\n                      onChange={this.handleChangeForm('oneTimeStartTime')}\r\n                      disabled={!this.state.settings.oneTime.enabled}\r\n                      variant=\"outlined\"\r\n                      label=\"Start time\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                className=\"grid-view settings-box\"\r\n              >\r\n                <div className={this.state.settings.day.enabled ? \"settings-box-card selected\" : \"settings-box-card\"}>\r\n                  <div className=\"settings-box-card-header\">\r\n                    <FormControlLabel\r\n                      value=\"bottom\"\r\n                      className=\"header-title\"\r\n                      control={\r\n                        <Radio\r\n                          color=\"primary\"\r\n                          checked={this.state.settings.day.enabled}\r\n                          onChange={this.handleChangeForm('day')}\r\n                          value=\"b\"\r\n                          aria-label=\"B\"\r\n                        />\r\n                      }\r\n                      label=\"Daily\"\r\n                      labelPlacement=\"bottom\"\r\n                    />\r\n                    <div className=\"header-descr\">\r\n                      Execute flow on a daily basis\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"settings-box-card-divider\" />\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      id=\"recurEvery\"\r\n                      value={this.state.settings.day.recurEvery}\r\n                      onChange={this.handleChangeForm('dayRecurEvery')}\r\n                      type=\"number\"\r\n                      disabled={!this.state.settings.day.enabled}\r\n                      margin=\"normal\"\r\n                      variant=\"outlined\"\r\n                      label=\"Recur every x days\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <TimePicker\r\n                      fullWidth\r\n                      value={this.state.settings.day.atTime}\r\n                      onChange={this.handleChangeForm('dayAtTime')}\r\n                      disabled={!this.state.settings.day.enabled}\r\n                      variant=\"outlined\"\r\n                      label=\"at Time\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <DatePicker\r\n                      fullWidth\r\n                      value={this.state.settings.day.startDate}\r\n                      onChange={this.handleChangeForm('dayStartDate')}\r\n                      disabled={!this.state.settings.day.enabled}\r\n                      variant=\"outlined\"\r\n                      label=\"Start Date\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    ></DatePicker>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <DatePicker\r\n                      fullWidth\r\n                      value={this.state.settings.day.endDate}\r\n                      onChange={this.handleChangeForm('dayEndDate')}\r\n                      disabled={!this.state.settings.day.enabled}\r\n                      variant=\"outlined\"\r\n                      label=\"End Date\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    ></DatePicker>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                className=\"grid-view settings-box\"\r\n              >\r\n                <div className={this.state.settings.week.enabled ? \"settings-box-card selected\" : \"settings-box-card\"}>\r\n                  <div className=\"settings-box-card-header\">\r\n                    <FormControlLabel\r\n                      value=\"bottom\"\r\n                      className=\"header-title\"\r\n                      control={\r\n                        <Radio\r\n                          color=\"primary\"\r\n                          checked={this.state.settings.week.enabled}\r\n                          onChange={this.handleChangeForm('week')}\r\n                          value=\"c\"\r\n                          aria-label=\"C\"\r\n                        />\r\n                      }\r\n                      label=\"Weekly\"\r\n                      labelPlacement=\"bottom\"\r\n                    />\r\n                    <div className=\"header-descr\">\r\n                      Execute flow on a weekly basis\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"settings-box-card-divider\" />\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      id=\"recurEvery\"\r\n                      value={this.state.settings.week.recurEvery}\r\n                      onChange={this.handleChangeForm('weekRecurEvery')}\r\n                      disabled={!this.state.settings.week.enabled}\r\n                      type=\"number\"\r\n                      margin=\"normal\"\r\n                      variant=\"outlined\"\r\n                      label=\"Recur every x weeks on\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    />\r\n\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <TimePicker\r\n                      fullWidth\r\n                      disabled={!this.state.settings.week.enabled}\r\n                      value={this.state.settings.week.atTime}\r\n                      onChange={this.handleChangeForm('weekAtTime')}\r\n                      variant=\"outlined\"\r\n                      label=\"at time\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <DatePicker\r\n                      fullWidth\r\n                      value={this.state.settings.week.startDate}\r\n                      onChange={this.handleChangeForm('weekStartDate')}\r\n                      disabled={!this.state.settings.week.enabled}\r\n                      variant=\"outlined\"\r\n                      label=\"Start Date\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    ></DatePicker>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <DatePicker\r\n                      fullWidth\r\n                      value={this.state.settings.week.endDate}\r\n                      onChange={this.handleChangeForm('weekEndDate')}\r\n                      disabled={!this.state.settings.week.enabled}\r\n                      variant=\"outlined\"\r\n                      label=\"End Date\"\r\n                      InputLabelProps={{\r\n                        shrink: true\r\n                      }}\r\n                    ></DatePicker>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    {/*console.log(this.state.settings.week)*/}\r\n                    {this.state.settings.week.days.map((day: any) => {\r\n                      return (\r\n                        <FormControlLabel\r\n                          className=\"checkbox-label\"\r\n                          control={\r\n                            <Checkbox\r\n                              disabled={!this.state.settings.week.enabled}\r\n                              color=\"primary\"\r\n                              checked={day.value}\r\n                              onChange={this.handleChangeForm('weekday')}\r\n                              value={day.day}\r\n                            />\r\n                          }\r\n                          label={day.day}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ScheduleSettings);\r\n","import React, { Component } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\ntype ScheduleFlowsListProps = {\r\n  title: string;\r\n  list: any[];\r\n};\r\n\r\ntype ScheduleFlowsListState = {};\r\n\r\nclass ScheduleFlowsList extends Component<\r\n  ScheduleFlowsListProps,\r\n  ScheduleFlowsListState\r\n> {\r\n  render() {\r\n    return (\r\n      <div className=\"tab-content\">\r\n        {/* <div>{this.props.title}</div> */}\r\n        <div>\r\n          <Table className=\"table\" component=\"div\">\r\n            <TableHead component=\"div\" className=\"table-head\">\r\n              <TableRow component=\"div\">\r\n                <TableCell component=\"div\">Name</TableCell>\r\n                <TableCell component=\"div\">Date</TableCell>\r\n                <TableCell component=\"div\">Execution</TableCell>\r\n                <TableCell component=\"div\" className=\"project-buttons\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody component=\"div\" className=\"table-body\">\r\n              {this.props.list.map((listItem: any) => {\r\n                return (\r\n                  <TableRow component=\"div\">\r\n                    <TableCell component=\"div\">{listItem.name}</TableCell>\r\n                    <TableCell component=\"div\">{listItem.date}</TableCell>\r\n                    <TableCell component=\"div\">{listItem.execution}</TableCell>\r\n                    <TableCell component=\"div\" className=\"project-buttons has-txt-right\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                      >\r\n                        <SearchIcon fontSize=\"small\" />\r\n                        <span>View</span>\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleFlowsList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  withStyles,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport './schedule-dialog.scss';\r\nimport ScheduleSettings from './schedule-settings';\r\nimport ScheduleFlowsList from './schedule-flows-list';\r\nimport { convertToCronString } from '../../../util/cron';\r\n\r\nfunction TabContainer(props: any) {\r\n  return <div className=\"tab-container\">{props.children}</div>;\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\ntype ScheduleDialogProps = {\r\n  pastScheduledActions: any;\r\n  upcomingScheduledActions: any;\r\n  settings: any;\r\n  classes: any;\r\n  open: boolean;\r\n  onSubmit: (scheduleObject: any) => void;\r\n  onCancel: () => void;\r\n};\r\n\r\ntype ScheduleDialogState = {\r\n  selectedTab: number;\r\n  open: boolean;\r\n  settings: any;\r\n  validated: boolean;\r\n  applicableSettings: any;\r\n};\r\n\r\nconst styles = (theme: any) => ({\r\n  sheduleDialog: {},\r\n  scheduleDialogContent: {\r\n    padding: 0\r\n  }\r\n});\r\n\r\nclass ScheduleDialog extends Component<\r\n  ScheduleDialogProps,\r\n  ScheduleDialogState\r\n  > {\r\n  state = {\r\n    validated: false,\r\n    selectedTab: 0,\r\n    open: false,\r\n    settings: {},\r\n    applicableSettings: {}\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      open: this.props.open,\r\n      settings: this.props.settings\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Schedule</div>\r\n        <Dialog\r\n          open={true}\r\n          onClose={this.handleRequestClose}\r\n          className=\"dialog schedule\"\r\n          fullWidth={true}\r\n          maxWidth=\"md\"\r\n        >\r\n          <DialogContent className=\"dialog-content\">\r\n            <Box className=\"dialog-title default-color\" mb={2}>\r\n              Schedule Flow execution\r\n            </Box>\r\n            <Grid container className=\"tab-container\">\r\n              <Grid item xs={12}>\r\n                <Tabs\r\n                  value={this.state.selectedTab}\r\n                  onChange={(event, value) => {\r\n                    this.handleChange(event, value);\r\n                  }}\r\n                  classes={{\r\n                    indicator: 'flow-tab-indicator'\r\n                  }}\r\n                >\r\n                  <Tab label=\"Set Schedule\" />\r\n                  <Tab label=\"Past Schedules\" disabled />\r\n                  <Tab label=\"Upcoming Schedules\" disabled />\r\n                </Tabs>\r\n              </Grid>\r\n            </Grid>\r\n            {this.state.selectedTab === 0 && (\r\n              <TabContainer>{this.getScheduleForm()}</TabContainer>\r\n            )}\r\n            {this.state.selectedTab === 1 && (\r\n              <TabContainer>{this.getPastFlows()}</TabContainer>\r\n            )}\r\n            {this.state.selectedTab === 2 && (\r\n              <TabContainer>{this.getUpcomingFlows()}</TabContainer>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions className=\"footer\">\r\n            <Button\r\n              onClick={() => {\r\n                this.cancelButtonHandler();\r\n              }}\r\n              color=\"default\"\r\n              className=\"button\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                this.applyButtonHandler();\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"button\"\r\n            >\r\n              Apply\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n  getScheduleForm() {\r\n    return (\r\n      <ScheduleSettings\r\n        onChange={(name: string, settings: any) => {\r\n          this.updateSettings(name, settings);\r\n        }}\r\n        validated={this.state.validated}\r\n        settings={this.state.settings}\r\n      />\r\n    );\r\n  }\r\n  updateSettings(name: string, settings: any) {\r\n    var applicableSettings = Object.keys(settings).filter(\r\n      (key: any) => settings[key].enabled\r\n    )[0];\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      applicableSettings: { ...settings[applicableSettings], name: name }\r\n    });\r\n  }\r\n  getPastFlows() {\r\n    return (\r\n      <ScheduleFlowsList\r\n        title=\"Past Flows\"\r\n        list={this.props.pastScheduledActions}\r\n      ></ScheduleFlowsList>\r\n    );\r\n  }\r\n  getUpcomingFlows() {\r\n    return (\r\n      <ScheduleFlowsList\r\n        title=\"Upcoming Flows\"\r\n        list={this.props.upcomingScheduledActions}\r\n      ></ScheduleFlowsList>\r\n    );\r\n  }\r\n  handleChange(event: any, selectedTab: any) {\r\n    this.setState({ selectedTab });\r\n  }\r\n  cancelButtonHandler() {\r\n    this.setState({ open: false });\r\n    this.props.onCancel();\r\n  }\r\n  applyButtonHandler() {\r\n    this.setState({ open: false });\r\n    var s = this.state.applicableSettings as any;\r\n    const name = s.name;\r\n    var cronString;\r\n    this.setState({\r\n      validated: true\r\n    });\r\n    if (name === '') {\r\n      return;\r\n    }\r\n    // eslint-disable-next-line\r\n    var time, hours, minutes;\r\n    if (s.atTime) {\r\n      time = s.atTime;\r\n      // eslint-disable-next-line\r\n      hours = time.hours();\r\n      // eslint-disable-next-line\r\n      minutes = time.minutes();\r\n      var userTime = s.atTime.format('HH:mm');\r\n      var userStartDate = s.startDate.format('YYYY-MM-DD');\r\n      var userFullStartDatetime = userStartDate + \" \" + userTime + \":00\";\r\n      var userFullStartDatetimeUTC = (new Date(userFullStartDatetime).getTime() / 1000).toFixed(0);\r\n      var userEndDate = s.endDate.format('YYYY-MM-DD');\r\n      var userFullEndDatetime = userEndDate + \" \" + userTime + \":00\";\r\n      var userFullEndDatetimeUTC = (new Date(userFullEndDatetime).getTime() / 1000).toFixed(0);\r\n      var utcHours = new Date(time).getUTCHours();\r\n      var utcMinutes = new Date(time).getUTCMinutes();\r\n      if (s.days) {\r\n        var daysOfWeek = s.days\r\n          .filter((day: any) => day.value)\r\n          .map((day: any) => day.shortForm);\r\n        var weeks = s.recurEvery;\r\n        cronString = convertToCronString(\r\n          { value: utcMinutes },\r\n          { value: utcHours },\r\n          { value: weeks * 7, recur: true },\r\n          null,\r\n          daysOfWeek\r\n        );\r\n      } else {\r\n        var days = s.recurEvery;\r\n        cronString = convertToCronString(\r\n          { value: utcMinutes },\r\n          { value: utcHours },\r\n          { value: days, recur: true },\r\n          null,\r\n          null\r\n        );\r\n      }\r\n      this.props.onSubmit({\r\n        cron: cronString,\r\n        start_time: userFullStartDatetimeUTC,\r\n        end_time: userFullEndDatetimeUTC,\r\n        name: name\r\n      });\r\n    } else if (s.startTime) {\r\n      time = s.startTime;\r\n      hours = time.hours();\r\n      minutes = time.minutes();\r\n      var userDate = s.startDate.format('YYYY-MM-DD');\r\n      // eslint-disable-next-line\r\n      var userTime = s.startTime.format('HH:mm');\r\n      var userFullDatetime = userDate + \" \" + userTime + \":00\";\r\n      // eslint-disable-next-line\r\n      var utcHours = new Date(time).getUTCHours();\r\n      // eslint-disable-next-line\r\n      var utcMinutes = new Date(time).getUTCMinutes();\r\n      var userFullDatetimeUTC = (new Date(userFullDatetime).getTime() / 1000).toFixed(0);\r\n      cronString = convertToCronString(\r\n        { value: utcMinutes },\r\n        { value: utcHours },\r\n        null,\r\n        null,\r\n        null\r\n      );\r\n      this.props.onSubmit({\r\n        cron: cronString,\r\n        start_time: userFullDatetimeUTC,\r\n        end_time: '',\r\n        name: name\r\n      });\r\n    }\r\n  }\r\n  handleRequestClose() { }\r\n}\r\n\r\nexport default withStyles(styles)(ScheduleDialog);\r\n","import React from 'react';\r\n\r\nexport default function Loader(props: any) {\r\n  return (\r\n    <div className=\"loader-wrapper\">\r\n      <div className=\"loader\"></div>\r\n      <div className=\"loader-txt\">Loading</div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Dialog, DialogTitle, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport './visualize-dialog.scss';\r\nimport Loader from '../../../components/loader';\r\n\r\ntype VisualizeDialogProps = {\r\n  open: boolean;\r\n  url: string;\r\n  isMetabase: boolean;\r\n  status: string;\r\n  loading: boolean;\r\n  onClose: () => void;\r\n};\r\n\r\ntype VisualizeDialogState = {\r\n  url: string;\r\n  iFrameContentLoaded: boolean;\r\n};\r\n\r\nclass VisualizeDialog extends Component<\r\n  VisualizeDialogProps,\r\n  VisualizeDialogState\r\n  > {\r\n  componentDidMount() {\r\n    this.setState({\r\n      iFrameContentLoaded: false\r\n    });\r\n  }\r\n  onClose() {\r\n    this.props.onClose();\r\n  }\r\n  getContent() {\r\n    if (this.props.loading) {\r\n      console.log('here***');\r\n\r\n      return (\r\n        <Loader>\r\n          <div className=\"loader-txt browse-status\">{this.props.status}</div>\r\n        </Loader>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"iframe-container\">\r\n          {!this.state.iFrameContentLoaded && (\r\n            <div>\r\n              <Loader>\r\n                <div className=\"loader-txt browse-status\">\r\n                  {this.props.status}\r\n                </div>\r\n              </Loader>\r\n            </div>\r\n          )}\r\n          {this.props.isMetabase && this.state.iFrameContentLoaded && (\r\n            <div className=\"iframe-cover\"></div>\r\n          )}\r\n          <iframe\r\n            title={\"iKigai\"}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            onLoad={() => {\r\n              this.setState({\r\n                iFrameContentLoaded: true\r\n              });\r\n            }}\r\n            src={this.props.url}\r\n            sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\r\n          ></iframe>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open} maxWidth=\"xl\" className=\"visualize-dialog\">\r\n        <DialogTitle className=\"title\">\r\n          <IconButton onClick={() => this.onClose()} className=\"close-btn\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        {this.getContent()}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizeDialog;\r\n","import React, { Component, Fragment } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Logo.module.scss';\r\nlet cx = classNames.bind(styles);\r\n\r\nexport class IkigaiLogo extends Component {\r\n  render() {\r\n    const _size = this.props._size ? this.props._size : 'normal';\r\n    const _color = this.props._color ? this.props._color : 'primary';\r\n    const _navMinimzed = this.props._navMinimzed ? this.props._navMinimzed : false;\r\n    //var loginLogo = 'loginLogo';\r\n    /*var loginLogoClass = cx({\r\n      loginLogo: true,\r\n      'normal': _size === 'normal',\r\n      'small': _size === 'small',\r\n      'primary': _color === 'primary'\r\n    });*/\r\n    /*let loginLogoClass = cx(\r\n      loginLogo,\r\n      _size,\r\n      _color,\r\n    );*/\r\n    let loginLogoClass = cx({\r\n      loginLogo: true,\r\n      'minimized': _navMinimzed\r\n    },\r\n      _size,\r\n      _color\r\n    );\r\n    return (\r\n      <div className={loginLogoClass}>\r\n        {_navMinimzed ? (\r\n          <span>Iki</span>\r\n        ):(\r\n          <Fragment>\r\n            <span>Ikigai</span>\r\n            <span>Labs</span>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n/*import {\r\n    Button\r\n} from '@material-ui/core';*/\r\n//import ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport './iki-loader.scss';\r\n/*import {\r\n    cancelAPIrequestFunction\r\n  } from '../../services';*/\r\n\r\nexport default class IkiLoader extends Component {\r\n    /*handleGoBack(backLink){\r\n        //window.history.back();\r\n        //cancelAPIrequestFunction();\r\n        //this.props.history.push(backLink);\r\n    }*/\r\n    \r\n    render() {\r\n        const { \r\n            loadingTxt, \r\n            fadeOut, \r\n            //backLink \r\n        } = this.props;\r\n        var placementClass = \"fixed\";\r\n        if(this.props.placement){\r\n            placementClass = this.props.placement;\r\n        }\r\n        var componentClassName = \"\";\r\n        if(fadeOut){\r\n            componentClassName = \"iki-loader-wrap hide \" + placementClass;\r\n        }else{\r\n            componentClassName = \"iki-loader-wrap \" + placementClass;\r\n        }\r\n        return (\r\n            <div className={componentClassName}>\r\n                <div className=\"iki-loader-inner\">\r\n                    <span className=\"iki-spinner\"></span>\r\n                    <div className=\"iki-loader-txt\">{loadingTxt}</div>\r\n                </div>\r\n                {/*backLink &&\r\n                    <div className=\"ikiloader-back-btn-holder\">\r\n                        <Button\r\n                            color=\"default\"\r\n                            variant=\"contained\"\r\n                            className=\"info-drawer-action-button\"\r\n                            startIcon={<ArrowRightAltIcon className=\"back-icon\" />}\r\n                            onClick={() => this.handleGoBack(backLink)}\r\n                        >\r\n                            Go Back\r\n                        </Button>\r\n                    </div>\r\n                */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport IkiLoader from '../../../components/IkiLoader';\r\n\r\ntype VizCentralContentProps = {\r\n  url: string;\r\n  loading: boolean;\r\n};\r\n\r\ntype VizCentralContentState = {\r\n  iFrameContentLoaded: boolean;\r\n};\r\n\r\nclass VizCentralContent extends Component<VizCentralContentProps, VizCentralContentState> {\r\n  state = {\r\n    iFrameContentLoaded: false\r\n  }\r\n  componentDidMount() {\r\n    //this.setState({ iFrameContentLoaded: false });\r\n    //console.log(\"VizCentralContent - componentDidMount...\");\r\n  }\r\n\r\n  getVizCentralContent() {\r\n    return(\r\n      <Fragment>\r\n          <IkiLoader\r\n            loadingTxt = \"Preparing Preview...\"\r\n            fadeOut = {this.state.iFrameContentLoaded}\r\n            placement = \"viz\"\r\n          />\r\n          <iframe\r\n            title=\"iKigai\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            onLoad={() => {\r\n              this.props.loading &&\r\n                  this.setState({ iFrameContentLoaded: true })\r\n            }}\r\n            src={this.props.url}\r\n            sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\r\n        ></iframe>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n          {this.getVizCentralContent()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VizCentralContent;","import React, { Component, Fragment } from 'react';\r\nimport { \r\n    Typography \r\n} from '@material-ui/core';\r\nimport { IkigaiLogo } from '../../../components/IkigaiLogo';\r\nimport VizCentralContent from './viz-central-content';\r\nimport { getFriendlyLabel } from '../../../util';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Preview.module.scss';\r\nlet cx = classNames.bind(styles);\r\n\r\ntype VisualizeComponentProps = {\r\n  open: boolean;\r\n  minimized: boolean;\r\n  inFocus: boolean;\r\n  url: string;\r\n  isMetabase: boolean;\r\n  status: string;\r\n  loading: boolean;\r\n  projectName: string;\r\n  pipeline?: any;\r\n  vizElement: any;\r\n  onClose: (vizElement: any) => void;\r\n  onMinimize: (vizElement: any) => void;\r\n};\r\n\r\ntype VisualizeComponentState = {\r\n  url: string;\r\n  iFrameContentLoaded: boolean;\r\n};\r\n\r\nclass VisualizeComponent extends Component<VisualizeComponentProps, VisualizeComponentState> {\r\n  componentDidMount() {\r\n      //console.log(\"VisualizeComponent - vizElement...\");\r\n      //console.log(this.props.vizElement);\r\n      //console.log(\"VisualizeComponent - pipeline...\");\r\n      //console.log(this.props.pipeline);\r\n  }\r\n\r\n  onClose = () => {\r\n    this.props.onClose(this.props.vizElement);\r\n  }\r\n\r\n  onMinimize = () => {\r\n    this.props.onMinimize(this.props.vizElement);\r\n  }\r\n\r\n  getLeftSidebar() {\r\n    return(\r\n      <div className=\"interactive-wrap-drawer\">\r\n        <IkigaiLogo\r\n          _size='small'\r\n          _color='white'\r\n        />\r\n        <div className=\"back-btn-holder\">\r\n          <div \r\n            className=\"back-to-dashboard drawer-back-link viz-drawer-btn\"\r\n            onClick={this.onClose}\r\n          >\r\n            <i className=\"zmdi zmdi-close zmdi-hc-fw\" />\r\n            <div>Close Preview</div>\r\n          </div>\r\n          <div \r\n            className=\"back-to-dashboard drawer-back-link viz-drawer-btn\"\r\n            onClick={this.onMinimize}\r\n          >\r\n            <i className=\"zmdi zmdi-window-minimize zmdi-hc-fw\" />\r\n            <div>Minimize</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getRightSidebar() {\r\n    return(\r\n      <div className=\"interactive-wrap-rightbar\">\r\n                <div className=\"info-drawer-root\">\r\n                  <div className=\"info-drawer-section\">\r\n                    <div className=\"info-drawer-title\">\r\n                      <span className=\"title\">Flow</span>\r\n                    </div>\r\n                    <div className=\"info-drawer-title-group\">\r\n                      <div className=\"info-drawer-title-title\">Flow name:</div>\r\n                      <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                        <span>{this.props.pipeline.name}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"info-drawer-title-group\">\r\n                      <div className=\"info-drawer-title-title\">Project name:</div>\r\n                      <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                        <span>{this.props.projectName}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"info-drawer-section\">\r\n                    <div className=\"info-drawer-title\">\r\n                      <span className=\"title\">{this.props.vizElement.vizType}</span>\r\n                    </div>\r\n\r\n                    {this.props.vizElement && this.props.vizElement.vizFacetInfo && this.props.vizElement.vizType !== \"Link\" && \r\n                      <React.Fragment>\r\n                        <div className=\"info-drawer-title-group\">\r\n                          <div className=\"info-drawer-title-title\">Chain Group:</div>\r\n                          <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                            {this.props.vizElement.vizFacetInfo[\"chain_group\"] &&\r\n                              <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo[\"chain_group\"])}</span>\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"info-drawer-title-group\">\r\n                          <div className=\"info-drawer-title-title\">Facet Group:</div>\r\n                          <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                            {this.props.vizElement.vizFacetInfo[\"facet_group\"] &&\r\n                              <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo[\"facet_group\"])}</span>\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"info-drawer-title-group\">\r\n                          <div className=\"info-drawer-title-title\">Facet Type:</div>\r\n                          <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                            {this.props.vizElement.vizFacetInfo[\"facet_type\"] &&\r\n                              <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo[\"facet_type\"])}</span>\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    }\r\n                    {this.props.vizElement && this.props.vizElement.vizFacetInfo && this.props.vizElement.vizType === \"Link\" && \r\n                      <React.Fragment>\r\n                        <div className=\"info-drawer-title-group\">\r\n                          <div className=\"info-drawer-title-title\">Source Facet:</div>\r\n                          <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                            {this.props.vizElement.vizFacetInfo.sourcePort &&\r\n                              <React.Fragment>\r\n                                <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo.sourcePort.parent.chain_group)}</span>\r\n                                <span> / </span>\r\n                                <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo.sourcePort.parent.facet_group)}</span>\r\n                                <span> / </span>\r\n                                <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo.sourcePort.parent.facet_type)}</span>\r\n                              </React.Fragment>\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"info-drawer-title-group\">\r\n                          <div className=\"info-drawer-title-title\">Target Facet:</div>\r\n                          <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                            {this.props.vizElement.vizFacetInfo.targetPort &&\r\n                              <React.Fragment>\r\n                                <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo.targetPort.parent.chain_group)}</span>\r\n                                <span> / </span>\r\n                                <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo.targetPort.parent.facet_group)}</span>\r\n                                <span> / </span>\r\n                                <span>{getFriendlyLabel(this.props.vizElement.vizFacetInfo.targetPort.parent.facet_type)}</span>\r\n                              </React.Fragment>\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    }\r\n                  </div>\r\n                </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getContent() {\r\n    var interactivePreviewClass = cx({\r\n      interactiveWrap: true,\r\n      'show': this.props.open\r\n    });\r\n    return(\r\n      <div className={interactivePreviewClass}>\r\n          {this.getLeftSidebar()}\r\n          <div className={\"interactive-central-holder \" + \r\n              (this.props.vizElement[\"vizType\"]).toLowerCase() + \r\n              (this.props.vizElement[\"isDashView\"] ? ' dash-central-panel' : '')}\r\n          >\r\n            <VizCentralContent\r\n              url={this.props.vizElement[\"iFrameURL\"]}\r\n              loading={this.props.loading}\r\n            >\r\n            </VizCentralContent>\r\n          </div>\r\n          {this.getRightSidebar()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n          {this.getContent()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizeComponent;","import React, { Component } from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n//import LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n//import classNames from 'classnames/bind';\r\nimport styles from './PopupMenu.module.scss';\r\n\r\n//let cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Popup Menu\r\n   * @param _functions Type - Object\r\n   */\r\nexport default class IkiPopupMenu extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  }\r\n\r\n  setAnchorEl = (aEle) => {\r\n    this.setState({ anchorEl: aEle });\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setAnchorEl(e.currentTarget);\r\n    if(this.props._open){\r\n      this.props._open();\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    //console.log(\"on close\");\r\n    this.setAnchorEl(null);\r\n    if(this.props._close){\r\n      this.props._close();\r\n    }\r\n  };\r\n\r\n  handleMenuClick = () => {\r\n    //console.log(\"handleMenuClick: \", this.props._data._id);\r\n    this.handleClose();\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      _functions,\r\n      _data\r\n    } = this.props;\r\n    const _type = this.props._type ? this.props._type : '';\r\n    //console.log(\"IkiPopupMenu: \", this.props);\r\n\r\n    return(\r\n      <>\r\n        <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleClick}\r\n            size=\"medium\"\r\n        >\r\n            <MoreHorizIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <Menu\r\n            classes={{\r\n                paper: styles.popupMenu\r\n            }}\r\n            anchorEl={this.state.anchorEl}\r\n            //keepMounted\r\n            open={Boolean(this.state.anchorEl)}\r\n            onClose={this.handleClose}\r\n        >\r\n          {_functions.map((func, num) => (\r\n            this.prepareItems(func, _data, num, _type)\r\n          ))}\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n\r\n  prepareItems(_func, _data, num, _type) {\r\n    if(_func.edit) {\r\n      if( _type === 'Dataset' || _type === 'Dashboard'){\r\n        return(\r\n            <MenuItem key={num} onClick={() => { \r\n              _func.edit(_data)\r\n                this.handleMenuClick()\r\n              }}\r\n            >\r\n                <EditIcon />\r\n                <span>Edit </span>\r\n            </MenuItem>\r\n        );\r\n      } else {\r\n        return(\r\n          <MenuItem key={num} onClick={() => { \r\n            _func.edit(_data._id)\r\n              this.handleMenuClick()\r\n            }}\r\n          >\r\n              <EditIcon />\r\n              <span>Edit </span>\r\n          </MenuItem>\r\n      );\r\n      }\r\n    } else if(_func.delete) {\r\n      if( _type === 'Project'){\r\n        return(\r\n            <MenuItem key={num} onClick={() => {\r\n                _func.delete(_data._id, _data._name)\r\n                this.handleMenuClick()\r\n              }}\r\n            >\r\n                <DeleteIcon />\r\n                <span>Delete </span>\r\n            </MenuItem>\r\n        );\r\n      } else if( _type === 'Dataset' || _type === 'Flow' || _type === 'Dashboard'){\r\n        return(\r\n            <MenuItem key={num} onClick={() => {\r\n                _func.delete(_data)\r\n                this.handleMenuClick()\r\n              }}\r\n            >\r\n                <DeleteIcon />\r\n                <span>Delete </span>\r\n            </MenuItem>\r\n        );\r\n      } else {\r\n        return(\r\n          <MenuItem key={num} onClick={() => { \r\n              _func.delete(_data._id, _data._name)\r\n              this.handleMenuClick()\r\n            }}\r\n          >\r\n              <DeleteIcon />\r\n              <span>Delete </span>\r\n          </MenuItem>\r\n      );\r\n      }\r\n    } else if(_func.share) {\r\n        return(\r\n            <MenuItem key={num} onClick={() => { \r\n                _func.share(_data._id, _data._name)\r\n                this.handleMenuClick()\r\n              }}\r\n            >\r\n                <ShareIcon />\r\n                <span>Share </span>\r\n            </MenuItem>\r\n        );\r\n    } else if(_func.clone) {\r\n        return(\r\n            <MenuItem key={num} onClick={() => { \r\n                _func.clone(_data._id, _data._name)\r\n                this.handleMenuClick()\r\n              }}\r\n            >\r\n                <FileCopyIcon />\r\n                <span>Clone </span>\r\n            </MenuItem>\r\n        );\r\n    } else if(_func.download) {\r\n      if( _type === 'Dataset'){\r\n        return(\r\n            <MenuItem key={num} onClick={() => {\r\n                _func.download(_data)\r\n                this.handleMenuClick()\r\n              }}\r\n            >\r\n                <GetAppIcon />\r\n                <span>Download </span>\r\n            </MenuItem>\r\n        );\r\n      } else {\r\n        return(\r\n            <MenuItem key={num} onClick={() => { \r\n                _func.download(_data._id)\r\n                this.handleMenuClick()\r\n              }}\r\n            >\r\n                <GetAppIcon />\r\n                <span>Download </span>\r\n            </MenuItem>\r\n        );\r\n      }\r\n    } else if(_func.browse) {\r\n      return(\r\n          <MenuItem key={num} onClick={() => {\r\n            _func.browse(_data._id)\r\n              this.handleMenuClick()\r\n            }}\r\n          >\r\n              <PageviewIcon />\r\n              <span>Browse </span>\r\n          </MenuItem>\r\n      );\r\n    }\r\n  };\r\n\r\n  /*prepareItems(_func, _data, num, _type) {\r\n    if(_func.edit) {\r\n        return(\r\n            <MenuItem key={num} onClick={() => _func.edit(_data._id)}>\r\n                <EditIcon />\r\n                <span>Edit </span>\r\n            </MenuItem>\r\n        );\r\n    } else if(_func.delete) {\r\n      if( _type === 'Project'){\r\n        return(\r\n            <MenuItem key={num} onClick={() => _func.delete(_data._id, _data._name)}>\r\n                <DeleteIcon />\r\n                <span>Delete </span>\r\n            </MenuItem>\r\n        );\r\n      } else {\r\n        return(\r\n          <MenuItem key={num} onClick={() => _func.delete(_data._id, _data._name)}>\r\n              <DeleteIcon />\r\n              <span>Delete </span>\r\n          </MenuItem>\r\n      );\r\n      }\r\n    } else if(_func.share) {\r\n        return(\r\n            <MenuItem key={num} onClick={() => _func.share(_data._id, _data._name)}>\r\n                <ShareIcon />\r\n                <span>Share </span>\r\n            </MenuItem>\r\n        );\r\n    } else if(_func.clone) {\r\n        return(\r\n            <MenuItem key={num} onClick={() => _func.clone(_data._id, _data._name)}>\r\n                <FileCopyIcon />\r\n                <span>Clone </span>\r\n            </MenuItem>\r\n        );\r\n    } else if(_func.download) {\r\n      return(\r\n          <MenuItem key={num} onClick={() => _func.download(_data._id)}>\r\n              <LibraryAddIcon />\r\n              <span>Download </span>\r\n          </MenuItem>\r\n      );\r\n    }\r\n  }*/\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel\r\n  } from '@material-ui/core';\r\n  import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n//import classNames from 'classnames/bind';\r\nimport styles from './Table.module.scss';\r\nimport IkiPopupMenu from '../IkiPopupMenu';\r\n\r\n//let cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Grid\r\n   * @param _type Type - string\r\n   */\r\nexport default class IkiTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        tableSortAsc: false,\r\n        tableSortProperty: ''\r\n    }\r\n  }\r\n\r\n  onRequestSort = (event, property) => {\r\n    //console.log(\"property: \", property, \", tableSortAsc: \", this.state.tableSortAsc);\r\n    this.setState({\r\n        tableSortAsc: !this.state.tableSortAsc,\r\n        tableSortProperty: property\r\n    });\r\n  };\r\n\r\n  sortTable = (tableContent) => {\r\n    if (this.state.tableSortProperty !== '') {\r\n      return this.sortOn(tableContent, this.state.tableSortProperty);\r\n    } else {\r\n      return tableContent;\r\n    }\r\n  };\r\n\r\n  sortOn = (arr, property) => {\r\n    //console.log(this.state.tableSortAsc);\r\n    var sortedArray = arr.sort((a, b) => {\r\n      if (b[property] < a[property]) {\r\n        return this.state.tableSortAsc ? 1 : -1;\r\n      }\r\n      if (b[property] > a[property]) {\r\n        return this.state.tableSortAsc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n    return sortedArray;\r\n  };\r\n\r\n  prepareTable = () => {\r\n    const { \r\n      _header,\r\n      _data\r\n    } = this.props;\r\n    const _functions = this.props._functions ? this.props._functions : '';\r\n    const _type = this.props._type ? this.props._type : '';\r\n    const _link = this.props._link ? this.props._link : '';\r\n    const _headerDescr = this.props._headerDescr ? this.props._headerDescr : '';\r\n    const _stickyHeader = this.props._stickyHeader ? this.props._stickyHeader : false;\r\n    var sortedTable = this.sortTable(_data);\r\n    var popupMenuIdKey, popupMenuNameKey;\r\n    if(_type === 'Project') {\r\n      popupMenuIdKey = 'project_id';\r\n      popupMenuNameKey = 'name';\r\n    } else if(_type === 'Flow') {\r\n      popupMenuIdKey = 'pipeline_id';\r\n      popupMenuNameKey = 'name';\r\n    } else if(_type === 'Dataset') {\r\n      popupMenuIdKey = 'dataset_id';\r\n      popupMenuNameKey = 'name';\r\n    } else if(_type === 'Dashboard') {\r\n      popupMenuIdKey = 'dashboard_id';\r\n      popupMenuNameKey = 'name';\r\n    } else if(_type) {\r\n      popupMenuIdKey = '';\r\n      popupMenuNameKey = '';\r\n    }\r\n\r\n    //console.log(\"IkiTable: \", this.props);\r\n\r\n    if(_type === 'Peek') {\r\n      return(\r\n        <>\r\n          <div className={styles.tableHolder}>\r\n            <Table\r\n                aria-label=\"simple table\"\r\n                component=\"div\"\r\n                className=\"table\"\r\n                stickyHeader={_stickyHeader}\r\n            >\r\n                <TableHead component=\"div\" className=\"table-head\">\r\n                    <TableRow\r\n                            component=\"div\"\r\n                        >\r\n                        {_header.map((headerColumn, num) => (\r\n                            <TableCell \r\n                                key={num}\r\n                                align=\"left\" \r\n                                component=\"div\"\r\n                                sortDirection={\r\n                                    this.state.tableSortAsc ? 'asc' : 'desc'\r\n                                }\r\n                            >\r\n                                {headerColumn !== '' && (\r\n                                    <TableSortLabel\r\n                                        active={this.state.tableSortProperty === num}\r\n                                        IconComponent={ArrowDropDownIcon}\r\n                                        direction={\r\n                                            this.state.tableSortAsc ? 'asc' : 'desc'\r\n                                        }\r\n                                        onClick={(event) =>\r\n                                            this.onRequestSort(event, num)\r\n                                        }\r\n                                    >\r\n                                        {_header[num]}\r\n                                    </TableSortLabel>\r\n                                )}\r\n                            </TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody component=\"div\" className=\"table-body\">\r\n                    <TableRow\r\n                      key=\"peek-tbl-head-descr\"\r\n                      component=\"div\"\r\n                    >\r\n                      {_headerDescr.map((headerDescrColumn, headerDescrColumnIndex) => (\r\n                        <TableCell align=\"left\" className=\"first-row-col\" component=\"div\" key={'peek-tbl-head-descr-cell-' + headerDescrColumnIndex}>\r\n                          <span>{headerDescrColumn}</span>\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                    {sortedTable.map((bodyRow, bodyRowIndex) => (\r\n                        <TableRow\r\n                            key={'tbl-body-row-' + bodyRowIndex}\r\n                            component=\"div\"\r\n                        >\r\n                            {_header.map((headerColumn, headerindex) => (\r\n                              <TableCell align=\"left\" component=\"div\" key={'peek-tbl-c-row-' + bodyRowIndex + '-cell-' + headerindex}>\r\n                                {typeof bodyRow[headerindex] === 'boolean' ? (\r\n                                  <span>{(bodyRow[headerindex]).toString()}</span>\r\n                                ):(\r\n                                  <span>{bodyRow[headerindex]}</span>\r\n                                )}\r\n                              </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return(\r\n        <>\r\n          <div className={styles.tableHolder}>\r\n            <Table\r\n                aria-label=\"simple table\"\r\n                component=\"div\"\r\n                className=\"table\"\r\n            >\r\n                <TableHead component=\"div\" className=\"table-head\">\r\n                    <TableRow\r\n                            component=\"div\"\r\n                        >\r\n                        {_header.map((headerColumn, num) => (\r\n                            <TableCell \r\n                                key={num}\r\n                                align=\"left\" \r\n                                component=\"div\"\r\n                                sortDirection={\r\n                                    this.state.tableSortAsc ? 'asc' : 'desc'\r\n                                }\r\n                            >\r\n                                {headerColumn.key !== '' && (\r\n                                    <TableSortLabel\r\n                                        active={this.state.tableSortProperty === headerColumn.key}\r\n                                        IconComponent={ArrowDropDownIcon}\r\n                                        direction={\r\n                                            this.state.tableSortAsc ? 'asc' : 'desc'\r\n                                        }\r\n                                        onClick={(event) =>\r\n                                            this.onRequestSort(event, headerColumn.key)\r\n                                        }\r\n                                    >\r\n                                        {headerColumn.name}\r\n                                    </TableSortLabel>\r\n                                )}\r\n                            </TableCell>\r\n                        ))}\r\n                        {_functions !== '' && (\r\n                          <TableCell \r\n                            align=\"left\" \r\n                            component=\"div\"\r\n                          ></TableCell>\r\n                        )}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody component=\"div\" className=\"table-body\">\r\n                    {sortedTable.map((bodyRow, bodyRowIndex) => (\r\n                        <TableRow\r\n                            key={'tbl-body-row-' + bodyRowIndex}\r\n                            component=\"div\"\r\n                        >\r\n                            {_header.map((headerColumn, headerindex) => (\r\n                              <TableCell align=\"left\" component=\"div\" key={'tbl-c-row-' + bodyRowIndex + '-cell-' + headerindex}>\r\n                                {_link !== '' && headerindex === 0 ? (\r\n                                  <Link to={`${_link + '' + bodyRow[popupMenuIdKey]}`}>{bodyRow[headerColumn.key]}</Link>\r\n                                ):(\r\n                                  <span>{bodyRow[headerColumn.key]}</span>\r\n                                )}\r\n                              </TableCell>\r\n                            ))}\r\n                            {_functions !== '' && (\r\n                              <TableCell align=\"right\" component=\"div\" key={'tbl-c-row-func-' + bodyRowIndex}>\r\n                                <IkiPopupMenu\r\n                                  _type={_type}\r\n                                  _data={\r\n                                    { \r\n                                      _id: bodyRow[popupMenuIdKey],\r\n                                      _name: bodyRow[popupMenuNameKey],\r\n                                      ...bodyRow\r\n                                    }\r\n                                  }\r\n                                  _functions={_functions}\r\n                                />\r\n                              </TableCell>\r\n                            )}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.prepareTable()\r\n  }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { \r\n    IconButton \r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport IkiTable from '../../../components/IkiLayout/IkiTable'\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Peek.module.scss';\r\nlet cx = classNames.bind(styles);\r\n\r\ntype PeekComponentProps = {\r\n  peekInitiated: boolean;\r\n  peekMinMax: string;\r\n  peekLoading: boolean;\r\n  peekContent: any;\r\n  handleClosePeekArrow: () => void;\r\n  handleMinMaxPeekArrow: (minmax: string) => void;\r\n};\r\n\r\ntype PeekComponentState = {};\r\n\r\nclass PeekComponent extends Component<PeekComponentProps, PeekComponentState> {\r\n  componentDidMount() {\r\n      //console.log(\"PeekComponent ...\");\r\n      //console.log(this.props);\r\n  }\r\n\r\n  render() {\r\n    var peekClass = cx({\r\n        peekWrap: true,\r\n        'show': this.props.peekInitiated,\r\n        'min': this.props.peekMinMax === 'min',\r\n        'max': this.props.peekMinMax === 'max'\r\n    });\r\n\r\n    return (\r\n            <div className={peekClass}>\r\n                {this.props.peekInitiated && (\r\n                    <Fragment>\r\n                        <div className=\"peek-wrap-header\">\r\n                            <div className=\"peek-wrap-title\">Peek arrow</div>\r\n                            <IconButton\r\n                                className=\"is-right mr-16\"\r\n                                onClick={\r\n                                () => {\r\n                                    if (this.props.peekMinMax === 'min') {\r\n                                    this.props.handleMinMaxPeekArrow('max')\r\n                                    } else {\r\n                                    this.props.handleMinMaxPeekArrow('min')\r\n                                    }\r\n                                }\r\n                                }\r\n                                size=\"small\"\r\n                                color=\"default\"\r\n                            >\r\n                                {this.props.peekMinMax === 'min' ? (\r\n                                <KeyboardArrowUpIcon fontSize=\"small\" />\r\n                                ) : (\r\n                                    <KeyboardArrowDownIcon fontSize=\"small\" />\r\n                                )\r\n                                }\r\n                            </IconButton>\r\n                            <IconButton\r\n                                className=\"is-right\"\r\n                                onClick={() => this.props.handleClosePeekArrow()}\r\n                                size=\"small\"\r\n                                color=\"default\"\r\n                            >\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"peek-wrap-content\">\r\n                            {this.props.peekLoading && (\r\n                                <div className=\"iki-loader-wrap peek-load-wrap\">\r\n                                <div className=\"iki-loader-inner\">\r\n                                    <span className=\"iki-spinner\"></span>\r\n                                    <div className=\"iki-loader-txt\">Loading...</div>\r\n                                </div>\r\n                                </div>\r\n                            )}\r\n                            {\r\n                                Object.keys(this.props.peekContent).length > 0 && (\r\n                                Object.keys(this.props.peekContent).map((peekContentKey: any) => (\r\n                                    // <div>{peekContentKey}</div>\r\n                                    peekContentKey === \"column_names\" && (\r\n                                        <IkiTable\r\n                                            key={'peek-tbl-' + peekContentKey}\r\n                                            _type=\"Peek\"\r\n                                            _header={this.props.peekContent[\"column_names\"]}\r\n                                            _stickyHeader={true}\r\n                                            _headerDescr={this.props.peekContent[\"column_data_types\"]}\r\n                                            _data={this.props.peekContent[\"rows\"]}\r\n                                        />\r\n                                    )\r\n                                ))\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PeekComponent;","import React, { Fragment } from 'react';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../IkiFormElements/IkiButton';\r\n\r\nexport function DeleteProjectDialog(props: any) {\r\n  const {\r\n    projectId,\r\n    projectName,\r\n    handleDialogClose,\r\n    handleDeleteDialogSubmit,\r\n    handleDeleteDialogCancel,\r\n    open,\r\n    deleteSubmitLoading\r\n  } = props;\r\n  return (\r\n    <IkiDialog\r\n            _open={open}\r\n            _onClose={handleDialogClose}\r\n            _type='delete'\r\n            _icon={false}\r\n            _title='Delete project'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _align='center'\r\n            _content={\r\n              <>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{projectId}</div>\r\n                  <div className=\"txt-dialog-impact1\">{projectName}</div>\r\n                </div>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-impact2 error\">Are you sure ?</div>\r\n                  <div className=\"error\">\r\n                    All your pipelines inside will be deleted as well.\r\n                  </div>\r\n                </div>\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={handleDeleteDialogCancel}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Delete\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={deleteSubmitLoading}\r\n                  _disabled={deleteSubmitLoading}\r\n                  _isDanger={true}\r\n                  _onClick={handleDeleteDialogSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\n//import PersonIcon from '@material-ui/icons/Person';\r\nimport * as EmailValidator from 'email-validator';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\n\r\nexport function ShareProjectDialog(props: any) {\r\n  const {\r\n    handleDialogClose,\r\n    open,\r\n    projectId,\r\n    projectName,\r\n    projectShareDialogErrorState,\r\n    projectShareDialogErrorMsg,\r\n    onSubmit,\r\n    shareSubmitLoading\r\n  } = props;\r\n\r\n  const [targetUserEmail, setTargetUserMail] = React.useState('');\r\n  const [emailErrorMsg, setEmailErrorMsg] = React.useState('');\r\n\r\n  const handleTargetUserEmailChange = (e: any) => {\r\n    setTargetUserMail(e.target.value);\r\n  };\r\n\r\n  const handleShareDialogSubmit = (e: any) => {\r\n    let emailIsValid = false;\r\n\r\n    if (targetUserEmail !== '') {\r\n      if (EmailValidator.validate(targetUserEmail) === true) {\r\n        setEmailErrorMsg('');\r\n\r\n        emailIsValid = true;\r\n      } else {\r\n        setEmailErrorMsg('Invalid email');\r\n\r\n        emailIsValid = false;\r\n      }\r\n    } else {\r\n      setEmailErrorMsg('Email is required');\r\n      emailIsValid = false;\r\n    }\r\n    if (emailIsValid) {\r\n      onSubmit(targetUserEmail);\r\n    }\r\n  };\r\n\r\n  const handleOnCloseShareDialog = () => {\r\n    setTargetUserMail('');\r\n    setEmailErrorMsg('');\r\n    handleDialogClose();\r\n  }\r\n\r\n  return (\r\n      <IkiDialog\r\n            _open={open}\r\n            _onClose={handleOnCloseShareDialog}\r\n            _type='share'\r\n            _icon={false}\r\n            _title='Share project'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _align='left'\r\n            _content={\r\n              <>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{projectId}</div>\r\n                  <div className=\"txt-dialog-impact1\">{projectName}</div>\r\n                </div>\r\n                <div className=\"section\">\r\n                  <IkiInput \r\n                    _label=\"User email\"\r\n                    _placeholder=\"Enter email of user to share project with\"\r\n                    _type='text'\r\n                    _autoComplete=\"new-password\"\r\n                    _value={targetUserEmail}\r\n                    _onChange={handleTargetUserEmailChange}\r\n                    _characterCounter={40}\r\n                    _autoFocus={true}\r\n                    _fullWidth={true}\r\n                    _error={emailErrorMsg}\r\n                  />\r\n                </div>\r\n                {projectShareDialogErrorState === true && (\r\n                  <div className=\"section\">\r\n                    <div className=\"submit-error has-txt-centered\">\r\n                      {projectShareDialogErrorMsg}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={handleOnCloseShareDialog}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Share\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={shareSubmitLoading}\r\n                  _disabled={shareSubmitLoading}\r\n                  _onClick={handleShareDialogSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n        />\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\n\r\nexport function EditProjectDialog(props: any) {\r\n  const {\r\n    handleDialogClose,\r\n    open,\r\n    projectID,\r\n    projectName,\r\n    onSubmit,\r\n    renameSubmitLoading\r\n  } = props;\r\n\r\n  const [newName, setNewName] = React.useState(projectName);\r\n  //const [nameErrorMsg, setNameErrorMsg] = React.useState('');\r\n  const [nameErrorState, setNameErrorState] = React.useState(false);\r\n\r\n  const handleNameChange = (e: any) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleEditDialogSubmit = (e: any) => {\r\n    if (newName !== '') {\r\n      onSubmit(newName);\r\n      setNameErrorState(false);\r\n    } else {\r\n      //setNameErrorMsg('Project name required');\r\n      setNameErrorState(true);\r\n    }\r\n  };\r\n\r\n  const handleOnEnter= () => {\r\n    setNewName(projectName);\r\n  }\r\n\r\n  const handleOnClose= () => {\r\n    handleDialogClose();\r\n    setNameErrorState(false);\r\n  }\r\n\r\n  return (\r\n    <IkiDialog\r\n            _open={open}\r\n            _onEnter={handleOnEnter}\r\n            _onClose={handleOnClose}\r\n            _type='share'\r\n            _icon={false}\r\n            _title='Rename Project'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _align='left'\r\n            _content={\r\n              <>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{projectID}</div>\r\n                  <div className=\"txt-dialog-impact1\">{projectName}</div>\r\n                </div>\r\n                <div className=\"section\">\r\n                  <IkiInput \r\n                    _label=\"Project name\"\r\n                    _placeholder=\"Enter project name\"\r\n                    _type='text'\r\n                    _autoComplete=\"new-password\"\r\n                    _value={newName}\r\n                    _onChange={handleNameChange}\r\n                    _characterCounter={40}\r\n                    _autoFocus={true}\r\n                    _fullWidth={true}\r\n                    _error={nameErrorState ? 'Required' : ''}\r\n                  />\r\n                </div>\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={handleOnClose}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Rename\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={renameSubmitLoading}\r\n                  _disabled={renameSubmitLoading}\r\n                  _onClick={handleEditDialogSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n        />\r\n  );\r\n}\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport './index.scss';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst FileInput = (props: any) => {\r\n  //console.log(\"fileData: \" + props.fileData)\r\n  // const [file, setFile] = useState();\r\n  const [deleteAction, setDeleteAction] = useState(false);\r\n  const onDrop = useCallback(\r\n    acceptedFiles => {\r\n      // Do something with the files\r\n      // setFile(acceptedFiles[0]);\r\n      props.onFileAdded(acceptedFiles[0]);\r\n      setDeleteAction(false);\r\n    },\r\n    [props]\r\n  );\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: props.accept ? props.accept : '.csv'\r\n  });\r\n\r\n  const handleDeleteFile = () => {\r\n    // setFile(null);\r\n    setDeleteAction(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      // setFile(null);\r\n      setDeleteAction(false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"dropzone-container\">\r\n      {!props.fileData || deleteAction ? (\r\n        <div\r\n          {...getRootProps({\r\n            className: props.disabled ? 'dropzone disabled' : 'dropzone'\r\n          })}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <p>Drop the file or click to select file.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"upload-file\">\r\n          <div className=\"upload-file-title\">\r\n            <AttachFileIcon />\r\n            <span className=\"upload-name\">{props.fileData.name}</span>\r\n            <span className=\"upload-size\">\r\n              ({(props.fileData.size / 1000).toFixed(2)} KB)\r\n            </span>\r\n          </div>\r\n          <IconButton disabled={props.disabled} onClick={handleDeleteFile}>\r\n            <DeleteIcon color=\"primary\" />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import React, { useState, Fragment } from 'react';\r\nimport {\r\n  FormHelperText\r\n} from '@material-ui/core';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\nimport FileInput from '../file-input';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport AlertMsg from '../AlertMsg';\r\n\r\nexport function AddDatasetDialog(props: any) {\r\n  const {\r\n    datasetID,\r\n    name,\r\n    handleDialogClose,\r\n    handleSubmit,\r\n    handleSubmitOverwrite,\r\n    handleCancel,\r\n    open,\r\n    isEdit,\r\n    newDatasetNameExists,\r\n    dismissAlert,\r\n  } = props;\r\n  //console.log(\"isEdit: \", isEdit, \"name: \", name);\r\n\r\n  const [datasetName, setDatasetName] = useState(name);\r\n  const [datasetNameError, setDatasetNameError] = useState('');\r\n  const [file, setFile] = useState();\r\n  const [fileError, setFileError] = useState('');\r\n  const [isValidated, setIsvalidated] = useState(false);\r\n\r\n  const handleAddDatasetSubmit = () => {\r\n    if(datasetName !== '' && file !== ''){\r\n      //console.log(\"has val: \" + datasetName);\r\n      if (isEdit) {\r\n        if (file || datasetName !== '') {\r\n          handleSubmit(datasetName, file);\r\n          setIsvalidated(false);\r\n        } else {\r\n          setIsvalidated(true);\r\n        }\r\n      } else {\r\n        if (file && datasetName !== '') {\r\n          handleSubmit(datasetName, file);\r\n          setIsvalidated(false);\r\n        } else {\r\n          setIsvalidated(true);\r\n        }\r\n      }\r\n    }else{\r\n      if(datasetNameError === '') {\r\n        setDatasetNameError('Required');\r\n      }\r\n      if(file === '') {\r\n        setFileError('Required');\r\n      }\r\n      setIsvalidated(false);\r\n      //console.log(\"no val: \" + datasetName);\r\n    }\r\n  }\r\n\r\n  const handleAddDatasetSubmitOverwrite = () => {\r\n    if(datasetName !== '' && file !== ''){\r\n      //console.log(\"has val: \" + datasetName);\r\n      if (isEdit) {\r\n        if (file || datasetName !== '') {\r\n          handleSubmitOverwrite(datasetName, file);\r\n          setIsvalidated(false);\r\n        } else {\r\n          setIsvalidated(true);\r\n        }\r\n      } else {\r\n        if (file && datasetName !== '') {\r\n          handleSubmitOverwrite(datasetName, file);\r\n          setIsvalidated(false);\r\n        } else {\r\n          setIsvalidated(true);\r\n        }\r\n      }\r\n    }else{\r\n      //console.log(\"no val: \" + datasetName);\r\n      setIsvalidated(true);\r\n    }\r\n  }\r\n\r\n  const handleOnEnter = () => {\r\n    //console.log(\"onEnter\");\r\n    isEdit ? setDatasetName(name) : setDatasetName('')\r\n    setDatasetNameError('');\r\n    setFileError('');\r\n    setFile(null);\r\n    setDatasetName('');\r\n  }\r\n\r\n  const handleOnClose = () => {\r\n    setFile(null);\r\n    setIsvalidated(false);\r\n    setDatasetName('');\r\n    setDatasetNameError('');\r\n    setFileError('');\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <IkiDialog\r\n      key={'add-dataset-dialog'}\r\n      _open={open}\r\n      _onExit={handleOnClose}\r\n      _onEnter={handleOnEnter}\r\n      _onClose={handleOnClose}\r\n      _type='clouploadne'\r\n      _icon={false}\r\n      _title={isEdit ? 'Edit Dataset' : 'Upload New Dataset'}\r\n      _subtitle=''\r\n      _size='xs'\r\n      _align='left'\r\n      _content={\r\n        <>\r\n          {newDatasetNameExists === true ?\r\n            <Fragment>\r\n              <AlertMsg\r\n                alertType=\"warning\"\r\n                alertContent={\r\n                  <Fragment>\r\n                      <div>\r\n                        <span>Dataset with same name already exists.</span>\r\n                        <br />\r\n                        <strong>{datasetName}</strong>\r\n                      </div>\r\n                      <div>Please note:<br /> All flows which contain this dataset will be reflected by this change.</div>\r\n                      <div>\r\n                        <strong>Are you sure you want to continue and overwrite dataset?</strong>\r\n                      </div>\r\n                  </Fragment>\r\n                }\r\n                alertButtons={\r\n                  <Fragment>\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"No, go back\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _loading={false}\r\n                      _onClick={() => dismissAlert()}\r\n                    />\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='primary'\r\n                      _label=\"Yes, overwrite\"\r\n                      _type='button'\r\n                      _isWarning={true}\r\n                      _fullWidth={false}\r\n                      _loading={false}\r\n                      _onClick={() => handleAddDatasetSubmitOverwrite()}\r\n                    />\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Fragment>\r\n          :\r\n            <div>\r\n              {isEdit &&\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{datasetID}</div>\r\n                  <div className=\"txt-dialog-impact1\">{name}</div>\r\n                </div>\r\n              }\r\n              <div className=\"section\">\r\n                <IkiInput \r\n                      _label=\"Dataset name\"\r\n                      _placeholder=\"Enter new name for Dataset\"\r\n                      _type='text'\r\n                      _autoComplete=\"new-password\"\r\n                      _value={datasetName}\r\n                      _onChange={(e: any) => {\r\n                        setDatasetName(e.target.value);\r\n                      }}\r\n                      _characterCounter={40}\r\n                      _autoFocus={true}\r\n                      _fullWidth={true}\r\n                      _error={datasetNameError}\r\n                />\r\n                <FileInput\r\n                  onFileAdded={(file: File) => setFile(file)}\r\n                  // disabled={uploadStatus === 'pending'}\r\n                  fileData={file}\r\n                ></FileInput>\r\n                {fileError !== '' && (\r\n                  <FormHelperText className=\"input-error\" error>\r\n                    <ErrorIcon />\r\n                    <span>{fileError}</span>\r\n                  </FormHelperText>\r\n                )}\r\n              </div>\r\n            </div>\r\n          }\r\n        </>\r\n      }\r\n      _actions={\r\n        newDatasetNameExists !== true &&\r\n          <Fragment>\r\n            <IkiButton\r\n              _variant='text'\r\n              _color='default'\r\n              _label=\"Cancel\"\r\n              _type='button'\r\n              _fullWidth={false}\r\n              _loading={false}\r\n              _onClick={() => handleCancel()}\r\n            />\r\n            <IkiButton\r\n              _variant='contained'\r\n              _color='primary'\r\n              _label={isEdit ? 'Update' : 'Upload'}\r\n              _type='button'\r\n              _fullWidth={false}\r\n              _loading={false}\r\n              _disabled={false}\r\n              _onClick={() => handleAddDatasetSubmit()}\r\n            />\r\n          </Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../IkiFormElements/IkiButton';\r\n\r\nexport function DeleteDatasetDialog(props: any) {\r\n  const {\r\n    datasetId,\r\n    datasetName,\r\n    handleDialogClose,\r\n    handleSubmit,\r\n    handleCancel,\r\n    open\r\n  } = props;\r\n  return (\r\n    <IkiDialog\r\n            _open={open}\r\n            _onClose={handleDialogClose}\r\n            _type='delete'\r\n            _icon={false}\r\n            _title='Delete dataset'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _align='center'\r\n            _content={\r\n              <>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{datasetId}</div>\r\n                  <div className=\"txt-dialog-impact1\">{datasetName}</div>\r\n                </div>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-impact2 error\">Are you sure ?</div>\r\n                </div>\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={handleCancel}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Delete\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _isDanger={true}\r\n                  _onClick={handleSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Box,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\n\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\nexport function EditDatasetDialog(props: any) {\r\n  const {\r\n    datasetId,\r\n    handleDialogClose,\r\n    handleSubmit,\r\n    handleCancel,\r\n    open\r\n  } = props;\r\n\r\n  const [datasetName, setDatasetName] = useState('');\r\n  const [isValidated, setIsvalidated] = useState(false);\r\n  return (\r\n    <Dialog\r\n      onClose={handleDialogClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={open}\r\n      className=\"dialog\"\r\n      fullWidth={true}\r\n      maxWidth=\"xs\"\r\n      disableBackdropClick={true}\r\n    >\r\n      <DialogContent className=\"dialog-content\">\r\n        <div>\r\n          <Box className=\"dialog-title default-color\" mb={2}>\r\n            Edit dataset\r\n          </Box>\r\n          <div>\r\n            <div className=\"project-id\">{datasetId}</div>\r\n            <div className=\"project-name\">{props.datsetName}</div>\r\n          </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            required\r\n            label=\"Dataset name\"\r\n            placeholder=\"Enter new name for Dataset\"\r\n            type=\"search\"\r\n            autoComplete=\"new-username\"\r\n            value={datasetName}\r\n            onChange={(e: any) => {\r\n              setDatasetName(e.target.value);\r\n            }}\r\n            error={isValidated && datasetName === ''}\r\n            autoFocus\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          {isValidated && datasetName === '' && (\r\n            <FormHelperText className=\"input-error\" error>\r\n              <ErrorIcon />\r\n              <span>Dataset name required</span>\r\n            </FormHelperText>\r\n          )}\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions className=\"footer\">\r\n        <Button\r\n          autoFocus\r\n          onClick={() => handleCancel()}\r\n          color=\"default\"\r\n          className=\"button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"button\"\r\n          onClick={() => {\r\n            if (datasetName !== '') {\r\n              handleSubmit(datasetName);\r\n              setIsvalidated(false);\r\n            } else {\r\n              setIsvalidated(true);\r\n            }\r\n          }}\r\n        >\r\n          Update\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Box,\r\n  DialogActions,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nexport function CreateSessionDialog(props: any) {\r\n  const { handleCreate, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={open}\r\n      className=\"dialog\"\r\n      fullWidth={true}\r\n      maxWidth=\"xs\"\r\n      disableBackdropClick={true}\r\n    >\r\n      <DialogContent className=\"dialog-content\">\r\n        <div>\r\n          <Box className=\"dialog-title default-color\" mb={2}>\r\n            Session Expired. Create A New Session.\r\n          </Box>\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions className=\"footer\">\r\n        <Button\r\n          autoFocus\r\n          onClick={() => handleCreate()}\r\n          color=\"primary\"\r\n          className=\"button\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport * as EmailValidator from 'email-validator';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\n//import FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\n//import PersonIcon from '@material-ui/icons/Person';\r\n\r\nexport function DuplicateProjectDialog(props: any) {\r\n  const {\r\n    handleDialogClose,\r\n    open,\r\n    projectID,\r\n    projectName,\r\n    onSubmit,\r\n    duplicateSubmitLoading\r\n  } = props;\r\n\r\n  const [newName, setNewName] = React.useState(projectName);\r\n  //const [nameErrorMsg, setNameErrorMsg] = React.useState('');\r\n  const [nameErrorState, setNameErrorState] = React.useState(false);\r\n  const [targetUserEmail, setTargetUserMail] = React.useState('');\r\n  const [emailErrorMsg, setEmailErrorMsg] = React.useState('');\r\n\r\n  const handleTargetUserEmailChange = (e: any) => {\r\n    setTargetUserMail(e.target.value);\r\n  };\r\n\r\n  const handleNameChange = (e: any) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleDuplicateDialogSubmit = (e: any) => {\r\n    var projectNameValid: boolean = false;\r\n    var projectEmailValid: boolean = false;\r\n    if (newName !== '') {\r\n      projectNameValid = true;\r\n      setNameErrorState(false);\r\n    } else {\r\n      setNameErrorState(true);\r\n    }\r\n    if (targetUserEmail !== '') {\r\n      if (EmailValidator.validate(targetUserEmail) === true) {\r\n        setEmailErrorMsg('');\r\n        projectEmailValid = true;\r\n      } else {\r\n        setEmailErrorMsg('Invalid email'); \r\n        projectEmailValid = false;\r\n      }\r\n    }else{\r\n      projectEmailValid = true;\r\n    }\r\n    if(projectNameValid && projectEmailValid){\r\n      onSubmit(projectID, newName, targetUserEmail);\r\n    }\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    var copyName = projectName;\r\n    var copyIndex = copyName.indexOf('copy');\r\n    if (copyIndex > -1) {\r\n      var copyVersion = parseInt(copyName.substring(copyIndex + 4));\r\n      if (isNaN(copyVersion)) {\r\n        copyVersion = 1;\r\n        copyName += ' ' + copyVersion;\r\n      } else {\r\n        copyVersion++;\r\n        copyName = copyName.substring(0, copyIndex + 4) + ' ' + copyVersion;\r\n      }\r\n    } else {\r\n      copyName = projectName + ' copy';\r\n    }\r\n    setNewName(copyName);\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    handleDialogClose();\r\n    setNameErrorState(false);\r\n  };\r\n\r\n  return (\r\n    <IkiDialog\r\n            _open={open}\r\n            _onEnter={handleOnEnter}\r\n            _onClose={handleOnClose}\r\n            _type='clone'\r\n            _icon={false}\r\n            _title='Clone project'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _align='left'\r\n            _content={\r\n              <>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{projectID}</div>\r\n                  <div className=\"txt-dialog-impact1\">{projectName}</div>\r\n                </div>\r\n                <div className=\"section\">\r\n                  <IkiInput \r\n                    _label=\"Project name\"\r\n                    _placeholder=\"Enter project name\"\r\n                    _type='text'\r\n                    _autoComplete=\"new-password\"\r\n                    _value={newName}\r\n                    _onChange={handleNameChange}\r\n                    _characterCounter={40}\r\n                    _autoFocus={true}\r\n                    _fullWidth={true}\r\n                    _error={nameErrorState}\r\n                  />\r\n                  <IkiInput \r\n                    _label=\"Project owner (optional), current user by default\"\r\n                    _placeholder=\"Enter email of user that will be project owner\"\r\n                    _type='text'\r\n                    _autoComplete=\"new-password\"\r\n                    _value={targetUserEmail}\r\n                    _onChange={handleTargetUserEmailChange}\r\n                    _characterCounter={40}\r\n                    _fullWidth={true}\r\n                    _autoFocus={false}\r\n                    _error={emailErrorMsg}\r\n                  />\r\n                </div>\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={handleOnClose}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Clone\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={duplicateSubmitLoading}\r\n                  _disabled={duplicateSubmitLoading}\r\n                  _onClick={handleDuplicateDialogSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n        />\r\n  );\r\n}\r\n","import React, { useState, Fragment } from 'react';\r\nimport {\r\n  FormHelperText\r\n} from '@material-ui/core';\r\nimport FileInput from '../file-input';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\nimport IkiDialog from '../../components/IkiDialog';\r\n\r\nexport function ImportFlowDialog(props: any) {\r\n  const {\r\n    handleDialogClose,\r\n    handleSubmit,\r\n    handleCancel,\r\n    open,\r\n    isImportingProgress,\r\n    importFlowNameExists\r\n  } = props;\r\n  const [flowName, setFlowName] = useState('');\r\n  const [flowNameError, setFlowNameError] = useState('');\r\n  const [file, setFile] = useState();\r\n  const [definition, setDefinition] = useState('');\r\n  const [fileError, setFileError] = useState('');\r\n\r\n  const handleNameChange = (e: any) => {\r\n    setFlowName(e.target.value);\r\n  };\r\n\r\n  const handleSubmitImportFlow = () => {\r\n    //console.log('flowName:' + flowName);\r\n    //console.log('importFlowNameExists:' + importFlowNameExists);\r\n    var countErrors: number = 0;\r\n\r\n    if (definition === '' || definition === null) {\r\n      countErrors++;\r\n      setFileError('Required')\r\n    }else {\r\n      setFileError('')\r\n    }\r\n\r\n    if (flowName === '') {\r\n      countErrors++;\r\n      setFlowNameError('Required')\r\n    } else {\r\n      if(importFlowNameExists) {\r\n        countErrors++;\r\n        setFlowNameError('Flow with same name already exists. Please choose different name');\r\n      } else {\r\n        setFlowNameError('')\r\n      }\r\n    }\r\n\r\n    if(countErrors === 0) {\r\n      handleSubmit(flowName, definition);\r\n    }\r\n  }\r\n\r\n  const handleOnEnter = () => {\r\n    setFlowName('');\r\n    setFlowNameError('');\r\n    setFile(null);\r\n    setFileError('');\r\n    setDefinition('');\r\n  }\r\n\r\n  const handleOnClose = () => {\r\n    setFile(null);\r\n    setDefinition('');\r\n    setFileError('');\r\n    setFlowName('');\r\n    setFlowNameError('');\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <IkiDialog\r\n            _open={open}\r\n            _onClose={handleOnClose}\r\n            _onExit={handleOnClose}\r\n            _onEnter={handleOnEnter}\r\n            _type='regular'\r\n            _icon={false}\r\n            _title='Import flow'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _content={\r\n              <Fragment>\r\n                <IkiInput \r\n                  _label=\"Flow name\"\r\n                  _placeholder=\"Enter flow name\"\r\n                  _type='text'\r\n                  _value={flowName}\r\n                  _onChange={handleNameChange}\r\n                  _characterCounter={40}\r\n                  _autoFocus={true}\r\n                  _fullWidth={true}\r\n                  _error={flowNameError}\r\n                />\r\n                <FileInput\r\n                  onFileAdded={(file: File) => {\r\n                    var reader = new FileReader();\r\n                    reader.readAsText(file, 'UTF-8');\r\n                    reader.onload = function(evt: any) {\r\n                      try {\r\n                        var pipelineDefinition = JSON.parse(evt.target.result);\r\n                        if (\r\n                          !pipelineDefinition.facets ||\r\n                          pipelineDefinition.facets.length === 0\r\n                        ) {\r\n                          setFileError('Invalid pipeline');\r\n                        } else {\r\n                          setDefinition(pipelineDefinition);\r\n                          setFile(file);\r\n                          setFileError('');\r\n                        }\r\n                      } catch (e) {\r\n                        setFileError('Invalid pipeline');\r\n                      }\r\n                    };\r\n                    reader.onerror = function(evt: any) {\r\n                      setFileError('Unable to read file');\r\n                    };\r\n                  }}\r\n                  // disabled={uploadStatus === 'pending'}\r\n                  accept=\".iki\"\r\n                  fileData={file}\r\n                ></FileInput>\r\n                {fileError !== '' && (\r\n                  <FormHelperText className=\"input-error\" error>\r\n                    <ErrorIcon />\r\n                    <span>{fileError}</span>\r\n                  </FormHelperText>\r\n                )}\r\n              </Fragment>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={() => handleCancel()}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Create\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={isImportingProgress}\r\n                  _disabled={isImportingProgress}\r\n                  _isAlternate={true}\r\n                  _onClick={handleSubmitImportFlow}\r\n                />\r\n              </Fragment>\r\n            }\r\n    />\r\n  );\r\n}\r\n","import React, { useState, Fragment } from 'react';\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from '@material-ui/core';\r\n//import ErrorIcon from '@material-ui/icons/Error';\r\nimport IkiButton from '../IkiFormElements/IkiButton';\r\nimport IkiInput from '../IkiFormElements/IkiInput';\r\nimport IkiDialog from '../IkiDialog';\r\n\r\nexport function CloneFlowDialog(props: any) {\r\n  const {\r\n    handleSubmit,\r\n    handleCancel,\r\n    open,\r\n    isCloningProgress,\r\n    cloneFlowId,\r\n    cloneFlowName,\r\n    cloneFlowError,\r\n    projectsList,\r\n    projectId\r\n  } = props;\r\n  const [flowName, setFlowName] = useState(cloneFlowName);\r\n  const [flowNameError, setFlowNameError] = useState('');\r\n  const [cloneType, setCloneType] = React.useState('with-data');\r\n  const [cloneTypeDisabled, setCloneTypeDisabled] = React.useState(false);\r\n  const [project, setProject] = React.useState(projectId);\r\n  const [projectError, setProjectError] = React.useState('');\r\n\r\n  const handleCloneType = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCloneType((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleProject = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    var selectedProjectId = event.target.value;\r\n    setProject(selectedProjectId as string);\r\n    if(selectedProjectId !== projectId){\r\n      setCloneTypeDisabled(true);\r\n      setCloneType('no-data');\r\n    }else{\r\n      setCloneTypeDisabled(false);\r\n      setCloneType('with-data');\r\n    }\r\n  };\r\n\r\n  const handleNamingOnEnter = () => {\r\n    var copyName = cloneFlowName;\r\n    var copyIndex = copyName.indexOf('copy');\r\n    if (copyIndex > -1) {\r\n      var copyVersion = parseInt(copyName.substring(copyIndex + 4));\r\n      if (isNaN(copyVersion)) {\r\n        copyVersion = 1;\r\n        copyName += ' ' + copyVersion;\r\n      } else {\r\n        copyVersion++;\r\n        copyName = copyName.substring(0, copyIndex + 4) + ' ' + copyVersion;\r\n      }\r\n    } else {\r\n      copyName = cloneFlowName + ' copy';\r\n    }\r\n    setFlowName(copyName);\r\n  };\r\n\r\n  const prepareProjectsList = () => {\r\n    var projectsArray: any = [];\r\n    projectsList.forEach((projectData: any, index: number) => {\r\n      var projectInfo = {\r\n        value: projectData.project_id,\r\n        text: projectData.name\r\n      }\r\n      projectsArray.push(projectInfo);\r\n    })\r\n    //console.log(\"projectsArray: \", projectsArray);\r\n    return (\r\n      <IkiInput\r\n        //_disabled={cloneType === 'no-data'} \r\n        _required={true}\r\n        _label=\"Cloned Flow target Project\"\r\n        _placeholder=\"\"\r\n        _type='text'\r\n        _autoComplete=\"new-password\"\r\n        _value={project}\r\n        _isSelect={true}\r\n        _selectOptionsKeyForVal='value'\r\n        _selectOptionsKeyForTxt='text'\r\n        _fullWidth={true}\r\n        _selectOptions={projectsArray}\r\n        _onChange={handleProject}\r\n        _error={projectError}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleDialogSubmit = () => {\r\n    //console.log('cloneFlowError: ' + cloneFlowError + \", flowName: \" + flowName);\r\n    var countErrors: number = 0;\r\n    if(flowName === ''){\r\n      countErrors++;\r\n      setFlowNameError('Required');\r\n    }else{\r\n      if(cloneFlowError !== '') {\r\n        countErrors++;\r\n        setFlowNameError(cloneFlowError);\r\n      } else {\r\n        setFlowNameError('');\r\n      }\r\n    }\r\n    if(project === ''){\r\n      countErrors++;\r\n      setProjectError('Required');\r\n    }else{\r\n      setProjectError('');\r\n    }\r\n    if(countErrors === 0) {\r\n      handleSubmit(flowName, cloneFlowId, project, cloneType);\r\n    }\r\n    //console.log('countErrors...', countErrors);\r\n  }\r\n\r\n  return (\r\n    <IkiDialog\r\n            _open={open}\r\n            _onEnter={() => {\r\n              //setFlowName('');\r\n              setProject(projectId);\r\n              setFlowNameError('');\r\n              setProjectError('');\r\n              handleNamingOnEnter();\r\n              setCloneType('with-data');\r\n              setCloneTypeDisabled(false);\r\n            }}\r\n            _onClose={\r\n              () => {\r\n                setFlowName('');\r\n                setFlowNameError('');\r\n                setProjectError('');\r\n                setProject('');\r\n                handleCancel();\r\n                setCloneType('with-data');\r\n                setCloneTypeDisabled(false);\r\n              }\r\n            }\r\n            _onExit={\r\n              () => {\r\n                setFlowName('');\r\n                setFlowNameError('');\r\n                setProjectError('');\r\n                setProject('');\r\n                handleCancel();\r\n                setCloneType('with-data');\r\n                setCloneTypeDisabled(false);\r\n              }\r\n            }\r\n            _type='regular'\r\n            _icon={false}\r\n            _title='Clone Flow'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _content={\r\n              <Fragment>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{cloneFlowId}</div>\r\n                  <div className=\"txt-dialog-impact1\">{cloneFlowName}</div>\r\n                </div>\r\n                <Box mb={2}>\r\n                  <FormControl \r\n                    className=\"radio-btn-holder with-label\" \r\n                    component=\"fieldset\" \r\n                    disabled={cloneTypeDisabled}\r\n                  >\r\n                    <FormLabel component=\"div\">Clone type:</FormLabel>\r\n                    <RadioGroup \r\n                      aria-label=\"clone-type\" \r\n                      name=\"clone-type\" \r\n                      value={cloneType} \r\n                      onChange={handleCloneType}\r\n                    >\r\n                      <FormControlLabel \r\n                        value=\"with-data\" \r\n                        control={\r\n                          <Radio \r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                          />\r\n                        } \r\n                        label=\"Full copy (With data)\" \r\n                      />\r\n                      <FormControlLabel \r\n                        value=\"no-data\" \r\n                        control={\r\n                          <Radio \r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                          />\r\n                        } \r\n                        label=\"Without data\" \r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n                <IkiInput \r\n                  _required={true}\r\n                  _label=\"Name of cloned Flow\"\r\n                  _placeholder=\"Enter name of cloned Flow\"\r\n                  _type='text'\r\n                  _value={flowName}\r\n                  _onChange={(e: any) => {\r\n                    setFlowName(e.target.value);\r\n                  }}\r\n                  _characterCounter={40}\r\n                  _fullWidth={true}\r\n                  _error={flowNameError}\r\n                />\r\n                {prepareProjectsList()}\r\n              </Fragment>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={() => handleCancel()}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Clone\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={isCloningProgress}\r\n                  _disabled={isCloningProgress}\r\n                  _isAlternate={true}\r\n                  _onClick={handleDialogSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n      />\r\n  );\r\n\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport { getFriendlyLabel } from '../../util';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\r\n\r\ntype ComponentDrawerItemProps = {\r\n  node: any;\r\n  nodeId: any;\r\n  classes: any;\r\n  triggerHelpDrawer: (helpContent: any) => void;\r\n};\r\n\r\nconst styles = (theme: any) => ({\r\n  componentItem: {\r\n    display: 'inline-block' as 'inline-block',\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center' as 'center',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 5,\r\n    margin: 5,\r\n    fontSize: 12,\r\n    width: '45%',\r\n    maxWidth: '45%'\r\n  },\r\n  icon: {\r\n    marginBottom: 4,\r\n    fontSize: 20\r\n  }\r\n});\r\n\r\nclass ComponentDrawerItem extends Component<ComponentDrawerItemProps> {\r\n  render() {\r\n    //console.log(\"this.props.node.documentation: \");\r\n    //console.log(this.props.node.documentation);\r\n    return (\r\n      <TreeItem\r\n        nodeId={this.props.nodeId}\r\n        label={\r\n          <Fragment>\r\n            <DragIndicatorIcon className=\"drag-icon\" />\r\n            <span>\r\n              {\r\n                this.props.node.facet_info.custom_facet_type && this.props.node.facet_info.custom_facet_type === 'API' ? (\r\n                  this.props.node.facet_info.custom_facet_type\r\n                ):(\r\n                  getFriendlyLabel(this.props.node.facet_info.facet_type)\r\n                )\r\n              }\r\n            </span>\r\n            {this.props.node.documentation &&\r\n              this.props.node.documentation !== '' && (\r\n                <span className=\"drawer-help form-help-icon\" onClick={() => { this.props.triggerHelpDrawer(this.props.node.documentation)}}>?</span>\r\n              )}\r\n          </Fragment>\r\n        }\r\n        className=\"grabbable\"\r\n        draggable={true}\r\n        onDragStart={event => {\r\n          event.dataTransfer.setData(\r\n            'node-data',\r\n            JSON.stringify(this.props.node)\r\n          );\r\n        }}\r\n      ></TreeItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ComponentDrawerItem);\r\n","import React, { Fragment, useState } from 'react';\r\nimport IkiLoader from '../../components/IkiLoader';\r\n//import HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Tabs, Tab, IconButton } from '@material-ui/core';\r\n//import CodeBlock from '../components/codeblock';\r\nimport ReactMarkdown from 'react-markdown/with-html';\r\nimport './helpDrawer.scss';\r\n\r\nexport default function HelpDrawer(props: any) {\r\n  const { helpText } = props;\r\n  const [documentaitionLoaded, setDocumentaitionLoaded] = useState(false);\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  setTimeout(() => {\r\n    setDocumentaitionLoaded(true);\r\n  }, 1000)\r\n\r\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  const getHelpText = (text: string) => {\r\n    // text =\r\n    //   '# Exported\\n' +\r\n    //   '> Exported facet outputs your processed data to your chosen ' +\r\n    //   'output dataset.\\n' +\r\n    //   '## How To Set Arguments\\n' +\r\n    //   '### Facet Arguments\\n' +\r\n    //   '> 1. **file_type** : Exported facet supports csv format.\\n' +\r\n    //   '> 2. **file_name** : Choose a name for your output file.\\n' +\r\n    //   '> 3. **dataset_name** : Choose a name for your output ' +\r\n    //   'dataset.\\n' +\r\n    //   '> (!) **overwrite** window pops up when you type in a ' +\r\n    //   'dataset name that already exists in your project, choose ' +\r\n    //   'yes to overwrite existing dataset.\\n' +\r\n    //   '\\n' +\r\n    //   'Example:\\n' +\r\n    //   'http://d18f1dd5shmawi.cloudfront.net/images/image10.png';\r\n    //var\r\n    //return <ReactMarkdown source={text} escapeHtml={false}></ReactMarkdown>;\r\n    var helpTexts_clearBrackets2 = text.split(\"[\").join(\"\");\r\n    var helpTexts_clearBrackets3 = helpTexts_clearBrackets2.split(\"[\").join(\"\");\r\n    var helpTexts = helpTexts_clearBrackets3.split('Example:\\n');\r\n\r\n    if (text.length === 1) {\r\n      return (\r\n        <Fragment>\r\n          <ReactMarkdown source={helpTexts[0]} escapeHtml={false}></ReactMarkdown>\r\n        </Fragment>\r\n      );\r\n    } else{\r\n      return (\r\n        <Fragment>\r\n          <Tabs\r\n            value={tabIndex}\r\n            onChange={handleTabChange}\r\n            indicatorColor=\"primary\"\r\n            className=\"help-tabs\"\r\n          >\r\n            <Tab label=\"Info\" id=\"tab-0\"></Tab>\r\n            <Tab label=\"Example\" id=\"tab-1\"></Tab>\r\n          </Tabs>\r\n          <div hidden={tabIndex !== 0} className=\"info-block\">\r\n            <ReactMarkdown\r\n              source={helpTexts[0]}\r\n              escapeHtml={false}\r\n            ></ReactMarkdown>\r\n          </div>\r\n          <div hidden={tabIndex !== 1} className=\"info-example-block\">\r\n            <img src={helpTexts[1].trim()} alt=\"example\"></img>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Fragment>\r\n      <IkiLoader\r\n        loadingTxt = \"Loading Facet Documentation...\"\r\n        fadeOut = {documentaitionLoaded}\r\n        placement = \"facet-doc\"\r\n      />\r\n      <div className=\"help-drawer-inner\">\r\n          <IconButton \r\n              className=\"close-help-drawer-btn\" \r\n              size=\"small\"\r\n              onClick={props.handleCloseHelpDrawer}\r\n          >\r\n              <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          {getHelpText(helpText)}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}","import React, { Component, Fragment } from 'react';\r\n//import { Drawer, withStyles } from '@material-ui/core';\r\nimport ComponentDrawerItem from './component-drawer-item';\r\nimport { getFriendlyLabel } from '../../util';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n//import ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n//import { Link } from 'react-router-dom';\r\n//import { IkigaiLogo } from '../../components/IkigaiLogo';\r\nimport HelpDrawer from './help-drawer';\r\nimport './component-drawer.scss';\r\n//import { ChatNavModule } from '../../components/chat';\r\n\r\ntype ComponentDrawerProps = {\r\n  components: [];\r\n  facetDocLoaded: boolean;\r\n  backLink: string;\r\n  uploadProgress:any;\r\n};\r\n\r\ntype ComponentDrawerStates = {\r\n  toggleHelpDrawer: boolean;\r\n  helpDrawerContent: any;\r\n};\r\n\r\nclass ComponentDrawer extends Component<ComponentDrawerProps, ComponentDrawerStates> {\r\n  state = {\r\n    toggleHelpDrawer: false,\r\n    helpDrawerContent: ''\r\n  }\r\n  render() {\r\n      return (\r\n          <Fragment>\r\n                <div className=\"tree-view-holder-title\">\r\n                    <span>Facets</span>\r\n                </div>\r\n                <div className=\"tree-view-holder\">\r\n                  <TreeView\r\n                    defaultCollapseIcon={<ExpandMoreIcon />}\r\n                    defaultExpandIcon={<ChevronRightIcon />}\r\n                    className=\"tree-view-component\"\r\n                  >\r\n                    {this.getComponentList()}\r\n                  </TreeView>\r\n                </div>\r\n                <div className={this.state.toggleHelpDrawer ? 'help-drawer-wrap is-open' : 'help-drawer-wrap'}>\r\n                  {this.state.toggleHelpDrawer && \r\n                    <HelpDrawer\r\n                      helpText={this.state.helpDrawerContent}\r\n                      handleCloseHelpDrawer={() => this.closeHelpDrawer()}\r\n                    />\r\n                  }\r\n                </div>\r\n          </Fragment>\r\n      );\r\n  }\r\n\r\n  handleHelpDrawer(helpContent: any) {\r\n    //console.log(\"handleHelpDrawer\");\r\n    this.setState({ \r\n      toggleHelpDrawer: true,\r\n      helpDrawerContent: helpContent\r\n    })\r\n  }\r\n\r\n  closeHelpDrawer() {\r\n    this.setState({ \r\n      toggleHelpDrawer: false,\r\n      helpDrawerContent: ''\r\n    })\r\n  }\r\n\r\n  getComponentList() {\r\n    if (this.props.components) {\r\n      //console.log(\"this.props.components: \");\r\n      //console.log(this.props.components);\r\n\r\n      var componentsByGroup: any = [];\r\n      componentsByGroup = this.props.components;\r\n\r\n      //console.log(\"componentsByGroup: \");\r\n      //console.log(componentsByGroup);\r\n\r\n      return Object.keys(componentsByGroup).sort().map((key: any) => {\r\n        if (key === 'MID') {\r\n          return Object.keys(componentsByGroup[key]).sort().map((key1: any) => (\r\n            <TreeItem\r\n              nodeId={key + '-' + key1}\r\n              key={key + '-' + key1}\r\n              label={getFriendlyLabel(key1)}\r\n            >\r\n              {Object.keys(componentsByGroup[key][key1]).sort().map((component: any) => {\r\n                //console.log(\"component: \");\r\n                //console.log(component);\r\n                return (<ComponentDrawerItem\r\n                  nodeId={key + '-' + key1 + '-' + component}\r\n                  key={key + '-' + key1 + '-' + component}\r\n                  node={componentsByGroup[key][key1][component]}\r\n                  triggerHelpDrawer={(helpContent: any) => { this.handleHelpDrawer(helpContent) }}\r\n                ></ComponentDrawerItem>)\r\n              })}\r\n            </TreeItem>\r\n          ));\r\n        } else {\r\n          return (\r\n            <TreeItem nodeId={key} key={key} label={getFriendlyLabel(key)}>\r\n              {Object.keys(componentsByGroup[key]).sort().map((key1: any) => (\r\n                <TreeItem\r\n                  nodeId={key + '-' + key1}\r\n                  key={key + '-' + key1}\r\n                  label={getFriendlyLabel(key1)}\r\n                >\r\n                  {Object.keys(componentsByGroup[key][key1]).sort().map((component: any) => (\r\n                    <ComponentDrawerItem\r\n                      nodeId={key + '-' + key1 + '-' + component}\r\n                      key={key + '-' + key1 + '-' + component}\r\n                      node={componentsByGroup[key][key1][component]}\r\n                      triggerHelpDrawer={(helpContent: any) => { this.handleHelpDrawer(helpContent) }}\r\n                    ></ComponentDrawerItem>\r\n                  ))}\r\n                </TreeItem>\r\n              ))}\r\n            </TreeItem>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default ComponentDrawer;\r\n","import React, { Fragment } from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\n\r\nexport default function MoreMenu(props: any) {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleActions = () => {\r\n    handleClose();\r\n    props.onActions();\r\n  };\r\n\r\n  const handleArguments = () => {\r\n    handleClose();\r\n    props.onArguments();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton className=\"more-button\" onClick={handleClick} size=\"small\">\r\n        <MoreHorizOutlinedIcon />\r\n      </IconButton>\r\n      <Menu\r\n        classes={{\r\n          paper: 'action-btn-menu'\r\n        }}\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleActions}>\r\n          <span>Actions</span>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleArguments}>\r\n          <span>Arguments</span>\r\n        </MenuItem>\r\n      </Menu>\r\n    </Fragment>\r\n  );\r\n}\r\n","import createEngine, {\r\n  DiagramEngine,\r\n  DiagramModel,\r\n  PortModel,\r\n  DagreEngine,\r\n  DefaultDiagramState\r\n} from '@projectstorm/react-diagrams';\r\nimport { CustomNodeFactory } from '../routes/flow-diagram/node/customnodefactory';\r\nimport { CustomNodeModel } from '../routes/flow-diagram/node/customnodemodel';\r\nimport {\r\n  CustomLinkFactory,\r\n  CustomLinkModel\r\n} from '../routes/flow-diagram/link';\r\nimport { InputType } from '@projectstorm/react-canvas-core';\r\nimport { CustomPortModel } from '../routes/flow-diagram/node/customportmodel';\r\nimport { Point } from '@projectstorm/geometry';\r\n\r\nvar _engine: DiagramEngine;\r\nvar _model: DiagramModel;\r\nvar _dagreEngine: DagreEngine;\r\n\r\ninterface FacetType {\r\n  [key: string]: CustomNodeModel;\r\n}\r\n\r\nvar _facets: FacetType = {};\r\nvar currentNodeId = 0;\r\n\r\nvar autoLayoutLoopsMax = 10;\r\nvar autoLayoutLoopCounter = 0;\r\n\r\nexport const initDiagramEngine = () => {\r\n  _engine = createEngine();\r\n  const state = _engine.getStateMachine().getCurrentState();\r\n  if (state instanceof DefaultDiagramState) {\r\n    state.dragNewLink.config.allowLooseLinks = false;\r\n  }\r\n  _engine.getNodeFactories().registerFactory(new CustomNodeFactory());\r\n  _engine.getLinkFactories().registerFactory(new CustomLinkFactory());\r\n  _engine\r\n    .getActionEventBus()\r\n    .deregisterAction(\r\n      _engine.getActionEventBus().getActionsForType(InputType.KEY_DOWN)[0]\r\n    );\r\n  _model = new DiagramModel();\r\n\r\n  _engine.setModel(_model);\r\n  _engine.setMaxNumberPointsPerLink(0);\r\n  _dagreEngine = new DagreEngine({\r\n    graph: {\r\n      rankdir: 'LR',\r\n      ranker: 'longest-path',\r\n      ranksep: 200\r\n    },\r\n    includeLinks: true\r\n  });\r\n  //console.log(\"_dagreEngine: \");\r\n  //console.log(_dagreEngine);\r\n  return _engine;\r\n};\r\n\r\nexport const addNodesAndArrows = (facets: any, arrows: any) => {\r\n  for (var i = 0; i < facets.length; i++) {\r\n    let facetObject: any = facets[i];\r\n    var fId = parseInt(facetObject.facet_id);\r\n    if (fId > currentNodeId) {\r\n      currentNodeId = fId;\r\n    }\r\n    currentNodeId++;\r\n    let node = _createNode(\r\n      facetObject.name,\r\n      facetObject.facet_id,\r\n      facetObject.facet_type,\r\n      facetObject.facet_group,\r\n      facetObject.chain_group,\r\n      facetObject.custom_facet_type,\r\n      facetObject.custom_facet_group,\r\n      facetObject.custom_chain_group\r\n    );\r\n    _model.addNode(node);\r\n\r\n    _facets['facet_' + facetObject.facet_id] = node;\r\n  }\r\n  if (arrows) {\r\n    addArrows(arrows);\r\n  }\r\n  if (facets.length > 0) {\r\n    setTimeout(function() {\r\n      autoLayout();\r\n      //centerCanvas();\r\n      //setTimeout(centerCanvas, 3000);\r\n    }, 1000);\r\n    // setTimeout(function() {\r\n    //   //_engine.zoomToFit();\r\n    //   //_engine.repaintCanvas();\r\n    // }, 10000);\r\n  }\r\n};\r\n\r\nexport const addArrows = (arrows: any[]) => {\r\n  for (var i = 0; i < arrows.length; i++) {\r\n    const arrow: any = arrows[i];\r\n    addArrow(arrow.source, arrow.destination);\r\n  }\r\n};\r\n\r\nexport const addArrow = (source: any, destination: any) => {\r\n  const link: CustomLinkModel = new CustomLinkModel();\r\n  const node1 = _facets['facet_' + source];\r\n  const node2 = _facets['facet_' + destination];\r\n  link.setSourcePort(node1.getPort('out') as PortModel);\r\n  link.setTargetPort(node2.getPort('in') as PortModel);\r\n  var firstPoint: Point = link.getFirstPoint().getPosition();\r\n  if (firstPoint.x === 0 || firstPoint.y === 0) {\r\n    var sourcePosition: Point = link\r\n      .getSourcePort()\r\n      .getPosition()\r\n      .clone();\r\n    sourcePosition.translate(7, 7);\r\n    link.getFirstPoint().setPosition(sourcePosition);\r\n  }\r\n  var lastPoint: Point = link.getLastPoint().getPosition();\r\n  if (lastPoint.x === 0 || lastPoint.y === 0) {\r\n    var targetPosition: Point = link\r\n      .getTargetPort()\r\n      .getPosition()\r\n      .clone();\r\n    targetPosition.translate(7, 7);\r\n    link.getLastPoint().setPosition(targetPosition);\r\n  }\r\n  link.isConnectedToANode = true;\r\n  link.added = true;\r\n  _model.addLink(link);\r\n};\r\n\r\nexport const centerCanvas = () => {\r\n  let engine = getDiagramEngine();\r\n  let model = engine.getModel();\r\n  let canvas = engine.getCanvas();\r\n  if (!canvas) return;\r\n  let zoomFactor = model.getZoomLevel() / 100;\r\n\r\n  var width = 0,\r\n    height = 0,\r\n    x = 99999,\r\n    y = 99999;\r\n  var nodes = Array.from(canvas.getElementsByClassName('node'));\r\n  nodes.map((node: Element) => {\r\n    var el: HTMLElement = node as HTMLElement;\r\n    var w = el.offsetWidth;\r\n    var h = el.offsetHeight;\r\n    var l = el.offsetLeft;\r\n    var t = el.offsetTop;\r\n    width = Math.max(width, Math.abs(l) + w);\r\n    height = Math.max(height, Math.abs(t) + h);\r\n    x = Math.min(x, l);\r\n    y = Math.min(y, t);\r\n    return node\r\n  });\r\n\r\n  width -= x;\r\n  height -= y;\r\n\r\n  if (nodes.length > 0 && width === 0 && height === 0) {\r\n    requestAnimationFrame(centerCanvas);\r\n    return;\r\n  }\r\n\r\n  model.setOffset(\r\n    (canvas.clientWidth - width * zoomFactor) * 0.5,\r\n    (canvas.clientHeight - height * zoomFactor) * 0.5\r\n  );\r\n  engine.repaintCanvas();\r\n};\r\n\r\nexport const zoomIn = () => {\r\n  let engine = getDiagramEngine();\r\n  let model = engine.getModel();\r\n  model.setZoomLevel(model.getZoomLevel() * 1.1);\r\n  centerCanvas();\r\n};\r\n\r\nexport const zoomOut = () => {\r\n  let engine = getDiagramEngine();\r\n  let model = engine.getModel();\r\n  model.setZoomLevel(model.getZoomLevel() * 0.9);\r\n  centerCanvas();\r\n};\r\n\r\nexport const zoomToFit = () => {\r\n  let engine = getDiagramEngine();\r\n  let model = engine.getModel();\r\n  let canvas = engine.getCanvas();\r\n  if (!canvas) return;\r\n  var width = 0,\r\n    height = 0,\r\n    x = 9999,\r\n    y = 9999;\r\n  var nodes = Array.from(canvas.getElementsByClassName('node'));\r\n  nodes.map((node: Element) => {\r\n    var el: HTMLElement = node as HTMLElement;\r\n    var w = el.offsetWidth;\r\n    var h = el.offsetHeight;\r\n    var l = el.offsetLeft;\r\n    var t = el.offsetTop;\r\n    width = Math.max(width, Math.abs(l) + w);\r\n    height = Math.max(height, Math.abs(t) + h);\r\n    x = Math.min(x, l);\r\n    y = Math.min(y, t);\r\n    return node\r\n  });\r\n\r\n  width -= x;\r\n  height -= y;\r\n\r\n  const xFactor = canvas.clientWidth / width;\r\n  const yFactor = canvas.clientHeight / height;\r\n  var zoomFactor = xFactor < yFactor ? xFactor : yFactor;\r\n  zoomFactor = Math.min(zoomFactor, 1);\r\n  model.setZoomLevel(zoomFactor * 100);\r\n  model.setOffset(\r\n    (canvas.clientWidth - width * zoomFactor) * 0.5,\r\n    (canvas.clientHeight - height * zoomFactor) * 0.5\r\n  );\r\n\r\n  engine.repaintCanvas();\r\n};\r\n\r\nexport const getNode = (id: any) => {\r\n  return _facets[`facet_${id}`];\r\n};\r\n\r\nexport const addNode = (\r\n  nodeData: any,\r\n  position: any,\r\n  existingNode?: CustomNodeModel\r\n) => {\r\n  var facetId: string;\r\n  let node: CustomNodeModel;\r\n  if (existingNode) {\r\n    facetId = existingNode.facet_id;\r\n    node = existingNode;\r\n    _model.addNode(node);\r\n    if (existingNode.linksRef.length > 0) {\r\n      existingNode.linksRef.map((link: any) => {\r\n        if ((link as CustomLinkModel).isConnectedToANode) {\r\n          const sourcePort: CustomPortModel = link.getSourcePort();\r\n          const targetPort: CustomPortModel = link.getTargetPort();\r\n          link.clearPort(sourcePort);\r\n          link.clearPort(targetPort);\r\n          link.setSourcePort(sourcePort);\r\n          link.setTargetPort(targetPort);\r\n          _model.addLink(link as CustomLinkModel);\r\n        }\r\n        return link\r\n      });\r\n      existingNode.linksRef = [];\r\n    }\r\n  } else {\r\n    facetId = currentNodeId.toString();\r\n    node = _createNode(\r\n      nodeData.facet_info.name,\r\n      facetId,\r\n      nodeData.facet_info.facet_type,\r\n      nodeData.facet_info.facet_group,\r\n      nodeData.facet_info.chain_group,\r\n      nodeData.facet_info.custom_facet_type,\r\n      nodeData.facet_info.custom_facet_group,\r\n      nodeData.facet_info.custom_chain_group\r\n    );\r\n    _model.addNode(node);\r\n    if (position) {\r\n      node.setPosition(position);\r\n    }\r\n    currentNodeId++;\r\n  }\r\n\r\n  _facets['facet_' + facetId] = node;\r\n  return {\r\n    facet_group: node.facet_group,\r\n    facet_type: node.facet_type,\r\n    chain_group: node.chain_group,\r\n    custom_facet_group: node.custom_facet_group,\r\n    custom_facet_type: node.custom_facet_type,\r\n    custom_chain_group: node.custom_chain_group,\r\n    arguments: {},\r\n    facet_id: facetId\r\n  };\r\n};\r\n\r\nexport const getDiagramEngine = (): DiagramEngine => {\r\n  return _engine;\r\n};\r\n\r\nexport const getDiagramModel = (): DiagramModel => {\r\n  return _model;\r\n};\r\n\r\nexport const deleteNode = (node: CustomNodeModel) => {\r\n  var links: any[] = [];\r\n  //_model.removeNode(node);\r\n  const ports: any = node.getPorts();\r\n  const inPort: CustomPortModel = ports.in;\r\n  const outPort: CustomPortModel = ports.out;\r\n  if (inPort) {\r\n    const inportLinks: any = inPort.getLinks();\r\n    Object.keys(inportLinks).map((key: string) => links.push(inportLinks[key]));\r\n  }\r\n  if (outPort) {\r\n    const outPortLinks: any = outPort.getLinks();\r\n    Object.keys(outPortLinks).map((key: string) =>\r\n      links.push(outPortLinks[key])\r\n    );\r\n  }\r\n  node.linksRef = links;\r\n  // _model.removeNode(node);\r\n  node.remove();\r\n  console.log(node);\r\n  _engine.repaintCanvas();\r\n  //autoLayout();\r\n};\r\n\r\nexport const deleteLink = (link: CustomLinkModel) => {\r\n  _model.removeLink(link);\r\n  console.log('should delete link', link);\r\n  //link.remove();\r\n  _engine.repaintCanvas();\r\n};\r\n\r\nexport const autoLayout = () => {\r\n  autoLayoutLoopCounter++;\r\n  //console.log(\"autoLayoutLoopCounter: \" + autoLayoutLoopCounter + \", autoLayoutLoopsMax: \" + autoLayoutLoopsMax);\r\n  if (_engine.getCanvas()) {\r\n    //console.log(\"_model:\");\r\n    //console.log(_model.getNodes().length);\r\n    var countNodes = _model.getNodes().length;\r\n    // eslint-disable-next-line\r\n    var nodesWidth = 120 * countNodes;\r\n    var countArrows = _model.getLinks().length;\r\n    // eslint-disable-next-line\r\n    var arrowsWidth = 120 * countArrows;\r\n    // var widthArrowsNodes = nodesWidth + arrowsWidth + 3;\r\n    //console.log(\"_dagreEngine.options.graph.width;: \" + _dagreEngine.options.graph.width + \", _dagreEngine.options.graph.height: \" + _dagreEngine.options.graph.height);\r\n    _dagreEngine.redistribute(_model);\r\n    // var graphWidth = _dagreEngine.options.graph.width;\r\n    // var graphHeight = _dagreEngine.options.graph.height;\r\n    //console.log(\"_dagreEngine graph: \");\r\n    //console.log(_dagreEngine.options.graph.width);\r\n    //console.log(\"graphWidth \" + graphWidth + \", countNodes \" + countNodes + \", countArrows: \" + countArrows + \", arrowsWidth: \" + arrowsWidth + \", nodesWidth: \" + nodesWidth + \", widthArrowsNodes: \" + widthArrowsNodes);\r\n    if(_dagreEngine.options.graph.height > 0){\r\n      _engine.repaintCanvas(true).then(() => {\r\n        requestAnimationFrame(centerCanvas);\r\n        autoLayoutLoopCounter = 0;\r\n      });\r\n    }else{\r\n      if(autoLayoutLoopCounter < autoLayoutLoopsMax){\r\n        //autoLayoutLoopCounter++;\r\n        //console.log(\"autoLayout called\");\r\n        setTimeout(() => {\r\n          autoLayout();\r\n        }, 1000);\r\n      }\r\n    }\r\n    /*if(graphHeight > 0){\r\n      _engine.repaintCanvas(true).then(() => {\r\n        requestAnimationFrame(centerCanvas);\r\n      });\r\n    }else{\r\n      _dagreEngine.options.graph.width = widthArrowsNodes;\r\n      //_dagreEngine.redistribute(_model);\r\n      autoLayout();\r\n    }*/\r\n    //_engine.repaintCanvas(true);\r\n    //centerCanvas();\r\n    //_reRoute();\r\n    /*if(graphWidth >= widthArrowsNodes){\r\n      _engine.repaintCanvas(true).then(() => {\r\n        requestAnimationFrame(centerCanvas);\r\n      });\r\n    }else{\r\n      //_reRoute();\r\n      _engine.repaintCanvas(true).then(() => {\r\n        autoLayout();\r\n      });\r\n    }*/\r\n    /*setTimeout(function(){\r\n      if(graphWidth === widthArrowsNodes){\r\n        _reRoute();\r\n        _engine.repaintCanvas(true).then(() => {\r\n          centerCanvas();\r\n          //setTimeout(function(){\r\n          //  requestAnimationFrame(centerCanvas);\r\n          //},500)\r\n          // setTimeout(function() {\r\n          //   requestAnimationFrame(zoomToFit);\r\n          // }, 6000);\r\n        });\r\n      }else{\r\n        autoLayout();\r\n      }\r\n    },1000)*/\r\n  }\r\n};\r\n\r\n// const _reRoute = () => {\r\n//   var factory: PathFindingLinkFactory = _engine\r\n//     .getLinkFactories()\r\n//     .getFactory(PathFindingLinkFactory.NAME) as PathFindingLinkFactory;\r\n//   factory.calculateRoutingMatrix();\r\n// };\r\n\r\nconst _createNode = (\r\n  _name: string,\r\n  _id: string,\r\n  facet_type: string,\r\n  facet_group: string,\r\n  chain_group: string,\r\n  custom_facet_type: string,\r\n  custom_facet_group: string,\r\n  custom_chain_group: string\r\n) => {\r\n  const node = new CustomNodeModel({\r\n    color: '#FFFFFF',\r\n    name: _name,\r\n    facet_id: _id,\r\n    facet_group: facet_group,\r\n    facet_type: facet_type,\r\n    chain_group: chain_group,\r\n    custom_facet_group: custom_facet_group,\r\n    custom_facet_type: custom_facet_type,\r\n    custom_chain_group: custom_chain_group,\r\n  });\r\n  return node;\r\n};","import React, { Component } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Input,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\n//import './info-drawer.scss';\r\n//import ArrowBackRounded from '@material-ui/icons/ArrowBackRounded';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport ActionsMenu from './actions-menu';\r\n//import PipelineLogs from './pipeline-logs';\r\nimport { getFriendlyLabel } from '../../util';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\n\r\ntype InfoDrawerProps = {\r\n  onRun: () => void;\r\n  onSchedule: () => void;\r\n  title: string;\r\n  response: any;\r\n  projectName: string;\r\n  onSaveTitle: (flowName: string, projectName: string) => void;\r\n  onFlowDiagramModeChanged: (mode: string) => void;\r\n  flowDiagramMode: string;\r\n  modeChangePending: boolean;\r\n  pipelineRunning: boolean;\r\n  pipelineLogs: any[];\r\n  pipelineLoaded: boolean;\r\n  facetDocLoaded: boolean;\r\n  validateDiagram: () => boolean;\r\n  editRunFlowRunning: boolean;\r\n  pipelineSpecs: any[];\r\n  pipelineInfo: any;\r\n  updatePipelineArg: (pipeArgName: string, pipeArgValue: any) => void;\r\n};\r\n\r\ntype InfoDrawerState = {\r\n  title: string;\r\n  projectName: string;\r\n  editMode: boolean;\r\n  flowDiagramMode: string;\r\n  statusBoxMode: boolean;\r\n  selectedActionsTab: string;\r\n  pipelineInfo: any;\r\n};\r\n\r\nclass InfoDrawer extends Component<InfoDrawerProps, InfoDrawerState> {\r\n  state = {\r\n    title: '',\r\n    editMode: false,\r\n    projectName: '',\r\n    flowDiagramMode: '',\r\n    statusBoxMode: false,\r\n    selectedActionsTab: 'actions',\r\n    pipelineInfo: {}\r\n  };\r\n  componentDidMount() {\r\n    //console.log(\"InfoDrawer: props: \");\r\n    //console.log(this.props);\r\n    this.setState({\r\n      flowDiagramMode: this.props.flowDiagramMode,\r\n      pipelineInfo: this.props.pipelineInfo\r\n    });\r\n  }\r\n  toggleEditMode() {\r\n    if (!this.state.editMode) {\r\n      this.setState({\r\n        editMode: true,\r\n        title: this.props.title,\r\n        projectName: this.props.projectName\r\n      });\r\n    } else {\r\n      this.setState({\r\n        editMode: false\r\n      });\r\n      this.props.onSaveTitle(this.state.title, this.state.projectName);\r\n    }\r\n  }\r\n  toggleStatusBoxMode() {\r\n    if (!this.state.statusBoxMode) {\r\n      this.setState({ statusBoxMode: true });\r\n    } else {\r\n      this.setState({ statusBoxMode: false });\r\n    }\r\n  }\r\n  timeConverter(UNIX_timestamp: any) {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec'\r\n    ];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    var sec = a.getSeconds();\r\n    var time =\r\n      date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\r\n    return time;\r\n  }\r\n\r\n  getResponse() {\r\n    /*if (this.props.response) {\r\n      return <div className=\"success\">Success</div>;\r\n    }*/\r\n    //console.log(this.props.pipelineLogs);\r\n    //console.log(\"response: \" + this.props.response);\r\n    //console.log(\"pipelineRunning in info-drawer: \" + this.props.pipelineRunning);\r\n\r\n    var pipelineLogArray = this.props.pipelineLogs;\r\n    var keys = Object.keys(pipelineLogArray);\r\n    if (keys.length === 0) {\r\n      return;\r\n    }\r\n    return keys.map((key: any) => {\r\n      var pipelinelog: any = pipelineLogArray[key];\r\n      var logTimestamp = this.timeConverter(pipelinelog.timestamp);\r\n      return (\r\n        pipelinelog.status && (\r\n          <div\r\n            key={key}\r\n            className={\r\n              pipelinelog.status === 'SUCCESS'\r\n                ? 'status-row fade-in success'\r\n                : 'status-row fade-in failed'\r\n            }\r\n          >\r\n            <div className=\"status-icon\">\r\n              {pipelinelog.status === 'SUCCESS' ? (\r\n                <CheckIcon fontSize=\"small\" />\r\n              ) : (\r\n                  <PriorityHighIcon fontSize=\"small\" />\r\n                )}\r\n            </div>\r\n            <div className=\"status-data\">\r\n              <div className=\"status-timestamp clip-txt\">{logTimestamp}</div>\r\n              <div className=\"status-user clip-txt\">{pipelinelog.user}</div>\r\n              <div className=\"status-run_type clip-txt\">\r\n                {pipelinelog.run_type}\r\n              </div>\r\n              <div className=\"status-message clip-txt\">\r\n                {pipelinelog.message}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  onChangeProjectName(e: any) {\r\n    this.setState({\r\n      projectName: e.target.value\r\n    });\r\n  }\r\n  onChangeTitle(e: any) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n  toggleFlowDiagramMode(mode: string) {\r\n    this.setState({\r\n      flowDiagramMode: mode\r\n    });\r\n    this.props.onFlowDiagramModeChanged(mode);\r\n  }\r\n  handleActionsTabClick(actionTabSelected: string) {\r\n    this.setState({ selectedActionsTab: actionTabSelected })\r\n  }\r\n  render() {\r\n    const disableButtons =\r\n      this.state.flowDiagramMode === 'interactive' ||\r\n      this.props.modeChangePending ||\r\n      this.props.pipelineRunning;\r\n\r\n    var pipeline: any;\r\n    var data_format = \"\";\r\n    if (this.state.pipelineInfo !== \"\") {\r\n      pipeline = this.state.pipelineInfo;\r\n      if (pipeline.definition) {\r\n        if (pipeline.definition.arguments) {\r\n          //console.log(\"arguments ready\");\r\n          //console.log(pipeline[\"definition\"][\"arguments\"]);\r\n          if (pipeline.definition.arguments.data_type_cast_rule && data_format === \"\") {\r\n            data_format = pipeline.definition.arguments.data_type_cast_rule;\r\n            //console.log(\"data_format: \" + data_format);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n          <div className=\"info-drawer-root\">\r\n            <div className=\"info-drawer-section\">\r\n              <div className=\"info-drawer-title\">\r\n                <span className=\"title\">Info</span>\r\n                <IconButton\r\n                  onClick={() => this.toggleEditMode()}\r\n                  size=\"small\"\r\n                  disabled={disableButtons}\r\n                >\r\n                  {this.state.editMode ? (\r\n                    <SaveIcon fontSize=\"small\" />\r\n                  ) : (\r\n                      <EditIcon fontSize=\"small\" />\r\n                    )}\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"info-drawer-title-group\">\r\n                <div className=\"info-drawer-title-title\">Flow name:</div>\r\n                <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                  {!this.state.editMode && <span>{this.props.title}</span>}\r\n                  {this.state.editMode && (\r\n                    <Input\r\n                      value={this.state.title}\r\n                      onChange={e => this.onChangeTitle(e)}\r\n                      inputProps={{\r\n                        maxLength: 40\r\n                      }}\r\n                    ></Input>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"info-drawer-title-group\">\r\n                <div className=\"info-drawer-title-title\">Project name:</div>\r\n                <div className=\"info-drawer-title-subtitle clip-txt\">\r\n                  {!this.state.editMode && (\r\n                    <span>{this.props.projectName}</span>\r\n                  )}\r\n                  {this.state.editMode && (\r\n                    <Input\r\n                      value={this.state.projectName}\r\n                      onChange={e => this.onChangeProjectName(e)}\r\n                      inputProps={{\r\n                        maxLength: 40\r\n                      }}\r\n                    ></Input>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"info-drawer-section\">\r\n              {/* <div className={\"info-drawer-title d-inline-block\"}>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  onClick={() => this.handleActionsTabClick(\"actions\")}\r\n                  className={this.state.selectedActionsTab !== \"actions\" ? \"act-tab in-active\" : \"act-tab\"}\r\n                >Actions</Typography>\r\n              </div>\r\n              <div className=\"info-drawer-title d-inline-block ml-7\">\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  className={this.state.selectedActionsTab !== \"arguments\" ? \"act-tab in-active\" : \"act-tab\"}\r\n                  onClick={() => this.handleActionsTabClick(\"arguments\")}\r\n                >Arguments</Typography>\r\n              </div> */}\r\n              <div className=\"info-drawer-title\">\r\n                <span className=\"title\">\r\n                  {this.state.selectedActionsTab === \"actions\" && (\r\n                      <span>Actions</span>\r\n                  )}\r\n                  {this.state.selectedActionsTab === \"arguments\" && (\r\n                      <span>Arguments</span>\r\n                  )}\r\n                </span>\r\n                <ActionsMenu\r\n                  onActions={() => {\r\n                    this.setState({ selectedActionsTab: 'actions' });\r\n                  }}\r\n                  onArguments={() => {\r\n                    this.setState({ selectedActionsTab: 'arguments' });\r\n                  }}\r\n                />\r\n              </div>\r\n              {this.state.selectedActionsTab === \"actions\" && (\r\n                <div className=\"info-drawer-button-group\">\r\n                  <IkiButton\r\n                    _variant='contained'\r\n                    _color='primary'\r\n                    _label=\"Run Flow\"\r\n                    _type='button'\r\n                    _align='left'\r\n                    _fullWidth={true}\r\n                    _disabled={disableButtons}\r\n                    _loading={this.props.pipelineRunning}\r\n                    _startIcon={\r\n                      <PlayArrowIcon />\r\n                    }\r\n                    _onClick={() => this.props.onRun()}\r\n                  />\r\n                  <IkiButton\r\n                    _variant='contained'\r\n                    _color='primary'\r\n                    _label=\"Schedule Flow\"\r\n                    _type='button'\r\n                    _align='left'\r\n                    _fullWidth={true}\r\n                    _disabled={disableButtons}\r\n                    _loading={false}\r\n                    _startIcon={\r\n                      <ScheduleIcon />\r\n                    }\r\n                    _onClick={() => this.props.onSchedule()}\r\n                  />\r\n                </div>\r\n              )}\r\n              {this.state.selectedActionsTab === \"arguments\" && (\r\n                Object.keys(this.props.pipelineSpecs).length > 0 ? (\r\n                  this.props.pipelineSpecs[0].name === \"data_type_cast_rule\" && (\r\n                    <div className=\"mt-10\">\r\n                      <div className=\"form-input mt-10\">\r\n                        <FormControl\r\n                          required={this.props.pipelineSpecs[0].is_required}\r\n                          //error={pipelineSpecs[0].error}\r\n                          className=\"select-control\"\r\n                          margin=\"normal\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                        >\r\n                          <InputLabel htmlFor={this.props.pipelineSpecs[0].name} shrink={true}>\r\n                            {getFriendlyLabel(this.props.pipelineSpecs[0].name)}\r\n                          </InputLabel>\r\n                          <Select\r\n                            value={data_format ? data_format : ''}\r\n                            variant=\"outlined\"\r\n                            displayEmpty\r\n                            onChange={(event: any) => {\r\n                              //this.onUpdatedNestedComponent(event, parentKey, key, index);\r\n                              this.props.updatePipelineArg(\"data_type_cast_rule\", event.target.value);\r\n                              var pipeline = this.state.pipelineInfo;\r\n                              // eslint-disable-next-line\r\n                              pipeline[\"definition\"][\"arguments\"] = { [\"data_type_cast_rule\"]: event.target.value };\r\n                              //console.log(\"data_type_cast_rule onChange: \");\r\n                              //console.log(pipeline);\r\n                              this.setState({\r\n                                ...this.state,\r\n                                pipelineInfo: pipeline\r\n                              });\r\n                            }}\r\n                            inputProps={{\r\n                              name: this.props.pipelineSpecs[0].name,\r\n                              id: this.props.pipelineSpecs[0].name\r\n                            }}\r\n                          >\r\n                            <MenuItem value=\"\" disabled>Select</MenuItem>\r\n                            {this.props.pipelineSpecs[0].options.map((attr: any, index: number) => {\r\n                              if (this.props.pipelineSpecs[0].name === 'file_type') {\r\n                                var cleanedAttr: any = attr;\r\n                              } else {\r\n                                // eslint-disable-next-line\r\n                                var cleanedAttr: any = getFriendlyLabel(attr);\r\n                              }\r\n                              return (\r\n                                <MenuItem value={attr} key={index}>\r\n                                  {cleanedAttr}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                    <div className=\"mt-10 secondary\">No arguments</div>\r\n                  )\r\n              )}\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.statusBoxMode\r\n                  ? 'info-drawer-section status-section is-open'\r\n                  : 'info-drawer-section status-section'\r\n              }\r\n            >\r\n              <div className=\"info-drawer-title\">\r\n                <span className=\"title\">Status</span>\r\n                <IconButton\r\n                  onClick={() => this.toggleStatusBoxMode()}\r\n                  size=\"small\"\r\n                >\r\n                  {this.state.statusBoxMode ? (\r\n                    <MinimizeIcon fontSize=\"small\" />\r\n                  ) : (\r\n                      <AspectRatioIcon fontSize=\"small\" />\r\n                    )}\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"status-holder\">\r\n                {this.getResponse()}\r\n              </div>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoDrawer;\r\n","class Command {\r\n  _execute: Function;\r\n  _undo: Function;\r\n  _executedValue: any;\r\n  _undoValue: any;\r\n  constructor(execute: Function, undo: Function) {\r\n    this._execute = execute;\r\n    this._undo = undo;\r\n  }\r\n\r\n  execute() {\r\n    this._executedValue = this._execute(this._undoValue);\r\n    console.log(this._undoValue);\r\n  }\r\n\r\n  undo() {\r\n    console.log(this._executedValue);\r\n    this._undoValue = this._undo(this._executedValue);\r\n  }\r\n}\r\n\r\nexport default Command;\r\n","import * as React from 'react';\r\nimport {\r\n  DefaultLinkModel,\r\n  DefaultLinkFactory\r\n} from '@projectstorm/react-diagrams';\r\nimport { Fab, Tooltip } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\n//import { func } from 'prop-types';\r\n\r\nimport './link.scss';\r\n// eslint-disable-next-line\r\nimport classes from '*.module.css';\r\n\r\nexport class CustomLinkModel extends DefaultLinkModel {\r\n  listenerRef: any;\r\n  added: boolean = false;\r\n  isConnectedToANode:boolean = false;\r\n  buttonsState:boolean = false;\r\n  handleButtonsStateEnabled: () => void;\r\n  handleButtonsStateDisabled: () => void;\r\n  constructor() {\r\n    super({\r\n      type: 'custom-link',\r\n      width: 4\r\n    });\r\n    this.handleButtonsStateEnabled = () => {\r\n      this.buttonsState = true;\r\n      //console.log(\"handleButtonsStateEnabled!\");\r\n    }\r\n    this.handleButtonsStateDisabled = () => {\r\n      this.buttonsState = false;\r\n      //console.log(\"handleButtonsStateDisabled!\");\r\n    }\r\n  }\r\n}\r\n\r\ntype CustomLinkState = {\r\n  hover: boolean;\r\n};\r\n\r\nexport class CustomLinkSegment extends React.Component<\r\n  {\r\n    model: CustomLinkModel;\r\n    path: string;\r\n  },\r\n  CustomLinkState\r\n> {\r\n  state: CustomLinkState = {\r\n    hover: false\r\n  };\r\n  path: SVGPathElement | null = null;\r\n  pathContainer: any;\r\n  percent: number = 50;\r\n  arrow: SVGPolygonElement | null = null;\r\n  buttonGroup: any = null;\r\n  mounted: boolean = false;\r\n  eventsAdded: boolean = false;\r\n  radtodeg: number = 180 / Math.PI;\r\n  callback: () => any = () => {};\r\n  /* constructor(props: any) {\r\n    super(props);\r\n  } */\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    this.callback = () => {\r\n      if (!this.path || !this.arrow) {\r\n        return;\r\n      }\r\n\r\n      //this.percent += 2;\r\n      // if (this.percent > 100) {\r\n      //   this.percent = 2;\r\n      // }\r\n\r\n      let point = this.path.getPointAtLength(\r\n        this.path.getTotalLength() * (this.percent / 100.0)\r\n      );\r\n\r\n      let point2 = this.path.getPointAtLength(\r\n        this.path.getTotalLength() * ((this.percent - 2) / 100.0)\r\n      );\r\n      if (!this.eventsAdded) {\r\n        this.eventsAdded = true;\r\n        this.pathContainer.addEventListener('mouseover', () => {\r\n          //if (!this.props.model.isLocked()) {\r\n          this.setState({ hover: true });\r\n          // }\r\n        });\r\n\r\n        this.pathContainer.addEventListener('mouseout', () => {\r\n          //if (!this.props.model.isLocked()) {\r\n          this.setState({ hover: false });\r\n          //}\r\n        });\r\n      }\r\n\r\n      var dx = point.x - point2.x;\r\n      var dy = point.y - point2.y;\r\n      var angle = 90 + Math.atan2(dy, dx) * this.radtodeg;\r\n\r\n      this.arrow.setAttribute(\r\n        'transform',\r\n        'translate(' + point.x + ' ' + point.y + ') rotate(' + angle + ')'\r\n      );\r\n      var px = point.x - 50;\r\n      var py = point.y + 10;\r\n      this.buttonGroup.style.transform =\r\n        'translate(' + px + 'px, ' + py + 'px)';\r\n\r\n      this.buttonGroup.style.pointerEvents = 'all';\r\n\r\n      if (this.mounted) {\r\n        requestAnimationFrame(this.callback);\r\n      }\r\n    };\r\n    requestAnimationFrame(this.callback);\r\n  }\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n  handlePeekClick(e: any) {\r\n    this.props.model.handleButtonsStateEnabled();\r\n    this.props.model.fireEvent({ model: this.props.model }, 'peek');\r\n  }\r\n  handlePreviewClick(e: any) {\r\n    this.props.model.fireEvent({ model: this.props.model }, 'browseLink');\r\n  }\r\n  handleEditClick() {\r\n    this.props.model.fireEvent({ model: this.props.model }, 'editLink');\r\n  }\r\n  handleDeleteClick() {\r\n    this.props.model.fireEvent({ model: this.props.model }, 'deleteLink');\r\n  }\r\n  render() {\r\n    //console.log(\"arrow props: \");\r\n    //console.log(this.props);\r\n    var hitArea = this.props.model.getOptions().width || 0;\r\n    if (this.props.model.getOptions().width !== undefined) {\r\n      hitArea += 60;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <g\r\n          className=\"custom-link\"\r\n          ref={ref => {\r\n            this.pathContainer = ref;\r\n          }}\r\n        >\r\n          <path\r\n            fill=\"none\"\r\n            ref={ref => {\r\n              this.path = ref;\r\n            }}\r\n            strokeWidth={this.props.model.getOptions().width}\r\n            d={this.props.path}\r\n            className={'link-path'}\r\n          />\r\n          <path\r\n            fill=\"none\"\r\n            ref={ref => {\r\n              this.path = ref;\r\n            }}\r\n            strokeWidth={this.props.model.getOptions().width}\r\n            d={this.props.path}\r\n            className={\r\n              this.state.hover\r\n                ? 'link-path pulse-path hovered'\r\n                : 'link-path pulse-path'\r\n            }\r\n          />\r\n          <path\r\n            fill=\"none\"\r\n            ref={ref => {\r\n              this.path = ref;\r\n            }}\r\n            strokeWidth={hitArea}\r\n            stroke=\"rgba(0,0,0,0)\"\r\n            className=\"link-path-hitarea\"\r\n            d={this.props.path}\r\n          />\r\n          <polygon\r\n            ref={ref => {\r\n              this.arrow = ref;\r\n            }}\r\n            points=\"0,-10 -10,10 10,10\"\r\n            className=\"link-arrow\"\r\n          />\r\n          <foreignObject\r\n            className=\"link-button-group-container\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <div\r\n              ref={ref => {\r\n                this.buttonGroup = ref;\r\n              }}\r\n              className={\r\n                !this.props.model.isLocked() && this.state.hover\r\n                  ? 'link-button-group show'\r\n                  : 'link-button-group hide'\r\n              }\r\n            >\r\n              <Tooltip \r\n                arrow={true}\r\n                title=\"Peek\" \r\n                placement=\"right\" \r\n                className=\"default-tooltip\"\r\n                classes={{\r\n                  tooltip: \"default-tooltip\",\r\n                  popper: \"default-popper\"\r\n                }}\r\n              >\r\n                <Fab\r\n                  color=\"primary\"\r\n                  aria-label=\"peek\"\r\n                  size=\"small\"\r\n                  onClick={this.handlePeekClick.bind(this)}\r\n                  className=\"peek-arrow\"\r\n                  disabled={this.props.model.buttonsState}\r\n                >\r\n                  <Visibility />\r\n                </Fab>\r\n              </Tooltip>\r\n              <Tooltip \r\n                arrow={true}\r\n                title=\"Preview\" \r\n                placement=\"right\" \r\n                className=\"default-tooltip\"\r\n                classes={{\r\n                  tooltip: \"default-tooltip\",\r\n                  popper: \"default-popper\"\r\n                }}\r\n              >\r\n                <Fab\r\n                  color=\"primary\"\r\n                  aria-label=\"visualize\"\r\n                  size=\"small\"\r\n                  onClick={this.handlePreviewClick.bind(this)}\r\n                  disabled={this.props.model.buttonsState}\r\n                >\r\n                  <DetailsIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n              <Tooltip \r\n                arrow={true}\r\n                title=\"Edit\" \r\n                placement=\"right\" \r\n                className=\"default-tooltip\"\r\n                classes={{\r\n                  tooltip: \"default-tooltip\",\r\n                  popper: \"default-popper\"\r\n                }}\r\n              >\r\n                <Fab\r\n                  color=\"primary\"\r\n                  aria-label=\"edit\"\r\n                  size=\"small\"\r\n                  onClick={this.handleEditClick.bind(this)}\r\n                  disabled={this.props.model.buttonsState}\r\n                >\r\n                  <EditIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n              <Tooltip \r\n                arrow={true}\r\n                title=\"Delete\" \r\n                placement=\"right\" \r\n                className=\"default-tooltip\"\r\n                classes={{\r\n                  tooltip: \"default-tooltip\",\r\n                  popper: \"default-popper\"\r\n                }}\r\n              >\r\n                <Fab\r\n                  color=\"primary\"\r\n                  aria-label=\"delete\"\r\n                  size=\"small\"\r\n                  onClick={this.handleDeleteClick.bind(this)}\r\n                  disabled={this.props.model.buttonsState}\r\n                >\r\n                  <DeleteIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n            </div>\r\n          </foreignObject>\r\n        </g>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport class CustomLinkFactory extends DefaultLinkFactory {\r\n  constructor() {\r\n    super('custom-link');\r\n  }\r\n  generateModel(): CustomLinkModel {\r\n    return new CustomLinkModel();\r\n  }\r\n  generateLinkSegment(model: CustomLinkModel, selected: boolean, path: string) {\r\n    return (\r\n      <g>\r\n        <CustomLinkSegment model={model} path={path} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n","import { DefaultPortModel } from '@projectstorm/react-diagrams';\r\nimport { CustomLinkModel } from '../link';\r\n\r\nexport class CustomPortModel extends DefaultPortModel {\r\n  createLinkModel(): CustomLinkModel {\r\n    return new CustomLinkModel();\r\n  }\r\n}\r\n","import { NodeModel } from '@projectstorm/react-diagrams';\r\n\r\nimport {\r\n  BaseModelOptions,\r\n  DeserializeEvent\r\n} from '@projectstorm/react-canvas-core';\r\nimport { CustomPortModel } from './customportmodel';\r\n\r\nexport interface CustomNodeModelOptions extends BaseModelOptions {\r\n  color: string;\r\n  name: string;\r\n  facet_id: string;\r\n  facet_type: string;\r\n  facet_group: string;\r\n  chain_group: string;\r\n  custom_facet_type: string;\r\n  custom_facet_group: string;\r\n  custom_chain_group: string;\r\n}\r\n\r\nexport class CustomNodeModel extends NodeModel {\r\n  color: string;\r\n  name: string;\r\n  facet_id: string;\r\n  facet_type: string;\r\n  facet_group: string;\r\n  chain_group: string;\r\n  custom_facet_type: string;\r\n  custom_facet_group: string;\r\n  custom_chain_group: string;\r\n  linksRef: any[] = [];\r\n  valid: boolean;\r\n  errorMessages: string[];\r\n\r\n  constructor(\r\n    options: CustomNodeModelOptions = {\r\n      color: 'red',\r\n      name: 'Model',\r\n      facet_id: '0',\r\n      facet_type: 'facet type',\r\n      facet_group: 'facet group',\r\n      chain_group: 'chain group',\r\n      custom_facet_type: 'custom facet type',\r\n      custom_facet_group: 'custom facet group',\r\n      custom_chain_group: 'custom facet group',\r\n    }\r\n  ) {\r\n    super({\r\n      ...options,\r\n      type: 'custom-node'\r\n    });\r\n    //console.log(\"customnodemodel: \");\r\n    //console.log(options);\r\n    this.color = options.color;\r\n    this.name = options.name;\r\n    this.valid = true;\r\n    this.errorMessages = [];\r\n    this.facet_type = options.facet_type;\r\n    this.facet_group = options.facet_group;\r\n    this.facet_id = options.facet_id;\r\n    this.chain_group = options.chain_group;\r\n    this.custom_facet_type = options.custom_facet_type;\r\n    this.custom_facet_group = options.custom_facet_group;\r\n    this.custom_chain_group = options.custom_chain_group;\r\n\r\n    if (this.chain_group !== 'INPUT') {\r\n      this.addPort(\r\n        new CustomPortModel({\r\n          in: true,\r\n          name: 'in'\r\n        })\r\n      );\r\n    }\r\n    if (this.chain_group !== 'OUTPUT') {\r\n      this.addPort(\r\n        new CustomPortModel({\r\n          in: false,\r\n          name: 'out'\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      color: this.color\r\n    };\r\n  }\r\n\r\n  deserialize(event: DeserializeEvent): void {\r\n    super.deserialize(event);\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  DiagramEngine,\r\n  PortWidget,\r\n  PortModel\r\n} from '@projectstorm/react-diagrams';\r\nimport { CustomNodeModel } from './customnodemodel';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { Fab, Card, Tooltip } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport { getFriendlyLabel } from '../../../util';\r\n//import './node.scss';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Node.module.scss';\r\nlet cx = classNames.bind(styles);\r\n\r\nexport interface CustomNodeWidgetProps {\r\n  node: CustomNodeModel;\r\n  engine: DiagramEngine;\r\n}\r\n\r\nexport interface CustomNodeWidgetState {\r\n  valid: boolean;\r\n  mouseOver: boolean;\r\n  updatedNodeName: string;\r\n}\r\n\r\nclass CustomNodeWidget extends React.Component<\r\n  CustomNodeWidgetProps,\r\n  CustomNodeWidgetState\r\n> {\r\n  listenerRef: any;\r\n  constructor(props: CustomNodeWidgetProps) {\r\n    super(props);\r\n    this.state = {\r\n      valid: props.node.valid,\r\n      mouseOver: false,\r\n      updatedNodeName: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"CustomNodeWidget this.props.node: \");\r\n    //console.log(this.props.node);\r\n    this.listenerRef = this.props.node.registerListener({\r\n      validatedNode: this.handleNodeValidate.bind(this),\r\n      updatedFacetName: this.handleNodeNameUpdate.bind(this)\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.node.deregisterListener(this.listenerRef);\r\n  }\r\n\r\n  handleNodeValidate(e: any) {\r\n    this.setState({ valid: this.props.node.valid });\r\n  }\r\n\r\n  handleNodeNameUpdate(e: any) {\r\n    //console.log(\"this.props.node.name: \" + this.props.node.name);\r\n    this.setState({ updatedNodeName: this.props.node.name });\r\n  }\r\n\r\n  handlePreviewClick(e: any) {\r\n    this.props.node.fireEvent({ node: this.props.node }, 'visualize');\r\n  }\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.node.fireEvent({ node: this.props.node }, 'editNode');\r\n  }\r\n\r\n  handleDeleteClick(e: any) {\r\n    this.props.node.fireEvent({ node: this.props.node }, 'deleteNode');\r\n  }\r\n  handleMouseOver() {\r\n    if (this.props.node.facet_type === 'PYTHON_SCRIPT') {\r\n      this.setState({\r\n        mouseOver: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleMouseOut() {\r\n    if (this.props.node.facet_type === 'PYTHON_SCRIPT') {\r\n      this.setState({\r\n        mouseOver: false\r\n      });\r\n    }\r\n  }\r\n\r\n  getErrorMessage() {\r\n    return (\r\n      <div>\r\n        <div className={styles.errorMessageTitle}>\r\n          Please fix the following errors!\r\n        </div>\r\n        <ul className={styles.errorList}>\r\n          {this.props.node.errorMessages.map((msg: string, index: number) => {\r\n            return (\r\n              <li className={styles.errorMessage} key={`error-${index}`}>\r\n                {msg}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getErrorMessages() {\r\n    if (!this.state.valid) {\r\n      return (\r\n        <div>\r\n          <Tooltip\r\n            arrow={true}\r\n            interactive\r\n            title={this.getErrorMessage()}\r\n            leaveDelay={200}\r\n            placement=\"right\"\r\n            className=\"tooltip-holder\"\r\n          >\r\n            <ErrorIcon className={styles.nodeErrorIcon} />\r\n          </Tooltip>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var className = cx({\r\n      customNode: true,\r\n      'error': !this.state.valid\r\n    });\r\n\r\n    var cardClassName = cx({\r\n      'jr-card': true,\r\n      'jr-card-widget': true,\r\n      'customNodeCard': true,\r\n      'error': !this.state.valid,\r\n      'hovered': this.state.mouseOver\r\n    });\r\n\r\n    //console.log(\"this.props: \");\r\n    //console.log(this.props);\r\n    return (\r\n      <div className={className}>\r\n        {this.getErrorMessages()}\r\n        <div className={styles.buttonGroup}>\r\n          {(this.props.node.facet_type === 'PYTHON_SCRIPT' || this.props.node.custom_facet_type === 'API') &&\r\n            <Tooltip \r\n              arrow={true}\r\n              title=\"Preview\" \r\n              placement=\"top\" \r\n              className=\"default-tooltip\"\r\n              classes={{\r\n                tooltip: \"default-tooltip\",\r\n                popper: \"default-popper\"\r\n              }}\r\n            >\r\n              <Fab\r\n                color=\"primary\"\r\n                aria-label=\"visualize\"\r\n                size=\"small\"\r\n                onClick={this.handlePreviewClick.bind(this)}\r\n                //style={{ backgroundColor: \"#FFF\", border: \"1px solid #3F51B5\" }}\r\n              >\r\n                <DetailsIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n          }\r\n          <Tooltip \r\n              arrow={true}\r\n              title=\"Edit\" \r\n              placement=\"top\" \r\n              className=\"default-tooltip\"\r\n              classes={{\r\n                tooltip: \"default-tooltip\",\r\n                popper: \"default-popper\"\r\n              }}\r\n          >\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"edit\"\r\n              size=\"small\"\r\n              onClick={this.handleEditClick.bind(this)}\r\n            >\r\n              <EditIcon />\r\n            </Fab>\r\n          </Tooltip>\r\n          <Tooltip \r\n              arrow={true}\r\n              title=\"Delete\" \r\n              placement=\"top\" \r\n              className=\"default-tooltip\"\r\n              classes={{\r\n                tooltip: \"default-tooltip\",\r\n                popper: \"default-popper\"\r\n              }}\r\n          >\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"delete\"\r\n              size=\"small\"\r\n              onClick={this.handleDeleteClick.bind(this)}\r\n            >\r\n              <DeleteIcon />\r\n            </Fab>\r\n          </Tooltip>\r\n        </div>\r\n        <Card\r\n          onMouseEnter={() => {\r\n            this.handleMouseOver();\r\n          }}\r\n          onMouseLeave={() => {\r\n            this.handleMouseOut();\r\n          }}\r\n          className={cardClassName}\r\n        >\r\n          {this.props.node.name !== '' && (\r\n            <div className={styles.facetNameHolder}>\r\n              <div className={styles.facetName}>{this.props.node.name}</div>\r\n            </div>\r\n          )}\r\n          {this.props.node.chain_group !== 'INPUT' && (\r\n            <PortWidget\r\n              className=\"in\"\r\n              engine={this.props.engine}\r\n              port={this.props.node.getPort('in') as PortModel}\r\n            >\r\n              <div className={styles.circlePort} />\r\n            </PortWidget>\r\n          )}\r\n          {this.props.node.chain_group !== 'OUTPUT' && (\r\n            <PortWidget\r\n              className=\"out\"\r\n              engine={this.props.engine}\r\n              port={this.props.node.getPort('out') as PortModel}\r\n            >\r\n              <div className={styles.circlePort} />\r\n            </PortWidget>\r\n          )}\r\n          <div className={styles.customNodeName}>\r\n            <div className={styles.customNodeHeader}>\r\n              <div className={styles.customNodeChainGroup}>\r\n                {getFriendlyLabel(this.props.node.chain_group)}\r\n              </div>\r\n              <div>\r\n                {this.props.node.custom_facet_type === 'API' ? (\r\n                  'Connector'\r\n                ):(\r\n                  getFriendlyLabel(this.props.node.facet_group)\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className={styles.customNodeTitle}>\r\n              {this.props.node.custom_facet_type === 'API' ? (\r\n                this.props.node.custom_facet_type.toUpperCase()\r\n               ):(\r\n                 getFriendlyLabel(this.props.node.facet_type)\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomNodeWidget;\r\n","import * as React from 'react';\r\n\r\nimport { CustomNodeModel } from './customnodemodel';\r\nimport CustomNodeWidget from './customnodewidget';\r\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams';\r\n\r\nexport class CustomNodeFactory extends AbstractReactFactory<\r\n  CustomNodeModel,\r\n  DiagramEngine\r\n> {\r\n  constructor() {\r\n    super('custom-node');\r\n  }\r\n  generateModel(_initialConfig: any) {\r\n    return new CustomNodeModel();\r\n  }\r\n\r\n  generateReactWidget(event: any): JSX.Element {\r\n    return (\r\n      <CustomNodeWidget\r\n        engine={this.engine as DiagramEngine}\r\n        node={event.model}\r\n      ></CustomNodeWidget>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { \r\n  Snackbar as MuiSnackbar,\r\n  IconButton,\r\n  CircularProgress \r\n} from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport './snackbar.scss';\r\n\r\nexport default class SnackbarMsg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbarOpenState: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    /*const snackbarOpen = this.props.snackbarOpen;\r\n    this.setState({ snackbarOpenState: snackbarOpen });*/\r\n  }\r\n\r\n  setSnackbarIcon = () => {\r\n    if(this.props.snackbarType === 'success'){\r\n        return <CheckCircleIcon className=\"state-icon\" />\r\n    }else if(this.props.snackbarType === 'error'){\r\n        return <ErrorIcon className=\"state-icon\" />\r\n    }else if(this.props.snackbarType === 'warning'){\r\n        return <WarningIcon className=\"state-icon\" />\r\n    }else if(this.props.snackbarType === 'processing'){\r\n        /* return (\r\n          <Fragment>\r\n            <span className=\"btn-spinner alternate\"></span>\r\n          </Fragment>\r\n        ); */\r\n        return <CircularProgress size={24} className=\"state-icon\" />\r\n    }else{\r\n        return <HelpIcon className=\"state-icon\" />\r\n    }\r\n  }\r\n\r\n  handleOnBlur(){\r\n    this.setState({ snackbarOpenState: true });\r\n  }\r\n\r\n  render() {\r\n    //const snackbarOpen = this.state.snackbarOpenState;\r\n    const snackbarOpen = this.props.snackbarOpen;\r\n    const snackbarType = this.props.snackbarType;\r\n    const snackbarMsg = this.props.snackbarMsg;\r\n    let snackbarDuration = 6000;\r\n    //console.log(\"snack: \" + snackbarOpen);\r\n    if(this.props.snackbarDuration === 'infinite'){\r\n      snackbarDuration = 99999;\r\n      return (\r\n        <MuiSnackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            open={snackbarOpen}\r\n            autoHideDuration={snackbarDuration}\r\n            className={\"snackbar \" + snackbarType}\r\n            message={\r\n              <Fragment>\r\n                {this.setSnackbarIcon()}\r\n                <span>{snackbarMsg}</span>\r\n              </Fragment>\r\n            }\r\n            onBlur={this.handleOnBlur}\r\n          />\r\n      );\r\n    }else{\r\n      return (\r\n        <MuiSnackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            open={snackbarOpen}\r\n            onClose={this.props.onSnackbarClose}\r\n            autoHideDuration={6000}\r\n            className={\"snackbar \" + snackbarType}\r\n            message={\r\n              <Fragment>\r\n                {this.setSnackbarIcon()}\r\n                <span>{snackbarMsg}</span>\r\n              </Fragment>\r\n            }\r\n            action={[\r\n              <IconButton\r\n                key=\"close\"\r\n                aria-label=\"close\"\r\n                onClick={this.props.onSnackbarClose}\r\n                className=\"close-btn\"\r\n                size=\"small\"\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            ]}\r\n          />\r\n      );\r\n    }\r\n      \r\n  }\r\n}\r\n","//Wrapper function for promise so that it can be cancellable.\r\n\r\nexport const makeCancelable = promise => {\r\n  let hasCanceled_ = false;\r\n\r\n  const wrappedPromise = new Promise((resolve, reject) => {\r\n    promise.then(\r\n      val => (hasCanceled_ ? reject({ isCanceled: true }) : resolve(val)),\r\n      error => (hasCanceled_ ? reject({ isCanceled: true }) : reject(error))\r\n    );\r\n  });\r\n\r\n  return {\r\n    promise: wrappedPromise,\r\n    cancel() {\r\n      hasCanceled_ = true;\r\n    }\r\n  };\r\n};\r\n","import Command from './command';\r\n\r\nclass CommandManager {\r\n  stack: Array<Command> = [];\r\n  index: number = 0;\r\n\r\n  addCommand(command: Command) {\r\n    this.stack.length = this.index;\r\n    this.stack.push(command);\r\n    command.execute();\r\n    this.index++;\r\n  }\r\n\r\n  canPerformUndo() {\r\n    return this.index > 0;\r\n  }\r\n\r\n  canPerformRedo() {\r\n    return this.index < this.stack.length;\r\n  }\r\n\r\n  undo() {\r\n    if (this.canPerformUndo()) {\r\n      this.index--;\r\n      const command: Command = this.stack[this.index];\r\n      command.undo();\r\n    }\r\n  }\r\n\r\n  redo() {\r\n    if (this.canPerformRedo()) {\r\n      const command: Command = this.stack[this.index];\r\n      command.execute();\r\n      this.index++;\r\n    }\r\n  }\r\n\r\n  empty() {\r\n    this.stack = [];\r\n  }\r\n}\r\n\r\nexport default CommandManager;\r\n","import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst CustomScrollbars = props => (\r\n  <Scrollbars\r\n    {...props}\r\n    autoHide\r\n    renderTrackHorizontal={props => (\r\n      <div\r\n        {...props}\r\n        style={{ display: 'none' }}\r\n        className=\"track-horizontal\"\r\n      />\r\n    )}\r\n  />\r\n);\r\n\r\nexport default CustomScrollbars;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport IkiButton from '../../IkiFormElements/IkiButton';\r\n//import IkiDivider from '../../IkiLayout/IkiDivider';\r\n//import IkiButtonGroup from '../../IkiFormElements/IkiButtonGroup';\r\nimport IkiInput from '../../IkiFormElements/IkiInput';\r\nimport IkiDialog from '../../IkiDialog';\r\n//import ErrorIcon from '@material-ui/icons/Error';\r\nimport Viewer from 'react-viewer';\r\nimport * as EmailValidator from 'email-validator';\r\n\r\nexport default function SupportFeedbackDialog(props: any) {\r\n  const {\r\n    handleFeedbackDialogClose,\r\n    handleFeedbackDialogCancel,\r\n    openFeedbackDialog,\r\n    feedbackImgData,\r\n    onFeedbackDialogSubmit,\r\n    feedbackSubmitState,\r\n    handleDialogSubmitState\r\n  } = props;\r\n\r\n  const [shareTargetType, setShareTargetType] = React.useState('support');\r\n  const [supportTargetType, selectedSupportTargetType] = React.useState('is-selected');\r\n  const [userTargetType, selectedUserTargetType] = React.useState('');\r\n  const [targetUserEmailState, setTargetUserMailState] = React.useState(true);\r\n  const [targetUserEmail, setTargetUserMail] = React.useState('');\r\n  const [targetUserEmailError, setTargetUserMailError] = React.useState(false);\r\n  const [targetUserEmailErrorMsg, setTargetUserMailErrorMsg] = React.useState('');\r\n  const [screenshootPreview, setScreenshootPreview] = React.useState(false);\r\n  const [feedbackImageCheckbox, setFeedbackImageCheckbox] = React.useState(true);\r\n  const [feedbackMessage, setFeedbackMessage] = React.useState('');\r\n  const [feedbackMessageError, setFeedbackMessageError] = React.useState(false);\r\n\r\n  const handleFeedbackDialogShareButton = (e: any) => {\r\n    var emailIsValid = false;\r\n    var msgIsValid = false;\r\n    if(shareTargetType === 'user'){\r\n      if(targetUserEmail !== ''){\r\n        if(EmailValidator.validate(targetUserEmail) === true){\r\n          emailIsValid = true;\r\n          setTargetUserMailError(false);\r\n          setTargetUserMailErrorMsg('');\r\n        }else{\r\n          emailIsValid = false;\r\n          setTargetUserMailError(true);\r\n          setTargetUserMailErrorMsg('Invalid email');\r\n        }\r\n      }else{\r\n        emailIsValid = false;\r\n        setTargetUserMailError(true);\r\n        setTargetUserMailErrorMsg('Email is required');\r\n      }\r\n    }else if(shareTargetType === 'support'){\r\n      emailIsValid = true;\r\n      setTargetUserMailError(false);\r\n      setTargetUserMailErrorMsg('');\r\n    }\r\n\r\n    if(feedbackMessage !== ''){\r\n      msgIsValid = true;\r\n      setFeedbackMessageError(false);\r\n    }else{\r\n      msgIsValid = false;\r\n      setFeedbackMessageError(true);\r\n    }\r\n\r\n    //console.log(\"emailIsValid: \" + emailIsValid + \", msgIsValid: \" + msgIsValid + \", feedbackMessage: \" + feedbackMessage)\r\n\r\n    if(emailIsValid === true && msgIsValid === true){\r\n      handleDialogSubmitState(true);\r\n      onFeedbackDialogSubmit(targetUserEmail, feedbackMessage, feedbackImageCheckbox, shareTargetType);\r\n    }\r\n  };\r\n\r\n  const handleTargetUserEmailChange = (e: any) => {\r\n    setTargetUserMail(e.target.value);\r\n  };\r\n\r\n  const handleFeedbackMessage = (e: any) => {\r\n    setFeedbackMessage(e.target.value);\r\n  };\r\n\r\n  const handleTargetUserTypeChange = (e: any, targetUserType: any) => {\r\n    setShareTargetType(targetUserType);\r\n    if(targetUserType === 'support'){\r\n      selectedSupportTargetType('is-selected');\r\n      selectedUserTargetType('');\r\n      setTargetUserMailState(true);\r\n      setTargetUserMailError(false);\r\n      setTargetUserMailErrorMsg('');\r\n      setTargetUserMail('');\r\n    }else if(targetUserType === 'user'){\r\n      selectedSupportTargetType('');\r\n      selectedUserTargetType('is-selected');\r\n      setTargetUserMailState(false);\r\n    }\r\n    /*var feedbackImgData_full = feedbackImgData.match(/base64,(.+)$/);\r\n    var base64String = feedbackImgData_full[1];\r\n    console.log(\"mailtoData: \" + base64String);*/\r\n  };\r\n\r\n  const handleFeedbackImageCheckbox = (e: any) => {\r\n    setFeedbackImageCheckbox(e.target.checked);\r\n  };\r\n\r\n  const handleEnterDialog = () => {\r\n    setShareTargetType('support');\r\n    setTargetUserMailState(true);\r\n    setTargetUserMail('');\r\n    setTargetUserMailError(false);\r\n    setTargetUserMailErrorMsg('');\r\n    setFeedbackMessage('');\r\n    setFeedbackMessageError(false);\r\n  };\r\n\r\n  const handleExitDialog = () => {\r\n    setShareTargetType('support');\r\n    setTargetUserMailState(true);\r\n    setTargetUserMail('');\r\n    setTargetUserMailError(false);\r\n    setTargetUserMailErrorMsg('');\r\n    setFeedbackMessage('');\r\n    setFeedbackMessageError(false);\r\n    handleFeedbackDialogClose();\r\n  };\r\n\r\n  return (\r\n      <IkiDialog\r\n        _open={openFeedbackDialog}\r\n        _onEnter={handleEnterDialog}\r\n        _onClose={handleExitDialog}\r\n        _onExit={handleExitDialog}\r\n        _type='regular'\r\n        _icon={false}\r\n        _title='Send screenshot to ...'\r\n        _size='xs'\r\n        _content={\r\n          <>\r\n                <div className={\"custom-radio-holder \" + supportTargetType} onClick={(e) => handleTargetUserTypeChange(e, 'support')}>\r\n                  <div className=\"fake-radio-div\">\r\n                    {shareTargetType === 'support' ? (\r\n                      <div className=\"fake-radio is-selected\" onClick={(e) => handleTargetUserTypeChange(e, 'support')}></div>\r\n                    ) : (\r\n                      <div className=\"fake-radio\" onClick={(e) => handleTargetUserTypeChange(e, 'support')}></div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"radio-txt-holder\">\r\n                    <div className=\"radio-title\">Support</div>\r\n                    {/* <div className=\"radio-descr\">\r\n                      <div>Send feedback to our support team.</div>\r\n                      <div>We will respond to your email within 24 hours.</div>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n                <div className={\"custom-radio-holder \" + userTargetType} onClick={(e) => handleTargetUserTypeChange(e, 'user')}>\r\n                  <div className=\"fake-radio-div\">\r\n                    {shareTargetType === 'user' ? (\r\n                      <div className=\"fake-radio is-selected\" onClick={(e) => handleTargetUserTypeChange(e, 'user')}></div>\r\n                    ) : (\r\n                      <div className=\"fake-radio\" onClick={(e) => handleTargetUserTypeChange(e, 'user')}></div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"radio-txt-holder\">\r\n                    <div className=\"radio-title\">User</div>\r\n                    <div className=\"radio-descr\">\r\n                      {!targetUserEmailState && (\r\n                        <Box mt={1}>\r\n                          <IkiInput \r\n                            _disabled={targetUserEmailState}\r\n                            _label=\"User email\"\r\n                            _placeholder=\"Enter email of user ...\"\r\n                            _type='search'\r\n                            _autoComplete=\"new-password\"\r\n                            _value={targetUserEmail}\r\n                            _onChange={(e: any) => handleTargetUserEmailChange(e)}\r\n                            _characterCounter={50}\r\n                            _autoFocus={false}\r\n                            _fullWidth={true}\r\n                            _error={targetUserEmailErrorMsg}\r\n                          />\r\n                        </Box>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Box mt={4} mb={2}>\r\n                  <Box mt={4}>\r\n                    <IkiInput \r\n                      _label=\"Message\"\r\n                      _placeholder=\"Enter message...\"\r\n                      _type='search'\r\n                      _autoComplete=\"new-password\"\r\n                      _value={feedbackMessage}\r\n                      _onChange={(e: any) => handleFeedbackMessage(e)}\r\n                      _characterCounter={200}\r\n                      _autoFocus={false}\r\n                      _fullWidth={true}\r\n                      _error={feedbackMessageError ? 'Message is required' : ''}\r\n                      _multiline={true}\r\n                      _rows={4}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n                {feedbackImageCheckbox === true && \r\n                  <Box className=\"feedback-img-holder\">\r\n                    <img className=\"feedback-img\" src={feedbackImgData} alt=\"feedback dialog screenshot\" />\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"Preview Screenshot\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _loading={false}\r\n                      _onClick={() => { setScreenshootPreview(true); }}\r\n                    />\r\n                    <Viewer\r\n                      visible={screenshootPreview}\r\n                      onClose={() => { setScreenshootPreview(false); } }\r\n                      images={[{src: feedbackImgData, alt: 'feedback dialog screenshot'}]}\r\n                      className=\"img-viewer\"\r\n                      noFooter={true}\r\n                      drag={false}\r\n                    />\r\n                  </Box>\r\n                }\r\n                <Box mt={1}>\r\n                  <FormControlLabel\r\n                    className=\"feedback-img-cbx\"\r\n                    control={\r\n                      <Checkbox\r\n                        checked={feedbackImageCheckbox}\r\n                        onChange={handleFeedbackImageCheckbox}\r\n                        value=\"\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Send email with screenshot\"\r\n                  />\r\n                </Box>\r\n          </>\r\n        }\r\n        _actions={\r\n          <>\r\n              <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={handleFeedbackDialogCancel}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Send\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={feedbackSubmitState}\r\n                  _disabled={feedbackSubmitState}\r\n                  _onClick={handleFeedbackDialogShareButton}\r\n                />\r\n          </>\r\n        }\r\n      />\r\n  );\r\n}\r\n","import React, { Fragment, ReactNode } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Draggable from 'react-draggable';\r\nimport {\r\n    Popover,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    TextField\r\n  } from '@material-ui/core';\r\nimport IkiButton from '../../IkiFormElements/IkiButton';\r\n//import IkiInput from '../../IkiFormElements/IkiInput';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n//import PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport SupportFeedbackDialog from './feedback-dialog';\r\nimport domtoimage from 'dom-to-image';\r\nimport SnackbarMsg from '../../../components/SnackbarMsg';\r\nimport emailjs from 'emailjs-com';\r\n//var getElement = require('get-element')\r\n\r\nexport function SupportPopover(props: any) {\r\n  const {\r\n    setSupportPopoverAnchorEl,\r\n    anchorSupportPopover,\r\n    openSupportPopover,\r\n    loggedUserEmail\r\n  } = props;\r\n  //const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [addCommentStatus, setAddCommentStatus] = React.useState(false);\r\n\r\n  const [mouseX, setMouseX] = React.useState(0);\r\n  const [mouseY, setMouseY] = React.useState(0);\r\n\r\n  const [newComment, setNewComment] = React.useState('');\r\n  const [commentsArray, setCommentsArray] = React.useState([] as any);\r\n\r\n  const [mouseoverCommentBox, setCommentBoxMouseOver] = React.useState(false);\r\n\r\n  const [anchorElCommentActionBtn, setAnchorElCommentActionBtn] = React.useState<null | HTMLElement>(null);\r\n\r\n  const [selectedCommentBox, setSelectedCommentBox] = React.useState(null);\r\n  const [editCommentStatus, setEditCommentStatus] = React.useState(false);\r\n\r\n  const [updateEditComment, setUpdateEditComment] = React.useState('');\r\n\r\n  const [feedbackImg, setFeedbackImg] = React.useState('');\r\n  const [feedbackDialogState, setFeedbackDialogState] = React.useState(false);\r\n\r\n  const [commentTextareaErrorState, setCommentTextareaErrorState] = React.useState(false);\r\n  const [commentEditTextareaErrorState, setCommentEditTextareaErrorState] = React.useState(false);\r\n\r\n  const [snackbarIsOpen, setSnackbarOpen] = React.useState(false);\r\n  const [snackbarMessageIs, setSnackbarMessage] = React.useState('');\r\n  const [snackbarIsType, setSnackbarType] = React.useState('');\r\n\r\n  const [feedbackDialogSubmitState, setFeedbackDialogSubmitState] = React.useState(false);\r\n\r\n  const [hideSupportPopover, setHideSupportPopover] = React.useState(false);\r\n\r\n  const handleCloseSupportPopover = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    //console.log(\"ELEMENT: \" + e.currentTarget.id);\r\n    if(e.currentTarget.id === 'closeSupportPopoverBtn'){\r\n        setSupportPopoverAnchorEl(null);  \r\n        setCommentsArray([] as any);\r\n    }\r\n  };\r\n\r\n  const handleCloseSupportPopover2 = () => {\r\n    setSupportPopoverAnchorEl(null);  \r\n    setCommentsArray([] as any);\r\n  }\r\n\r\n  const handleCloseAddcommPopover = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    //console.log(\"ELEMENT: \" + e.currentTarget.id);\r\n    setAddCommentStatus(false);  \r\n  };\r\n\r\n  const id = openSupportPopover ? 'support-popover' : undefined;\r\n\r\n  const idAddComment = addCommentStatus ? 'addcomment-popover' : undefined;\r\n\r\n/*   const getXYcoordinates = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    //console.log(\"x: \" + event.nativeEvent.offsetX + \", y: \" + event.nativeEvent.offsetY)\r\n    setMouseX(event.nativeEvent.offsetX);\r\n    setMouseY(event.nativeEvent.offsetY);\r\n  } */\r\n\r\n  const popupNewComment = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    //console.log(\"x: \" + mouseX + \", y: \" + mouseY)\r\n    //console.log(\"clicked element: \" + event.currentTarget.className);\r\n    if(mouseoverCommentBox === false && editCommentStatus === false){\r\n        setMouseX(event.nativeEvent.offsetX);\r\n        setMouseY(event.nativeEvent.offsetY);\r\n        if(addCommentStatus === true){\r\n            setAddCommentStatus(false);\r\n        }else{\r\n            setAddCommentStatus(true);\r\n            setNewComment('');\r\n            setCommentTextareaErrorState(false);\r\n        }\r\n    }\r\n  }\r\n\r\n  const handleCommentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNewComment(e.target.value)\r\n  }\r\n\r\n  const handleAddCommentBtn = (e: React.MouseEvent<HTMLButtonElement>) => {\t\r\n    let date = new Date().getDate();\r\n    let hours = new Date().getHours();\r\n    let minutes = new Date().getMinutes();\r\n    let seconds = new Date().getSeconds();\r\n    let datetime = date + \"-\" + hours + \"-\" + minutes + \"-\" + seconds;\r\n    if(newComment !== ''){\r\n        setCommentsArray([\r\n            ...commentsArray,\r\n            {\r\n            id: datetime,\r\n            comment: newComment,\r\n            pTop: mouseY,\r\n            pLeft: mouseX\r\n            }\r\n        ]);\r\n        setNewComment('')\r\n        setAddCommentStatus(false);\r\n    }else{\r\n        setCommentTextareaErrorState(true)\r\n    }\r\n  }\r\n\r\n  const handleCloseCommentBtn = (e: React.MouseEvent<HTMLButtonElement>) => {\t\r\n    setAddCommentStatus(false);\r\n    setCommentTextareaErrorState(false)\r\n    setCommentEditTextareaErrorState(false)\r\n  }\r\n\r\n  const handleCommentBoxMouseOver = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setCommentBoxMouseOver(true);\r\n    //console.log(\"changed state: \" + mouseoverCommentBox);\r\n  }\r\n\r\n  const handleCommentBoxMouseOut = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setCommentBoxMouseOver(false);\r\n    //console.log(\"changed state: \" + mouseoverCommentBox);\r\n  }\r\n\r\n  const openCommentMenu = (event: React.MouseEvent<HTMLButtonElement>, selectedComment: any, selectedCommentVal: any) => {\t\r\n    setSelectedCommentBox(selectedComment);\r\n    setAnchorElCommentActionBtn(event.currentTarget);\r\n    setUpdateEditComment(selectedCommentVal);\r\n  }\r\n\r\n  const handleCloseCommentActionBtn = (e: React.MouseEvent<HTMLButtonElement>) => {\t\r\n    setUpdateEditComment('');\r\n    setAnchorElCommentActionBtn(null);\r\n  }\r\n\r\n  const handleEditComment = () => {\r\n    setEditCommentStatus(true);\r\n    setAnchorElCommentActionBtn(null);\r\n  }\r\n\r\n  const handleCancelEditComment = () => {\r\n    setEditCommentStatus(false);\r\n    setSelectedCommentBox(null);\r\n    setCommentEditTextareaErrorState(false)\r\n  }\r\n\r\n  const handleUpdateEditTextarea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setUpdateEditComment(e.target.value);\r\n  }\r\n\r\n  const handleConfirmEditComment = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if(updateEditComment !==''){\r\n        setEditCommentStatus(false);\r\n        setSelectedCommentBox(null);\r\n        let commentBoxIndex = selectedCommentBox as unknown as number;\r\n        commentsArray[commentBoxIndex] = {...commentsArray[commentBoxIndex], comment: updateEditComment};\r\n    }else{\r\n        setCommentEditTextareaErrorState(true)\r\n    }\r\n  }\r\n\r\n  const handleDeleteComment = () => {\r\n    let commentBoxIndex = selectedCommentBox as unknown as number;\r\n    commentsArray.splice(commentBoxIndex, 1);\r\n    setSelectedCommentBox(null);\r\n    setAnchorElCommentActionBtn(null);\r\n  }\r\n\r\n  const prepareSendFeedback = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSnackbarMessage('Taking screenshot...');\r\n    setSnackbarType('processing');\r\n    setSnackbarOpen(true);\r\n    setHideSupportPopover(true);\r\n    setTimeout(() => {\r\n        var a:any = document.getElementsByClassName('titlebar')[0];\r\n        a.remove()\r\n        domtoimage.toPng(document.body, { quality: 1.0 })\r\n            .then(function (dataUrl) {\r\n                document.body.appendChild(a)\r\n                var img = new Image();\r\n                img.src = dataUrl;\r\n                //document.body.appendChild(img);\r\n                setFeedbackImg(dataUrl);\r\n                setFeedbackDialogState(true);\r\n                //console.log(\"activeUserEmail: \" + loggedUserEmail);\r\n                setHideSupportPopover(false);\r\n                setSnackbarMessage('Screenshot taken successfully');\r\n                setSnackbarType('success');\r\n                setSnackbarOpen(true);\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error: cant get image!', error);\r\n                setHideSupportPopover(false);\r\n                setSnackbarMessage('Screenshot failed');\r\n                setSnackbarType('error');\r\n                setSnackbarOpen(true);\r\n            });\r\n    }, 500);\r\n  }\r\n\r\n  const downloadScreenshot = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    var ts = Math.round((new Date()).getTime() / 1000);\r\n    var convertedTimestamp = timeConverter(ts);\r\n    setSnackbarMessage('Taking screenshot...');\r\n    setSnackbarType('info');\r\n    setSnackbarOpen(true);\r\n    setHideSupportPopover(true);\r\n    setTimeout(() => {\r\n        var a:any = document.getElementsByClassName('titlebar')[0];\r\n        a.remove()\r\n        domtoimage.toJpeg(document.body)\r\n            .then(function (dataUrl) {\r\n                document.body.appendChild(a)\r\n                var link = document.createElement('a');\r\n                link.download = 'IkigaiLabs_' + convertedTimestamp + '.jpeg';\r\n                link.href = dataUrl;\r\n                link.click();\r\n                setHideSupportPopover(false);\r\n                setSnackbarMessage('Screenshot taken successfully');\r\n                setSnackbarType('success');\r\n                setSnackbarOpen(true);\r\n        }).catch(function (error) {\r\n            console.error('Error: cant get image!', error);\r\n            setHideSupportPopover(false);\r\n            setSnackbarMessage('Screenshot failed');\r\n            setSnackbarType('error');\r\n            setSnackbarOpen(true);\r\n        });\r\n    }, 500);\r\n  }\r\n\r\n  const handleFeedbackDialogCancel = () => {\r\n    setFeedbackDialogState(false);\r\n  }\r\n\r\n  const handleFeedbackDialogSubmit = (userEmail: string, feedbackMessage: string, feedbackImageCheckbox: boolean, targetType: string) => {\r\n    handleFeedbackDialogSubmitState(true);\r\n    emailjs.init(\"user_cWIBjEHSnNuFLsiYV4cpL\"); \r\n\r\n    var screenshot = \"\", template_id = \"\";\r\n    if(feedbackImageCheckbox === true){\r\n        template_id = 'ikigailabs_screenshot_template';\r\n        screenshot = feedbackImg;\r\n    }else{\r\n        template_id = 'ikigailabs_no_screenshot_template';\r\n        screenshot = \"\";\r\n    }\r\n\r\n    var greeting_msg = \"\", endEmail = \"\";\r\n    if(targetType === 'user'){\r\n        greeting_msg = \"Hello \" + userEmail + \",\";\r\n        endEmail = userEmail;\r\n    }else{\r\n        greeting_msg = \"\";\r\n        endEmail = \"support@ikigailabs.io\";\r\n    }\r\n\r\n    var template_params = {\r\n        \"email\": endEmail,\r\n        \"greeting_msg\": greeting_msg,\r\n        \"from_name\": \"Ikigai Labs - Messaging\",\r\n        \"reply_to\": loggedUserEmail,\r\n        \"to_name\": userEmail,\r\n        \"message_html\": feedbackMessage,\r\n        \"screenshot\": screenshot\r\n    }\r\n\r\n   emailjs.send('sendgrid', template_id, template_params) //Insert your email service ID and email template ID\r\n    .then(function(response) {\r\n       console.log('SUCCESS!', response.status, response.text);\r\n       if(response.status === 200){\r\n        setSnackbarMessage('You have succesfully shared screenshot');\r\n        setSnackbarType('success');\r\n        setSnackbarOpen(true);\r\n        handleFeedbackDialogSubmitState(false);\r\n        handleFeedbackDialogCancel();\r\n        handleCloseSupportPopover2();\r\n       }else{\r\n        setSnackbarMessage('Screenshot sharing failed');\r\n        setSnackbarType('error');\r\n        setSnackbarOpen(true);\r\n        handleFeedbackDialogSubmitState(false);\r\n        handleFeedbackDialogCancel();\r\n       }\r\n    }, function(error) {\r\n       console.log('FAILED...', error);\r\n       setSnackbarMessage('Screenshot sharing failed');\r\n       setSnackbarType('error');\r\n       setSnackbarOpen(true);\r\n       handleFeedbackDialogSubmitState(false);\r\n       handleFeedbackDialogCancel();\r\n    });\r\n};\r\n\r\nconst handleFeedbackDialogSubmitState = (fdState: boolean) => {\r\n    setFeedbackDialogSubmitState(fdState);\r\n    return fdState;\r\n}\r\n\r\n  const timeConverter = (UNIX_timestamp: any) => {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec'\r\n    ];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours();\r\n    var min = a.getMinutes();\r\n    var sec = a.getSeconds();\r\n    var time =\r\n      date + '-' + month + '-' + year + '_' + hour + '-' + min + '-' + sec;\r\n    return time;\r\n  }\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  }\r\n\r\n  return (\r\n      <div>\r\n            <Popover\r\n                id={id}\r\n                className={hideSupportPopover === true ? \"support-popover hide\" : \"support-popover\"}\r\n                open={openSupportPopover || false}\r\n                anchorEl={anchorSupportPopover}\r\n                onClose={handleCloseSupportPopover}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <div className=\"support-popover-content\">\r\n                    <div className=\"heading\">\r\n                        <span className=\"title\">Screenshot</span>\r\n                        <IconButton id=\"closeSupportPopoverBtn\" className=\"is-right\" size=\"small\" onClick={handleCloseSupportPopover}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className=\"step\">\r\n                        <div className=\"step-title\">Step 1</div>\r\n                        <div className=\"step-descr\">Click anywhere on screen to create comment</div>\r\n                    </div>\r\n                    <div className=\"step\">\r\n                        <div className=\"step-title\">Step 2</div>\r\n                        <div className=\"step-descr\">Once finished, click \"Send\" or \"Download\" button</div>\r\n                    </div>\r\n                    <div className=\"actions-div\">\r\n                        <IkiButton\r\n                            _variant='contained'\r\n                            _color='primary'\r\n                            _label=\"Send\"\r\n                            _type='button'\r\n                            _fullWidth={false}\r\n                            _onClick={(e: any) => prepareSendFeedback(e)}\r\n                        />\r\n                        <IkiButton\r\n                            _variant='contained'\r\n                            _color='default'\r\n                            _label=\"Download\"\r\n                            _type='button'\r\n                            _fullWidth={false}\r\n                            _onClick={(e: any) => downloadScreenshot(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"support-comment-frame fade-in\" \r\n                    onClick={popupNewComment}>\r\n                        {commentsArray.map((comment: { \r\n                            id: string | number | undefined; \r\n                            comment: React.ReactNode; \r\n                            pTop: number, \r\n                            pLeft: number \r\n                        }, index: string | number | undefined) => (\r\n                            <Draggable>\r\n                                <div key={comment.id} className=\"comment-popover\" style={{\r\n                                    top: comment.pTop+'px', \r\n                                    left: comment.pLeft+'px'}}\r\n                                    onMouseOver={handleCommentBoxMouseOver}\r\n                                    onMouseOut={handleCommentBoxMouseOut}\r\n                                >\r\n                                    <div className=\"heading\">\r\n                                        <span className=\"title\">Comment</span>\r\n                                        {selectedCommentBox === index && editCommentStatus ?\r\n                                            <Fragment>\r\n                                                <IconButton className=\"is-right\" size=\"small\" style={{marginLeft: 'auto'}} onClick={handleCancelEditComment}>\r\n                                                    <CloseIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                                <IconButton className=\"is-right\" size=\"small\" style={{marginLeft: '7px'}} onClick={handleConfirmEditComment}>\r\n                                                    <CheckIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                            </Fragment>\r\n                                        :\r\n                                            <IconButton className=\"is-right\" size=\"small\" onClick={(event) => openCommentMenu(event, index, comment.comment)}>\r\n                                                <MoreHorizIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"body\">\r\n                                        {selectedCommentBox === index && editCommentStatus ?\r\n                                            <TextField\r\n                                                multiline\r\n                                                rows=\"4\"\r\n                                                variant=\"outlined\"\r\n                                                value={updateEditComment}\r\n                                                autoFocus\r\n                                                onChange={handleUpdateEditTextarea}\r\n                                                error={commentEditTextareaErrorState}\r\n                                            />\r\n                                        :\r\n                                            <div>{comment.comment}</div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </Draggable>\r\n                        ))}\r\n                </div>\r\n            </Popover>\r\n            <Popover\r\n                id={idAddComment}\r\n                className=\"addcomm-popover\"\r\n                open={addCommentStatus}\r\n                onClose={handleCloseAddcommPopover}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                anchorReference=\"anchorPosition\"\r\n                anchorPosition={{ top: mouseY, left: mouseX }}\r\n            >\r\n                <div className=\"addcomm-popover-content\">\r\n                    <div className=\"heading\">\r\n                        <span className=\"title\">Add comment</span>\r\n                    </div>\r\n                    <div className=\"textarea-box\">\r\n                        <TextField\r\n                            multiline\r\n                            rows=\"4\"\r\n                            variant=\"outlined\"\r\n                            autoFocus\r\n                            placeholder=\"Comment\"\r\n                            onChange={handleCommentChange}\r\n                            error={commentTextareaErrorState}\r\n                        />\r\n                    </div>\r\n                    <div className=\"actions-div\">\r\n                        <IkiButton\r\n                            _variant='text'\r\n                            _color='default'\r\n                            _label=\"Cancel\"\r\n                            _type='button'\r\n                            _fullWidth={false}\r\n                            _onClick={(e: any) => handleCloseCommentBtn(e)}\r\n                        />\r\n                        <IkiButton\r\n                            _variant='contained'\r\n                            _color='primary'\r\n                            _label=\"Add\"\r\n                            _type='button'\r\n                            _fullWidth={false}\r\n                            _onClick={(e: any) => handleAddCommentBtn(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Popover>\r\n            <Menu\r\n                classes={{\r\n                    paper: 'action-btn-menu'\r\n                }}\r\n                className=\"comment-menu-overlay\"\r\n                anchorEl={anchorElCommentActionBtn}\r\n                keepMounted\r\n                open={Boolean(anchorElCommentActionBtn)}\r\n                onClose={handleCloseCommentActionBtn}\r\n            >\r\n                <MenuItem onClick={handleEditComment}>\r\n                    <EditIcon />\r\n                    <span>Edit</span>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleDeleteComment}>\r\n                    <DeleteIcon />\r\n                    <span>Delete</span>\r\n                </MenuItem>\r\n            </Menu>\r\n            <SupportFeedbackDialog \r\n                handleFeedbackDialogCancel = {handleFeedbackDialogCancel}\r\n                handleFeedbackDialogClose = {handleFeedbackDialogCancel}\r\n                openFeedbackDialog = {feedbackDialogState}\r\n                feedbackImgData = {feedbackImg}\r\n                onFeedbackDialogSubmit = {handleFeedbackDialogSubmit}\r\n                feedbackSubmitState = {feedbackDialogSubmitState}\r\n                handleDialogSubmitState = {handleFeedbackDialogSubmitState}\r\n            />\r\n            <SnackbarMsg\r\n                snackbarOpen={snackbarIsOpen}\r\n                snackbarType={snackbarIsType}\r\n                snackbarMsg={snackbarMessageIs}\r\n                onSnackbarClose={handleSnackbarClose}\r\n            />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  IconButton, Popover, LinearProgress, Button\r\n} from '@material-ui/core';\r\nimport { SupportPopover } from './support-popover';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// new styling concept needs to be applied to this component (modular styling)\r\nimport './nav-module.scss';\r\n\r\nexport function ChatNavModule(props: any) {\r\n\r\n  const {\r\n    activeUserEmail,\r\n    uploadProgress\r\n  } = props;\r\n\r\n  //console.log(\"uploadProgress: \", uploadProgress);\r\n\r\n  const [anchorSupportPopover, setSupportPopoverAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n  const [uploadDetailsPopover, setUploadDetailsPopover] = React.useState<HTMLButtonElement | null>(null);\r\n  const openSupportPopover = Boolean(anchorSupportPopover);\r\n  const openUploadDetailsPopover = Boolean(uploadDetailsPopover);\r\n\r\n  const handleSupportPopoverOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSupportPopoverAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleUploadDetailsPopoverOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setUploadDetailsPopover(event.currentTarget);\r\n    /*if(uploadDetailsPopover!=null){\r\n      setUploadDetailsPopover(null);\r\n    }else{\r\n      setUploadDetailsPopover(event.currentTarget);\r\n    }*/\r\n  };\r\n\r\n  const handleUploadDetailsPopoverClose = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setUploadDetailsPopover(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n        <ul className=\"bottom-menu\">\r\n            <li className=\"menu\">\r\n              <div className=\"link-alike upload-menu-item\" onClick={(event: any) => handleUploadDetailsPopoverOpen(event)}>\r\n                {uploadProgress ? (\r\n                  (uploadProgress.filter((data:any)=>{\r\n                    return data.status !== 'complete' && data.status !== 'deleted'}\r\n                  ).length > 0) ?\r\n                  uploadDetailsPopover ? (\r\n                        <Badge badgeContent={uploadProgress.filter((data:any) => {\r\n                          return data.status === 'failed'}\r\n                          ).length > 0 ? '!' : uploadProgress.filter((data:any)=>{ \r\n                            return data.status !== 'complete' && data.status !== 'deleted'}\r\n                            ).length} color=\"secondary\"\r\n                        >\r\n                          <i className=\"zmdi zmdi-cloud-upload zmdi-hc-fw\" />\r\n                          <span className=\"nav-text\">Uploading</span>\r\n                        </Badge>\r\n                  ) : (\r\n                      <Badge badgeContent={uploadProgress.filter((data:any)=>{\r\n                        return data.status === 'failed'}\r\n                        ).length > 0 ? '!' : uploadProgress.filter((data:any)=>{ \r\n                          return data.status !== 'complete' && data.status !== 'deleted'\r\n                        }).length} color=\"secondary\"\r\n                      >\r\n                        <i className=\"zmdi zmdi-cloud-upload zmdi-hc-fw\" />\r\n                        <span className=\"nav-text\">Uploading</span>\r\n                      </Badge>\r\n                  ) : (\r\n                    ''\r\n                  )\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li className=\"menu\">\r\n              <div className=\"link-alike\" onClick={(event: any) => handleSupportPopoverOpen(event)}>\r\n                <i className=\"zmdi zmdi-camera zmdi-hc-fw\" />\r\n                <span className=\"nav-text\">Screenshot</span>\r\n              </div>\r\n            </li>\r\n            {/* <li className=\"menu\">\r\n              <div className=\"link-alike\">\r\n                <i className=\"zmdi zmdi-comments zmdi-hc-fw\" />\r\n                <span className=\"nav-text\">Chat</span>\r\n              </div>\r\n            </li> */}\r\n          </ul>\r\n        {/* {anchorSupportPopover ?\r\n          <IconButton className=\"btn-support is-active\" onClick={handleSupportPopoverOpen}>\r\n            <PhotoCameraIcon />\r\n          </IconButton>\r\n        :\r\n          <IconButton className=\"btn-support\" onClick={handleSupportPopoverOpen}>\r\n            <PhotoCameraIcon />\r\n          </IconButton>\r\n        }\r\n        <IconButton className=\"btn-chat\">\r\n          <QuestionAnswerIcon />\r\n        </IconButton>\r\n        <IconButton className=\"btn-upload\" onClick={handleUploadDetailsPopoverOpen}>\r\n          <CloudUploadIcon />\r\n        </IconButton> */}\r\n        {/* {uploadProgress ? (\r\n          (uploadProgress.filter((data:any)=>{\r\n            return data.status !== 'complete' && data.status !== 'deleted'}\r\n          ).length > 0) ?\r\n          uploadDetailsPopover ? (\r\n              <IconButton className=\"btn-upload is-active\" onClick={handleUploadDetailsPopoverOpen}>\r\n                <Badge badgeContent={uploadProgress.filter((data:any) => {\r\n                  return data.status === 'failed'}\r\n                  ).length > 0 ? '!' : uploadProgress.filter((data:any)=>{ \r\n                    return data.status !== 'complete' && data.status !== 'deleted'}\r\n                    ).length} color=\"secondary\"\r\n                >\r\n                  <PublishIcon />\r\n                </Badge>\r\n              </IconButton>\r\n          ):(\r\n            <IconButton className=\"btn-upload\" onClick={handleUploadDetailsPopoverOpen}>\r\n              <Badge badgeContent={uploadProgress.filter((data:any)=>{\r\n                return data.status === 'failed'}\r\n                ).length > 0 ? '!' : uploadProgress.filter((data:any)=>{ \r\n                  return data.status !== 'complete' && data.status !== 'deleted'\r\n                }).length} color=\"secondary\"\r\n              >\r\n                <PublishIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            ): ''\r\n          ):(\r\n            <IconButton className=\"btn-upload\" onClick={handleUploadDetailsPopoverOpen}>\r\n              <PublishIcon />\r\n            </IconButton>\r\n          )\r\n        } */}\r\n      <SupportPopover \r\n        handleSupportPopoverOpen={handleSupportPopoverOpen} \r\n        setSupportPopoverAnchorEl={setSupportPopoverAnchorEl} \r\n        anchorSupportPopover={anchorSupportPopover}\r\n        openSupportPopover={openSupportPopover}\r\n        loggedUserEmail={activeUserEmail}\r\n      />\r\n      {uploadProgress &&\r\n        uploadProgress.filter((data:any)=>{return data.status !== 'complete' && data.status !== 'deleted'}).length > 0 &&\r\n          <Popover\r\n            className=\"support-popover\"\r\n            open={openUploadDetailsPopover}\r\n            anchorEl={uploadDetailsPopover}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n          >\r\n              <div className=\"support-popover-content\">\r\n                  <div className=\"heading\">\r\n                    <span className=\"title\">Uploading</span>\r\n                    <IconButton id=\"closeSupportPopoverBtn\" className=\"is-right\" size=\"small\" onClick={handleUploadDetailsPopoverClose}>\r\n                      <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </div>\r\n                    {uploadProgress.filter((data:any)=>{return data.status !== 'complete' && data.status !=='deleted'}).sort().map((data:any)=>(\r\n                        <div className=\"step\">\r\n                            <div>\r\n                              <div className=\"step-title\">\r\n                                {data.datasetName}\r\n                              </div>\r\n                              <div className=\"clip-txt step-descr\" style={{width:\"100%\"}}>\r\n                                {data.status === 'uploading' ? (\r\n                                  <LinearProgress variant=\"determinate\" color=\"primary\" value={data.percentCompleted} />\r\n                                  ) : data.status === 'Processing' ? (\r\n                                  <LinearProgress variant=\"determinate\" color=\"primary\" value={data.percentCompleted} />\r\n                                  ) : (\r\n                                  <Button onClick={()=>{data.onRetry()}}><ReplayIcon/>{\"Retry\"}</Button>\r\n                                  )} \r\n                                {data.status==='preparing' ? (\r\n                                  <LinearProgress variant=\"determinate\" color=\"primary\" value={data.percentCompleted} />\r\n                                  ) : data.status === 'uploading' ? (\r\n                                  <LinearProgress variant=\"determinate\" color=\"primary\" value={data.percentCompleted} />\r\n                                  ) : data.status === 'Processing' ? (\r\n                                  <LinearProgress variant=\"determinate\" color=\"primary\" value={data.percentCompleted} />\r\n                                  ) : ('')} \r\n                                {data.status === 'failed' ? (\r\n                                  <Button onClick={() => { data.onCancel() }}>\r\n                                    <DeleteIcon/>{\"Cancel\"}\r\n                                  </Button>\r\n                                  ) : (\"\")} \r\n                              </div>\r\n                              {data.status==='preparing' ? (\r\n                                <span>Preparing file...</span>\r\n                                ) : data.status==='uploading'? (\r\n                                  <span> {data.percentCompleted.toFixed(2)} %</span>\r\n                                ) : data.status==='Processing'? (\r\n                                  <span>Processing file...</span>\r\n                                ) : (\r\n                                <span> {data.percentCompleted.toFixed(2)} %</span>\r\n                                )}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n              </div>\r\n              <div className=\"progress-back-frame\" onClick={()=>setUploadDetailsPopover(null)}>\r\n\r\n              </div>\r\n          </Popover>\r\n      }\r\n     <SupportPopover       \r\n        loggedUserEmail={activeUserEmail}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport CustomScrollbars from '../../../util/CustomScrollbars';\r\nimport classNames from 'classnames/bind';\r\nimport { ChatNavModule } from '../IkiNavActionButtons';\r\nimport styles from './SideMenu.module.scss';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\nclass DrawerMenu extends Component {\r\n  componentDidMount() {\r\n    //console.log('DrawerMenu...', this.props);\r\n    const { history } = this.props;\r\n    const that = this;\r\n    const pathname = `${history.location.pathname + window.location.search}`; // get current path\r\n    const menuLi = document.getElementsByClassName('menu');\r\n    for (let i = 0; i < menuLi.length; i++) {\r\n      menuLi[i].onclick = function(event) {\r\n        const parentLiEle = that.closest(this, 'li');\r\n        if (menuLi[i].classList.contains('menu') && parentLiEle !== null) {\r\n          event.stopPropagation();\r\n          if (menuLi[i].classList.contains('open')) {\r\n            menuLi[i].classList.remove('open', 'active');\r\n          } else {\r\n            menuLi[i].classList.add('open', 'active');\r\n          }\r\n        } else {\r\n          for (let j = 0; j < menuLi.length; j++) {\r\n            const parentLi = that.closest(this, 'li');\r\n            if (\r\n              menuLi[j] !== this &&\r\n              (parentLi === null || !parentLi.classList.contains('open'))\r\n            ) {\r\n              menuLi[j].classList.remove('open');\r\n            } else {\r\n              if (menuLi[j].classList.contains('open')) {\r\n                menuLi[j].classList.remove('open');\r\n              } else {\r\n                menuLi[j].classList.add('open');\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    const activeLi = document.querySelector('a[href=\"' + pathname + '\"]'); // select current a element\r\n    try {\r\n      activeLi.classList.add('active');\r\n      const activeNav = this.closest(activeLi, 'ul'); // select closest ul\r\n      if (activeNav.classList.contains('sub-menu')) {\r\n        this.closest(activeNav, 'li').classList.add('open');\r\n      } else {\r\n        this.closest(activeLi, 'li').classList.add('open');\r\n      }\r\n    } catch (error) {}\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { history } = nextProps;\r\n    const pathname = `${history.location.pathname + window.location.search}`; // get current path\r\n\r\n    const activeLi = document.querySelector('a[href=\"' + pathname + '\"]'); // select current a element\r\n    try {\r\n      const activeNav = this.closest(activeLi, 'ul'); // select closest ul\r\n      if (activeNav.classList.contains('sub-menu')) {\r\n        this.closest(activeNav, 'li').classList.add('open');\r\n      } else {\r\n        this.closest(activeLi, 'li').classList.add('open');\r\n      }\r\n    } catch (error) {}\r\n  }\r\n\r\n  closest(el, selector) {\r\n    try {\r\n      let matchesFn;\r\n      // find vendor prefix\r\n      [\r\n        'matches',\r\n        'webkitMatchesSelector',\r\n        'mozMatchesSelector',\r\n        'msMatchesSelector',\r\n        'oMatchesSelector'\r\n      ].some(function(fn) {\r\n        if (typeof document.body[fn] === 'function') {\r\n          matchesFn = fn;\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      let parent;\r\n\r\n      // traverse parents\r\n      while (el) {\r\n        parent = el.parentElement;\r\n        if (parent && parent[matchesFn](selector)) {\r\n          return parent;\r\n        }\r\n        el = parent;\r\n      }\r\n    } catch (e) {}\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    //console.log('DrawerMenu...', this.props);\r\n    const { \r\n      _email,\r\n      _uploadProgress,\r\n      _logoutHandler,\r\n      _navMinimzed,\r\n      _getMenuItemActive,\r\n      _menuItemActive,\r\n      _activePageType,\r\n      _appData,\r\n      _type,\r\n      _page\r\n    } = this.props;\r\n    var navMenuHolderScrollbarClass = cx({\r\n      navMenuHolderScrollbar: true,\r\n      'minimized': _navMinimzed\r\n    });\r\n    var navMenuHolderClass = cx({\r\n      navMenuHolder: true,\r\n      'minimized': _navMinimzed\r\n    });\r\n    let urlParamProjectId = '';\r\n    let schedulePathname = '';\r\n    if(this.props.history.location.pathname) {\r\n      schedulePathname = this.props.history.location.pathname;\r\n      var pathname_array = schedulePathname.split(\"/\");\r\n      var page_id = pathname_array[pathname_array.length - 1];\r\n      var page_type = pathname_array[2];\r\n      if(page_type === 'project') {\r\n        schedulePathname = '/dashboard/project-schedules/' + page_id;\r\n      } else if(pathname_array[1] === 'flow') {\r\n        schedulePathname = '/dashboard/flow-schedules/' + page_id;\r\n      } else {\r\n        schedulePathname = '/dashboard/schedules'\r\n      }\r\n      //console.log('page_id...', page_id, 'page_type...', page_type);\r\n    }\r\n    return (\r\n      <CustomScrollbars className={navMenuHolderScrollbarClass}>\r\n        <div className={navMenuHolderClass}>\r\n          <ul className={styles.navMenu}>\r\n            <li className={_menuItemActive === '' ? 'menu open' : 'menu'}>\r\n              <NavLink to=\"/dashboard/projects\" className=\"active\" onClick={() => { _getMenuItemActive('projects')}}>\r\n                <i className=\"zmdi zmdi-folder-outline zmdi-hc-fw\" />\r\n                <span className=\"nav-text\">Projects</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"menu\">\r\n              {/* <div className=\"link-alike\" onClick={() => { _getMenuItemActive('schedule')}}>\r\n                <i className=\"zmdi zmdi-time zmdi-hc-fw\" />\r\n                <span className=\"nav-text\">Schedules</span>\r\n              </div> */}\r\n              {_page !== 'Dataset' && _page !== 'Dashboard' && (\r\n                <NavLink to={schedulePathname} className=\"active\" onClick={() => { _getMenuItemActive('schedule')}}>\r\n                  <i className=\"zmdi zmdi-time zmdi-hc-fw\" />\r\n                  <span className=\"nav-text\">Schedules</span>\r\n                </NavLink>\r\n              )}\r\n            </li>\r\n          </ul>\r\n\r\n          <ChatNavModule \r\n            uploadProgress={_uploadProgress} \r\n          />\r\n\r\n          <ul className={styles.navMenu}>\r\n            <li className=\"menu\">\r\n              <NavLink to=\"/dashboard/profile\" onClick={() => { _getMenuItemActive('profile')}}>\r\n                <i className=\"zmdi zmdi-account-circle zmdi-hc-fw\" />\r\n                {/* <span className=\"nav-text\">{_email.split('@')[0]}</span> */}\r\n                <span className=\"nav-text\">Profile</span>\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"menu\">\r\n              <div className=\"link-alike\" onClick={_logoutHandler}>\r\n                <i className=\"zmdi zmdi-power zmdi-hc-fw\" />\r\n                <span className=\"nav-text\">Log Out</span>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </CustomScrollbars>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(DrawerMenu);\r\n","import React, { Component } from 'react';\r\nimport { \r\n    Drawer\r\n} from '@material-ui/core';\r\nimport classNames from 'classnames/bind';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { IkigaiLogo } from '../../IkigaiLogo';\r\nimport DrawerMenu from './side-menu';\r\nimport styles from './Navigation.module.scss';\r\nlet cx = classNames.bind(styles);\r\n\r\nexport default class IkigaiNavigation extends Component {\r\n  prepareNavigation = () => {\r\n    const _email = this.props._email ? this.props._email : '';\r\n    const _logoutHandler = this.props._logoutHandler ? this.props._logoutHandler : () => {};\r\n    const _type = this.props._type ? this.props._type : '';\r\n    const _page = this.props._page ? this.props._page : '';\r\n    const _leftSidebar = this.props._leftSidebar ? this.props._leftSidebar : '';\r\n    const _rightSidebar = this.props._rightSidebar ? this.props._rightSidebar : '';\r\n    const _filterSidebar = this.props._filterSidebar ? this.props._filterSidebar : '';\r\n    const _handleGoBack = this.props._handleGoBack ? this.props._handleGoBack : '';\r\n    const _uploadProgress = this.props._uploadProgress ? this.props._uploadProgress : '';\r\n    let _getMenuItemActive = this.props._getMenuItemActive ? this.props._getMenuItemActive : '';\r\n    const _toggleNavigation = this.props._toggleNavigation ? this.props._toggleNavigation : '';\r\n    let _navMinimzed = this.props._navMinimzed ? this.props._navMinimzed : false;\r\n    let _menuItemActive = this.props._menuItemActive ? this.props._menuItemActive : '';\r\n    let _appData = this.props._appData ? this.props._appData : null;\r\n    //let _isProjectPage = this.props._isProjectPage ? this.props._isProjectPage : false;\r\n    var drawerHolderClass = cx({\r\n      drawerHolder: true,\r\n      'minimized': _navMinimzed\r\n    });\r\n\r\n    var goBackTxt = 'Go back ';\r\n    if(_page === 'Dataset') {\r\n      goBackTxt += 'to Datasets'\r\n    } else if(_page === 'Dashboard') {\r\n      goBackTxt += 'to Dashboards'\r\n    } else if(_page === 'Flow') {\r\n      goBackTxt += 'to Flows'\r\n    }\r\n\r\n    var activePageType = '';\r\n    if(_appData !== null) {\r\n      activePageType = _appData.activePageType;\r\n    }\r\n\r\n    //console.log('IkigaiNavigation...', this.props);\r\n\r\n    if(_type === 'sub-page') {\r\n      if(_filterSidebar !== '') {\r\n        return (\r\n          <>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              anchor=\"left\"\r\n              className={drawerHolderClass}\r\n              classes={{\r\n                paper: 'drawer minimized'\r\n              }}\r\n            >\r\n              <IkigaiLogo\r\n                _size='big'\r\n                _color='white'\r\n                _navMinimzed={true}\r\n              />\r\n              <div\r\n                className={styles.goBack}\r\n                onClick={_handleGoBack}\r\n                style={{cursor: 'pointer'}}\r\n              >\r\n                <ArrowRightAltIcon className={styles.goBackIcon} />\r\n                {/* <span>{goBackTxt}</span> */}\r\n              </div>\r\n              <DrawerMenu \r\n                _email={_email}\r\n                _uploadProgress={_uploadProgress} \r\n                _logoutHandler={_logoutHandler}\r\n                _navMinimzed={true}\r\n                _getMenuItemActive={_getMenuItemActive}\r\n                _menuItemActive={_menuItemActive}\r\n                _activePageType={activePageType}\r\n                _appData={_appData}\r\n                _type={_type}\r\n                _page={_page}\r\n              />\r\n              {/* <IkigaiLogo\r\n                _size='small'\r\n                _color='white'\r\n              />\r\n              <div\r\n                className={styles.goBack}\r\n                onClick={_handleGoBack}\r\n                style={{cursor: 'pointer'}}\r\n              >\r\n                <ArrowRightAltIcon className={styles.goBackIcon} />\r\n                <span>{goBackTxt}</span>\r\n              </div>\r\n              {_leftSidebar}\r\n              <div className=\"pureBg\"></div> */}\r\n            </Drawer>\r\n            <div className={styles.filterSidebar}>\r\n              {/* <div\r\n                  className={styles.goBack}\r\n                  onClick={_handleGoBack}\r\n                  style={{cursor: 'pointer'}}\r\n                >\r\n                  <ArrowRightAltIcon className={styles.goBackIcon} />\r\n                  <span>{goBackTxt}</span>\r\n              </div> */}\r\n              {_filterSidebar}\r\n              <div className={styles.pureBg}></div>\r\n            </div>\r\n          </>\r\n        );\r\n      } else if(_rightSidebar !== '') {\r\n        return (\r\n          <>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              anchor=\"right\"\r\n              className={styles.infoDrawerHolder}\r\n              classes={{\r\n                paper: 'info-drawer-paper'\r\n              }}\r\n            >\r\n              {_rightSidebar}\r\n            </Drawer>\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              anchor=\"left\"\r\n              className={drawerHolderClass}\r\n              classes={{\r\n                paper: 'drawer minimized'\r\n              }}\r\n            >\r\n              <IkigaiLogo\r\n                _size='big'\r\n                _color='white'\r\n                _navMinimzed={true}\r\n              />\r\n              <div\r\n                className={styles.goBack}\r\n                onClick={_handleGoBack}\r\n                style={{cursor: 'pointer'}}\r\n              >\r\n                <ArrowRightAltIcon className={styles.goBackIcon} />\r\n                {/* <span>{goBackTxt}</span> */}\r\n              </div>\r\n              <DrawerMenu \r\n                _email={_email}\r\n                _uploadProgress={_uploadProgress} \r\n                _logoutHandler={_logoutHandler}\r\n                _navMinimzed={true}\r\n                _getMenuItemActive={_getMenuItemActive}\r\n                _menuItemActive={_menuItemActive}\r\n                _activePageType={activePageType}\r\n                _appData={_appData}\r\n                _type={_type}\r\n                _page={_page}\r\n              />\r\n              {/* <IkigaiLogo\r\n                _size='small'\r\n                _color='white'\r\n              />\r\n              <div\r\n                className={styles.goBack}\r\n                onClick={_handleGoBack}\r\n                style={{cursor: 'pointer'}}\r\n              >\r\n                <ArrowRightAltIcon className={styles.goBackIcon} />\r\n                <span>{goBackTxt}</span>\r\n              </div> */}\r\n            </Drawer>\r\n          </>\r\n        );\r\n      }\r\n    } else if(_type === 'preview') {\r\n      if(_leftSidebar !== '') { \r\n        return (\r\n          <>\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              anchor=\"left\"\r\n              className={drawerHolderClass}\r\n              classes={{\r\n                paper: 'drawer'\r\n              }}\r\n            >\r\n              <IkigaiLogo\r\n                _size='small'\r\n                _color='white'\r\n              />\r\n              {_leftSidebar}\r\n\r\n            </Drawer>\r\n          </>\r\n        );\r\n      }  \r\n    } else { \r\n      return (\r\n        <>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            anchor=\"left\"\r\n            className={drawerHolderClass}\r\n            classes={{\r\n              paper: 'drawer'\r\n            }}\r\n          >\r\n            <IkigaiLogo\r\n              _size='big'\r\n              _color='white'\r\n              _navMinimzed={_navMinimzed}\r\n            />\r\n            <DrawerMenu \r\n              _email={_email}\r\n              _uploadProgress={_uploadProgress} \r\n              _logoutHandler={_logoutHandler}\r\n              _navMinimzed={_navMinimzed}\r\n              _getMenuItemActive={_getMenuItemActive}\r\n              _menuItemActive={_menuItemActive}\r\n              _activePageType={activePageType}\r\n              _appData={_appData}\r\n              _type={_type}\r\n              _page={_page}\r\n            />\r\n            <div \r\n              className={styles.toggleNavButton}\r\n              onClick={_toggleNavigation}\r\n            >\r\n              {_navMinimzed ? (\r\n                <ArrowForwardIosIcon />\r\n              ):(\r\n                <ArrowBackIosIcon />\r\n              )}\r\n            </div>\r\n          </Drawer>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return this.prepareNavigation()\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import classNames from 'classnames/bind';\r\nimport styles from './Breadcrumb.module.scss';\r\n\r\n//let cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Page Breadcrumb\r\n   * @param _parentLink Parent Link - string\r\n   * @param _parentText Parent Text content - string\r\n   * @param _backIcon Back Icon - boolean (not required)\r\n   * @param _pageTitle Page Title/Header - string\r\n   */\r\nexport default class IkiBreadcrumb extends Component {\r\n  render() {\r\n    const { \r\n      _parentLink, \r\n      _parentText, \r\n      _pageTitle, \r\n    } = this.props;\r\n    const _backIcon = this.props._backIcon ? this.props._backIcon : '';\r\n    //console.log(\"IkiBreadcrumb props: \", this.props);\r\n    return(\r\n      <>\r\n        <div className={styles.breadcrumb}>\r\n            <div className={styles.path}>\r\n                <Link to={_parentLink}>\r\n                    {_backIcon !== '' && (\r\n                        <i className=\"zmdi zmdi-long-arrow-left\" />\r\n                    )}\r\n                    <span>{_parentText}</span>\r\n                </Link>\r\n            </div>\r\n            <div className={styles.title}>\r\n                <span>{_pageTitle}</span>\r\n            </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n//import classNames from 'classnames/bind';\r\nimport styles from './Header.module.scss';\r\nimport IkiBreadcrumb from '../IkiBreadcrumb'\r\n\r\n//let cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Page Header\r\n   * @param _breadcrumbLink Breadcrumb back/parent Link - string\r\n   * @param _breadcrumbText Breadcrumb text content - string\r\n   * @param _breadcrumbTitle Breadcrumb page title - string\r\n   * @param _breadcrumbBackIcon Breadcrumb Back Icon - boolean\r\n   * @param _actionButtons Buttons - component\r\n   */\r\nexport default class IkiPageHeader extends Component {\r\n  render() {\r\n    const _breadcrumbLink = this.props._breadcrumbLink ? this.props._breadcrumbLink : '';\r\n    const _breadcrumbText = this.props._breadcrumbText ? this.props._breadcrumbText : '';\r\n    const _breadcrumbTitle = this.props._breadcrumbTitle ? this.props._breadcrumbTitle : '';\r\n    const _breadcrumbBackIcon = this.props._breadcrumbBackIcon ? this.props._breadcrumbBackIcon : '';\r\n    const _actionButtons = this.props._actionButtons ? this.props._actionButtons : '';\r\n    //console.log(\"IkiPageHeader props: \", this.props);\r\n    return(\r\n      <>\r\n        <div className={styles.header}>\r\n            {_breadcrumbLink !== '' && (\r\n                <IkiBreadcrumb\r\n                    _parentLink={_breadcrumbLink}\r\n                    _parentText={_breadcrumbText}\r\n                    _pageTitle={_breadcrumbTitle}\r\n                    _backIcon={_breadcrumbBackIcon}\r\n                />\r\n            )}\r\n            {_actionButtons !== '' && (\r\n                <div className={styles.buttonsHolder}>\r\n                    {_actionButtons}\r\n                </div>\r\n            )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  Box\r\n} from '@material-ui/core';\r\nimport SnackbarMsg from '../../components/SnackbarMsg';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { confirmChangePassword } from '../../services';\r\nimport IkiPageHeader from '../../components/IkiLayout/IkiPageHeader'\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\nimport { getCookie, removeCookie } from '../../util/cookie';\r\nimport {\r\n  exitSession as exitSessionManually\r\n} from './../../services/app-data.service';\r\nvar passwordValidator = require('password-validator');\r\n\r\ntype ProfileState = {\r\n  passwordValue: string;\r\n  passwordValue2: string;\r\n  passwordValue3: string;\r\n  showPassword: boolean,\r\n  showPassword2: boolean,\r\n  showPassword3: boolean,\r\n  passErrorMsg: string;\r\n  passErrorMsg2: string;\r\n  passErrorMsg3: string;\r\n  verificationCodeSubmitErrorMsg: string;\r\n  verificationCodeSubmitErrorState: boolean;\r\n  resetpassSubmitErrorMsg: string;\r\n  resetpassSubmitErrorState: boolean;\r\n  resetpassSubmitSuccessState: boolean;\r\n  resetpassSubmitSuccessMsg: string;\r\n  snackbarOpen: boolean;\r\n  snackbarMessage: any;\r\n  snackbarType: string;\r\n};\r\n\r\ntype ProfileProps = {\r\n  email: string;\r\n  metabaseLoginId: string;\r\n  activeProjectId: string;\r\n  cleanSession: () => void;\r\n  fireReturnToProject: (sourcePage: string) => void;\r\n};\r\n\r\n// Define rules and minimum requirements for password\r\nvar passwordRules = new passwordValidator();\r\npasswordRules\r\n.is().min(8)            // Minimum length 8\r\n.is().max(100)          // Maximum length 100\r\n.has().uppercase()      // Must have uppercase letters\r\n.has().lowercase()      // Must have lowercase letters\r\n.has().digits()         // Must have digits\r\n.has().not().spaces();  // Should not have spaces\r\n\r\nclass ProfileComponent extends Component<ProfileProps, ProfileState> {\r\n\r\n  state = {\r\n    passwordValue: '',\r\n    passwordValue2: '',\r\n    passwordValue3: '',\r\n    showPassword: true,\r\n    showPassword2: true,\r\n    showPassword3: true,\r\n    passErrorMsg: '',\r\n    passErrorMsg2: '',\r\n    passErrorMsg3: '',\r\n    verificationCodeSubmitErrorMsg: '',\r\n    verificationCodeSubmitErrorState: false,\r\n    resetpassSubmitErrorMsg: '',\r\n    resetpassSubmitErrorState: false,\r\n    resetpassSubmitSuccessState: false,\r\n    resetpassSubmitSuccessMsg: '',\r\n    snackbarOpen: false,\r\n    snackbarMessage: null,\r\n    snackbarType: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    //var activeProjectId = '';\r\n    //var ikiProject_cookie = '';\r\n    //ikiProject_cookie = getCookie('ikiProject');\r\n    //console.log('ikiProject_cookie: ', ikiProject_cookie);\r\n    //this.props.fireReturnToProject(\"profile\");\r\n    /*if(this.props.activeProjectId !== '' && this.props.metabaseLoginId !== '') {\r\n      activeProjectId = this.props.activeProjectId;\r\n    } */\r\n    /*else if (ikiProject_cookie !== '') {\r\n      activeProjectId = ikiProject_cookie;\r\n    }*/\r\n\r\n    /*if(activeProjectId !== '') {\r\n      exitSessionManually(activeProjectId).then((exitSessRes: any) => {\r\n        this.props.cleanSession();\r\n      }).catch((exitSessErr: any) => {\r\n        this.props.cleanSession();\r\n      });\r\n    }*/\r\n  }\r\n\r\n  handleClickShowPassword = () => {\r\n    if(this.state.showPassword === true){\r\n      this.setState({ showPassword: false })\r\n    }else{\r\n      this.setState({ showPassword: true })\r\n    }\r\n  }\r\n\r\n   handleClickShowPassword2 = () => {\r\n    if(this.state.showPassword2 === true){\r\n      this.setState({ showPassword2: false })\r\n    }else{\r\n      this.setState({ showPassword2: true })\r\n    }\r\n  }\r\n\r\n  handleClickShowPassword3 = () => {\r\n    if(this.state.showPassword3 === true){\r\n      this.setState({ showPassword3: false })\r\n    }else{\r\n      this.setState({ showPassword3: true })\r\n    }\r\n  }\r\n\r\n  handlePassChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ passwordValue: e.target.value })\r\n  }\r\n\r\n  handlePassChange2 = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ passwordValue2: e.target.value })\r\n  }\r\n\r\n  handlePassChange3 = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ passwordValue3: e.target.value })\r\n  }\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false })\r\n  }\r\n\r\n  handleChangePassFormSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    let passIsValid = false\r\n    let passIsValid2 = false\r\n    let passIsValid3 = false\r\n\r\n    if(this.state.passwordValue !== ''){\r\n      if(passwordRules.validate(this.state.passwordValue) === true){\r\n        this.setState({ \r\n          passErrorMsg: ''\r\n        })\r\n        passIsValid = true\r\n      }else{\r\n        this.setState({ \r\n          passErrorMsg: 'Password must contain uppercase and lowercase letter, number and be 8 - 16 characters long'\r\n        })\r\n        passIsValid = false\r\n      }\r\n    }else{\r\n      this.setState({ \r\n        passErrorMsg: 'Password is required'\r\n      })\r\n      passIsValid = false\r\n    }\r\n\r\n    if(this.state.passwordValue !== ''){\r\n      if(passwordRules.validate(this.state.passwordValue2) === true){\r\n        this.setState({ \r\n          passErrorMsg2: ''\r\n        })\r\n        passIsValid2 = true\r\n      }else{\r\n        this.setState({ \r\n          passErrorMsg2: 'Password must contain uppercase and lowercase letter, number and be 8 - 16 characters long'\r\n        })\r\n        passIsValid2 = false\r\n      }\r\n    }else{\r\n      this.setState({ \r\n        passErrorMsg2: 'New password is required'\r\n      })\r\n      passIsValid2 = false\r\n    }\r\n\r\n    if(this.state.passwordValue3 !== ''){\r\n      if(this.state.passwordValue3 === this.state.passwordValue2){\r\n        this.setState({ \r\n          passErrorMsg3: ''\r\n        })\r\n        passIsValid3 = true\r\n      }else{\r\n        this.setState({ \r\n          passErrorMsg3: 'Passwords are not equal'\r\n        })\r\n        passIsValid3 = false\r\n      }\r\n    }else{\r\n      this.setState({ \r\n        passErrorMsg3: 'Confirm new password is required'\r\n      })\r\n      passIsValid3 = false\r\n    }\r\n\r\n    if(passIsValid === true && passIsValid2 === true && passIsValid3 === true){\r\n      // COMPLETE REGISTRATION / CONFIRM-SIGN-UP API CALL GOES HERE AND IF EVERYTHING OK, GOES TO DASHBOARD\r\n      //console.log(\"SUBMIT - email: \" + this.props.email + \", pass1: \" + this.state.passwordValue + \", pass2: \" + this.state.passwordValue3)\r\n      confirmChangePassword(this.props.email, this.state.passwordValue, this.state.passwordValue3).then(res => {\r\n        if(res.status === 200){\r\n          this.setState({ \r\n            verificationCodeSubmitErrorMsg: '',\r\n            verificationCodeSubmitErrorState: false,\r\n            resetpassSubmitSuccessState: true,\r\n            resetpassSubmitSuccessMsg: 'Congratulations. You have successfully created new password.',\r\n            snackbarMessage: <Fragment>\r\n              <div className=\"msg\">Congratulations. You have successfully created new password.</div>\r\n            </Fragment>,\r\n            snackbarType: 'success',\r\n            snackbarOpen: true,\r\n            passwordValue: '',\r\n            passwordValue2: '',\r\n            passwordValue3:''\r\n          });\r\n        }else{\r\n          this.setState({\r\n            verificationCodeSubmitErrorMsg: '',\r\n            verificationCodeSubmitErrorState: false,\r\n            snackbarMessage: <Fragment>\r\n              <div className=\"msg\">Error: Unable to change password.</div>\r\n            </Fragment>,\r\n            snackbarType: 'error',\r\n            snackbarOpen: true,\r\n          });\r\n        }\r\n        /*else if(res.status === 401){\r\n          //this.setState({ verificationCodeSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n          this.setState({ verificationCodeSubmitErrorMsg: 'Error 401: Unable to change password.' })\r\n          this.setState({ verificationCodeSubmitErrorState: true })\r\n        }else if(res.status === 404){\r\n          this.setState({ verificationCodeSubmitErrorMsg: 'Error 404: Something went wrong.' })\r\n          this.setState({ verificationCodeSubmitErrorState: true })\r\n        }else{\r\n          this.setState({ verificationCodeSubmitErrorMsg: 'Error: Unable to change password.' })\r\n          this.setState({ verificationCodeSubmitErrorState: true })\r\n        }*/\r\n      }).catch(err => {\r\n        this.setState({\r\n          verificationCodeSubmitErrorMsg: '',\r\n          verificationCodeSubmitErrorState: false,\r\n          snackbarMessage: <Fragment>\r\n            <div className=\"msg\">Error: Unable to change password.</div>\r\n          </Fragment>,\r\n          snackbarType: 'error',\r\n          snackbarOpen: true,\r\n        });\r\n        /*if(err.response.status === 404) {\r\n          this.setState({ verificationCodeSubmitErrorMsg: 'Error 404: Unable to change password.' })\r\n          this.setState({ verificationCodeSubmitErrorState: true })\r\n        } else if(err.response.status === 401) {\r\n          //this.setState({ verificationCodeSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n          this.setState({ verificationCodeSubmitErrorMsg: 'Error 401: Something went wrong.' })\r\n          this.setState({ verificationCodeSubmitErrorState: true })\r\n        }else{\r\n          this.setState({ verificationCodeSubmitErrorMsg: 'Error: Unable to change password. (catch error)' })\r\n          this.setState({ verificationCodeSubmitErrorState: true })\r\n        }*/\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      passwordValue,\r\n      passwordValue2,\r\n      passwordValue3,\r\n      showPassword,\r\n      showPassword2,\r\n      showPassword3,\r\n      passErrorMsg,\r\n      passErrorMsg2,\r\n      passErrorMsg3,\r\n      verificationCodeSubmitErrorMsg,\r\n      verificationCodeSubmitErrorState,\r\n      resetpassSubmitSuccessState,\r\n    } = this.state;\r\n    return(\r\n    <Fragment>\r\n        <Container className=\"main-container profile\" component=\"main\" maxWidth={false}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <IkiPageHeader\r\n                  _breadcrumbLink='/dashboard'\r\n                  _breadcrumbText='Dashboard'\r\n                  _breadcrumbTitle='Profile'\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <div className=\"cardbox-holder\">\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12} md={4} lg={4}>\r\n                <Card className=\"cardbox page-content\">\r\n                  <CardContent>\r\n                    <div className=\"header\">\r\n                      <span className=\"title\">User info</span>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs={12} lg={4}>\r\n                          <AccountCircleIcon className=\"avatar\" fontSize=\"large\" color=\"primary\" />\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={8} className=\"has-txt-left\">\r\n                          <Box mb={1} className=\"user-name default-color\">\r\n                            {this.props.email.split('@')[0]}\r\n                          </Box>\r\n                          <Box className=\"user-email default-color\">\r\n                            {this.props.email}\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} md={8} lg={8}>\r\n                <Card className=\"cardbox page-content\">\r\n                  <CardContent>\r\n                    <div className=\"header\">\r\n                      <span className=\"title\">Change password</span>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <form \r\n                        autoComplete=\"off\" \r\n                        noValidate\r\n                        onSubmit={this.handleChangePassFormSubmit}\r\n                      >\r\n                        <IkiInput \r\n                          _label=\"Password\"\r\n                          _placeholder=\"Enter current Password\"\r\n                          _type={showPassword ? 'password' : 'text'}\r\n                          _autoComplete=\"new-password\"\r\n                          _value={passwordValue}\r\n                          _onChange={(e: any) => this.handlePassChange(e)}\r\n                          _error={passErrorMsg}\r\n                          _required={true}\r\n                          _fullWidth={true}\r\n                          _endIcon={\r\n                            {\r\n                              _withButton: true,\r\n                              _icon: (\r\n                                <Fragment>\r\n                                  {showPassword ? (\r\n                                    <VisibilityOff fontSize=\"small\" />\r\n                                  ) : (\r\n                                    <Visibility fontSize=\"small\" />\r\n                                  )}\r\n                                </Fragment>\r\n                              ),\r\n                              _position: \"end\",\r\n                              _edge: \"end\",\r\n                              _size: \"small\",\r\n                              _onClick: this.handleClickShowPassword\r\n                            }\r\n                          }\r\n                        />\r\n                          <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\" spacing={2}>\r\n                            <Grid item xs={12} md={6} lg={6}>\r\n                              <IkiInput \r\n                                _label=\"New Password\"\r\n                                _placeholder=\"Enter new Password\"\r\n                                _type={showPassword2 ? 'password' : 'text'}\r\n                                _autoComplete=\"new-password\"\r\n                                _value={passwordValue2}\r\n                                _onChange={(e: any) => this.handlePassChange2(e)}\r\n                                _error={passErrorMsg2}\r\n                                _required={true}\r\n                                _fullWidth={true}\r\n                                _endIcon={\r\n                                  {\r\n                                    _withButton: true,\r\n                                    _icon: (\r\n                                      <Fragment>\r\n                                        {showPassword2 ? (\r\n                                          <VisibilityOff fontSize=\"small\" />\r\n                                        ) : (\r\n                                          <Visibility fontSize=\"small\" />\r\n                                        )}\r\n                                      </Fragment>\r\n                                    ),\r\n                                    _position: \"end\",\r\n                                    _edge: \"end\",\r\n                                    _size: \"small\",\r\n                                    _onClick: this.handleClickShowPassword2\r\n                                  }\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6} lg={6}>\r\n                              <IkiInput \r\n                                  _label=\"Confirm Password\"\r\n                                  _placeholder=\"Enter new Password again\"\r\n                                  _type={showPassword3 ? 'password' : 'text'}\r\n                                  _autoComplete=\"new-password\"\r\n                                  _value={passwordValue3}\r\n                                  _onChange={(e: any) => this.handlePassChange3(e)}\r\n                                  _error={passErrorMsg3}\r\n                                  _required={true}\r\n                                  _fullWidth={true}\r\n                                  _endIcon={\r\n                                    {\r\n                                      _withButton: true,\r\n                                      _icon: (\r\n                                        <Fragment>\r\n                                          {showPassword3 ? (\r\n                                            <VisibilityOff fontSize=\"small\" />\r\n                                          ) : (\r\n                                            <Visibility fontSize=\"small\" />\r\n                                          )}\r\n                                        </Fragment>\r\n                                      ),\r\n                                      _position: \"end\",\r\n                                      _edge: \"end\",\r\n                                      _size: \"small\",\r\n                                      _onClick: this.handleClickShowPassword3\r\n                                    }\r\n                                  }\r\n                                />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <div className=\"has-txt-right footer\">\r\n                          {verificationCodeSubmitErrorState === true &&\r\n                            <Box mt={4} mb={4}>\r\n                              <div className=\"submit-error\">{verificationCodeSubmitErrorMsg}</div>\r\n                            </Box>\r\n                          }\r\n                          <Box mt={2} className=\"txt-right\">\r\n                            <IkiButton\r\n                              _variant='contained'\r\n                              _color='primary'\r\n                              _label=\"Update\"\r\n                              _type='submit'\r\n                              _fullWidth={false}\r\n                              _loading={false}\r\n                              _disabled={resetpassSubmitSuccessState}\r\n                            />\r\n                          </Box>\r\n                          </div>\r\n                        </form>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n        <SnackbarMsg\r\n          snackbarOpen={this.state.snackbarOpen}\r\n          snackbarType={this.state.snackbarType}\r\n          snackbarMsg={this.state.snackbarMessage}\r\n          onSnackbarClose={this.handleSnackbarClose}\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileComponent;\r\n","import { State } from '../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n  handleCleanSession,\r\n  handleProjectReturn\r\n} from '../../actions';\r\nimport ProfileComponent from './profile-component';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  cleanSession: () => {\r\n    dispatch(handleCleanSession())\r\n  },\r\n  fireReturnToProject: (sourcePage: string) => {\r\n    dispatch(handleProjectReturn(sourcePage))\r\n  },\r\n});\r\nconst mapStateToProps = (state: State) => ({\r\n  email: state.userReducerState.email,\r\n  metabaseLoginId: state.flowReducerState.metabaseLoginId,\r\n  activeProjectId: state.flowReducerState.activeProjectId,\r\n});\r\n\r\nexport const ProfileContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProfileComponent);\r\n","import React, { Component } from 'react';\r\nimport { \r\n    ButtonGroup\r\n} from '@material-ui/core';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './ButtonGroup.module.scss';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Form Element -> Button Group Component based on MaterialUI but customized for Ikigai\r\n   * @param _label Label - string\r\n   * @param _variant Variant - string - e.g contained | outlined\r\n   * @param _color Color - string - e.g primary | secondary\r\n   * @param _type Button type - string - e.g submit | button\r\n   * @param _error Error message - string\r\n   * @param _disabled Is Button disabeld - boolean - true | false\r\n   */\r\nexport default class IkiButtonGroup extends Component {\r\n  render() {\r\n    const { \r\n      _variant, \r\n      _color,\r\n      _buttons\r\n    } = this.props;\r\n    //const _endIcon = this.props._endIcon ? this.props._endIcon : '';\r\n    const _size = this.props._size ? this.props._size : 'small';\r\n    const _disabled = this.props._disabled ? this.props._disabled : false;\r\n    //console.log(\"IkiButtonGroup props: \", this.props);\r\n    var buttonGroupClass = cx({\r\n      buttonGroup: true,\r\n      'primary': _color === 'primary',\r\n      'secondary': _color === 'secondary'\r\n    });\r\n    return(\r\n      <>\r\n        <ButtonGroup\r\n            variant={_variant}\r\n            size={_size}\r\n            color={_color}\r\n            disabled={_disabled}\r\n            className={buttonGroupClass}\r\n        >\r\n            {_buttons}\r\n        </ButtonGroup>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport {\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport IkiPopupMenu from '../IkiPopupMenu';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './ItemBox.module.scss';\r\n\r\nlet cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Item Box\r\n   * @param _type Type - string\r\n   */\r\nexport default class IkiItemBox extends Component {\r\n\r\n  state = {\r\n    clickedOnBoxMenu: false\r\n  }\r\n\r\n  handleOnBoxMenuClick = () => {\r\n    //console.log(\"clicked box menu\");\r\n    this.setState({ clickedOnBoxMenu: true })\r\n  }\r\n\r\n  handleCloseBoxMenuClick = () => {\r\n    this.setState({ clickedOnBoxMenu: false })\r\n  }\r\n\r\n  handleBoxClick = (_type, _id, _functions, _data) => {\r\n    //console.log(\"_functions: \", _functions);\r\n    if(_type === 'Project' || _type === 'Flow') {\r\n      _functions[0].edit(_id);\r\n    } else if(_type === 'Dataset') {\r\n      _functions[3].browse(_id);\r\n    } else if(_type === 'Dashboard') {\r\n      _functions[2].browse(_id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      _type,\r\n      _icon,\r\n      //_link,\r\n      _functions\r\n    } = this.props;\r\n    \r\n    let _title= '', _id = '', _owner = '', _data;\r\n    if(this.props._data) {\r\n      _data = this.props._data;\r\n\r\n      if(_type === 'Project') {\r\n        _title = _data.name ? _data.name : '';\r\n        _id = _data.project_id ? _data.project_id : '';\r\n        _owner = _data.owner ? _data.owner : '';\r\n      } else if(_type === 'Flow') {\r\n        _title = _data.name ? _data.name : '';\r\n        _id = _data.pipeline_id ? _data.pipeline_id : '';\r\n      } else if(_type === 'Dataset') {\r\n        _title = _data.name ? _data.name : '';\r\n        _id = _data.dataset_id ? _data.dataset_id : '';\r\n      }else if(_type === 'Dashboard') {\r\n        _title = _data.name ? _data.name : '';\r\n        _id = _data.dashboard_id ? _data.dashboard_id : '';\r\n      }\r\n    }\r\n\r\n    const _uploadInfo = this.props._uploadInfo ? this.props._uploadInfo : [];\r\n    var uploadStatus = false, percentCompleted = 0, percentCompletedFormated = '0.00', objectUploading = [];\r\n    if(_uploadInfo && _uploadInfo.length > 0){\r\n      //console.log(\"_uploadInfo: \", _uploadInfo, \", _id: \", _id);\r\n      objectUploading = _uploadInfo.filter((uploadingObject) => {\r\n        return uploadingObject.status !== 'complete' && uploadingObject.datasetId === _id\r\n      })\r\n      if(objectUploading.length > 0){\r\n        var objectUploadingIndex = objectUploading.length - 1;\r\n        //console.log(\"objectUploadingIndex: \", objectUploadingIndex, \", objectUploading: \", objectUploading);\r\n        uploadStatus = true;\r\n        percentCompleted = _uploadInfo[objectUploadingIndex].percentCompleted;\r\n        percentCompletedFormated = percentCompleted.toFixed(2);\r\n      }\r\n      //console.log(\"objectUploading: \", objectUploading, \", percentCompleted: \", percentCompleted)\r\n    }\r\n\r\n    var boxClass = cx({\r\n      itemBox: true,\r\n      'clicked': this.state.clickedOnBoxMenu,\r\n      'uploading': uploadStatus\r\n    });\r\n    //console.log(\"IkiItemBox: \", this.props, \", _uploadInfo: \", _uploadInfo);\r\n    return(\r\n      <>\r\n        <div className={boxClass}>\r\n          <div className={styles.header}>\r\n            <span className={styles.icon}>{_icon}</span>\r\n            <span className={styles.type}>{_type}</span>\r\n            {_functions !== '' && (\r\n              <span className={styles.menu}>\r\n                <IkiPopupMenu\r\n                  _type={_type}\r\n                  _data={\r\n                    { \r\n                      _id: _id,\r\n                      _name: _title,\r\n                      ..._data\r\n                    }\r\n                  }\r\n                  _functions={_functions}\r\n                  _open={() => this.handleOnBoxMenuClick()}\r\n                  _close={() => this.handleCloseBoxMenuClick()}\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className={styles.content}>\r\n            <div \r\n              className={\r\n                uploadStatus ? '' : styles.link\r\n              }\r\n              onClick={() => \r\n                !uploadStatus && (this.handleBoxClick(_type, _id, _functions, _data))\r\n              }\r\n            >\r\n              <div className={styles.title}>\r\n                {_title}\r\n              </div>\r\n              <div className={styles.faded1}>\r\n                {_id}\r\n              </div>\r\n              {_owner !== '' && (\r\n                <div className={styles.newSection}>\r\n                  <div className={styles.faded1}>Owner</div>\r\n                  <div>{_owner}</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {uploadStatus && (\r\n            <div className={styles.uploadingDatabox}>\r\n              <div>\r\n                <LinearProgress className={styles.linearProgress} variant=\"determinate\" color=\"primary\" value={percentCompleted} />\r\n                <span className=\"linear-progress-val\"> {percentCompletedFormated} %</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport IkiItemBox from '../IkiItemBox';\r\n//import classNames from 'classnames/bind';\r\nimport styles from './Grid.module.scss';\r\n\r\n//let cx = classNames.bind(styles);\r\n\r\n/**\r\n   * Grid\r\n   * @param _type Type - string\r\n   */\r\nexport default class IkiGrid extends Component {\r\n  render() {\r\n    const { \r\n      _type,\r\n      _icon,\r\n      _link,\r\n      _data\r\n    } = this.props;\r\n    const _functions = this.props._functions ? this.props._functions : '';\r\n    const _uploadInfo = this.props._uploadInfo ? this.props._uploadInfo : [];\r\n    //console.log(\"IkiGrid: \", this.props);\r\n    return(\r\n      <>\r\n        <div className={styles.grid}>\r\n          {_data.map((item, num) => (\r\n            <IkiItemBox\r\n              key={num}\r\n              _type={_type}\r\n              _icon={_icon}\r\n              _link={_link}\r\n              _data={item}\r\n              _functions={_functions}\r\n              _uploadInfo={_uploadInfo}\r\n            /> \r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TablePagination\r\n} from '@material-ui/core';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\r\nimport FolderOutlinedIcon from '@material-ui/icons/FolderOutlined';\r\nimport IkiLoader from './../../components/IkiLoader';\r\nimport SnackbarMsg from './../../components/SnackbarMsg';\r\nimport IkiPageHeader from '../../components/IkiLayout/IkiPageHeader'\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiButtonGroup from '../../components/IkiFormElements/IkiButtonGroup';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\nimport IkiGrid from '../../components/IkiLayout/IkiGrid';\r\nimport IkiDialog from '../../components/IkiDialog';\r\nimport IkiTable from '../../components/IkiLayout/IkiTable';\r\nimport { getCookie, removeCookie } from '../../util/cookie';\r\nimport {\r\n  ShareProjectDialog,\r\n  DuplicateProjectDialog\r\n} from '../../components/dialogs';\r\nimport {\r\n  shareProject,\r\n  exitSession as exitSessionManually\r\n} from './../../services/app-data.service';\r\n\r\n//import './projects-style.scss';\r\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\r\n// import { kMaxLength } from 'buffer';\r\n\r\ntype ProjectsProps = {\r\n  projectsLoaded: boolean;\r\n  projectsLoadedError: string;\r\n  projects: any;\r\n  data: any;\r\n  classes: any;\r\n  history: any;\r\n  createNewProject: (name: string) => void;\r\n  deleteProject: (id: string) => void;\r\n  duplicateProject: (projectId: string, name: string, targetUser: string) => void;\r\n  email: string;\r\n  metabaseLoginId: string;\r\n  activeProjectId: string;\r\n  cleanSession: () => void;\r\n  fireReturnToProject: (sourcePage: string) => void;\r\n};\r\ntype ProjectsState = {\r\n  sort: string;\r\n  newProjectDialogState: boolean;\r\n  newProjectName: string;\r\n  deleteDialogState: boolean;\r\n  deleteProjectID: string;\r\n  tblRowActionBtnState: boolean;\r\n  newProjectNameError: boolean;\r\n  newProjectNameErrorMsg: string;\r\n  snackbarCreateProSuccessState: boolean;\r\n  projectDeleteDialogState: boolean;\r\n  deleteDialogProjectID: string;\r\n  deleteDialogProjectName: string;\r\n  projectShareDialogState: boolean;\r\n  shareDialogProjectID: string;\r\n  shareDialogProjectName: string;\r\n  duplicateDialogProjectID: string;\r\n  duplicateDialogProjectName: string;\r\n  duplicateDialogProjectState: boolean;\r\n  emailValidation: boolean;\r\n  emailErrorMsg: string;\r\n  projectShareDialogErrorState: boolean;\r\n  projectShareDialogErrorMsg: string;\r\n  rowsPerPage: number;\r\n  page: number;\r\n  searchTerm: string;\r\n  projectsFilter: string;\r\n  renderAsList: boolean;\r\n  tableSortAsc: boolean;\r\n  tableSortProperty: string;\r\n  clickedBox: string;\r\n  snackbarOpen: boolean;\r\n  snackbarMessage: any;\r\n  snackbarType: string;\r\n  sharingLoading: boolean;\r\n  newProjectLoading: boolean;\r\n  deletingLoading: boolean;\r\n  duplicateLoading: boolean;\r\n};\r\n\r\nclass ProjectsComponent extends Component<ProjectsProps, ProjectsState> {\r\n  filterOptions: any = [];\r\n  state = {\r\n    sort: 'all',\r\n    newProjectDialogState: false,\r\n    newProjectName: '',\r\n    newProjectNameError: false,\r\n    newProjectNameErrorMsg: '',\r\n    deleteDialogState: false,\r\n    deleteProjectID: '',\r\n    tblRowActionBtnState: false,\r\n    snackbarCreateProSuccessState: false,\r\n    projectDeleteDialogState: false,\r\n    deleteDialogProjectID: '',\r\n    deleteDialogProjectName: '',\r\n    projectShareDialogState: false,\r\n    shareDialogProjectID: '',\r\n    shareDialogProjectName: '',\r\n    emailValidation: true,\r\n    emailErrorMsg: '',\r\n    projectShareDialogErrorState: false,\r\n    projectShareDialogErrorMsg: '',\r\n    rowsPerPage: 16,\r\n    page: 0,\r\n    searchTerm: '',\r\n    projectsFilter: 'all',\r\n    renderAsList: true,\r\n    tableSortAsc: true,\r\n    tableSortProperty: '',\r\n    clickedBox: '',\r\n    snackbarOpen: false,\r\n    snackbarMessage: null,\r\n    snackbarType: '',\r\n    sharingLoading: false,\r\n    newProjectLoading: false,\r\n    deletingLoading: false,\r\n    duplicateDialogProjectID: '',\r\n    duplicateDialogProjectName: '',\r\n    duplicateDialogProjectState: false,\r\n    duplicateLoading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.cleanSession();\r\n    //console.log('Projects props...', this.props);\r\n    //console.log('ProjectsComponent props...', this.props);\r\n    //var activeProjectId = '';\r\n    //var ikiProject_cookie = '';\r\n    //ikiProject_cookie = getCookie('ikiProject');\r\n    //console.log('ikiProject_cookie: ', ikiProject_cookie);\r\n    /*this.props.fireReturnToProject(\"projects\");\r\n    if(this.props.activeProjectId !== '') {\r\n      activeProjectId = this.props.activeProjectId;\r\n    } \r\n\r\n    if(activeProjectId !== '') {\r\n      exitSessionManually(activeProjectId).then((exitSessRes: any) => {\r\n        this.props.cleanSession();\r\n      }).catch((exitSessErr: any) => {\r\n        //this.props.cleanSession();\r\n      });\r\n    }*/\r\n\r\n    this.filterOptions = [\r\n      {\r\n        value: 'all',\r\n        text: 'All projects'\r\n      },\r\n      {\r\n        value: 'shared',\r\n        text: 'Shared with me'\r\n      }\r\n    ]\r\n  }\r\n\r\n  handleEditProject = (projectId: string) => {\r\n    this.props.history.push(`/dashboard/project/${projectId}`);\r\n  };\r\n\r\n  handleClickOverBox = (boxID: string) => {\r\n    //let className = e.target.parentElement.className.split(' ')[0];\r\n    //console.log(\"className: \" + className);\r\n    this.setState({ clickedBox: boxID });\r\n  };\r\n\r\n  handleCloseClickOverBox = (boxID: string) => {\r\n    this.setState({ clickedBox: '' });\r\n  };\r\n\r\n  handleDeleteProjectDialog = (projectId: string, projectName: string) => {\r\n    this.setState({\r\n      deleteDialogProjectID: projectId,\r\n      deleteDialogProjectName: projectName,\r\n      projectDeleteDialogState: true\r\n    });\r\n  };\r\n\r\n  handleShareProjectDialog = (projectId: string, projectName: string) => {\r\n    this.setState({\r\n      shareDialogProjectID: projectId,\r\n      shareDialogProjectName: projectName,\r\n      projectShareDialogState: true\r\n    });\r\n  };\r\n\r\n  handleDuplicateProjectDialog = (projectId: string, projectName: string) => {\r\n    this.setState({\r\n      duplicateDialogProjectID: projectId,\r\n      duplicateDialogProjectName: projectName,\r\n      duplicateDialogProjectState: true\r\n    });\r\n  };\r\n\r\n  /* handleDeleteProject = (projectId: string) => {\r\n    this.props.deleteProject(projectId);\r\n    this.setState({ projectDeleteDialogState: false });\r\n  }; */\r\n\r\n  handleDialogOpen = () => {\r\n    this.setState({\r\n      newProjectDialogState: true\r\n    });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      newProjectDialogState: false,\r\n      newProjectName: '',\r\n      projectDeleteDialogState: false,\r\n      newProjectNameError: false,\r\n      newProjectNameErrorMsg: '',\r\n      projectShareDialogState: false,\r\n      projectShareDialogErrorState: false,\r\n      projectShareDialogErrorMsg: '',\r\n      duplicateDialogProjectState: false\r\n    });\r\n  };\r\n\r\n  handleDialogSave = () => {\r\n    var projectsArray = this.props.projects;\r\n    var checkProjectNameOverlap = false;\r\n    // eslint-disable-next-line\r\n    {\r\n      projectsArray.map((projectData: any) => {\r\n        if (projectData.name === this.state.newProjectName) {\r\n          //console.log(\"HITHITHIT!!! - NAME: \" + this.state.newProjectName + \", name: \" + projectData.name);\r\n          checkProjectNameOverlap = true;\r\n        }\r\n        return ''\r\n      })\r\n    }\r\n    this.setState({ newProjectLoading: true })\r\n    var newProjectName = this.state.newProjectName;\r\n    if (newProjectName === '') {\r\n      this.setState({\r\n        newProjectNameError: true,\r\n        newProjectLoading: false,\r\n        newProjectNameErrorMsg: 'Project name required'\r\n      });\r\n    } else if (checkProjectNameOverlap !== false) {\r\n      this.setState({\r\n        newProjectNameError: true,\r\n        newProjectLoading: false,\r\n        newProjectNameErrorMsg:\r\n          'Project with same name already exists. Please choose different name'\r\n      });\r\n    } else {\r\n      this.props.createNewProject(newProjectName);\r\n      setTimeout(() => {\r\n        this.setState({\r\n          newProjectNameError: false,\r\n          newProjectNameErrorMsg: '',\r\n          newProjectDialogState: false,\r\n          snackbarMessage: (\r\n            <Fragment>\r\n              <div className=\"msg\">\r\n                You have succesfully created new project\r\n              </div>\r\n              <div className=\"val\">{newProjectName}</div>\r\n            </Fragment>\r\n          ),\r\n          snackbarType: 'success',\r\n          snackbarOpen: true,\r\n          newProjectName: '',\r\n          newProjectLoading: false\r\n        });\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id: string) => {\r\n    this.setState({\r\n      deleteDialogState: true,\r\n      deleteProjectID: id\r\n    });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({\r\n      deleteDialogState: false,\r\n      deleteProjectID: ''\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  /* handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setAge(event.target.value as string);\r\n  };\r\n\r\n  handleTableActionBtn = () => {\r\n    if(this.state.tblRowActionBtnState === false){\r\n      this.setState({ tblRowActionBtnState: true });\r\n    }else{\r\n      this.setState({ tblRowActionBtnState: false });\r\n    }\r\n  } */\r\n\r\n  handleTableActionBtn = () => {\r\n    if (this.state.tblRowActionBtnState === false) {\r\n      this.setState({ tblRowActionBtnState: true });\r\n    } else {\r\n      this.setState({ tblRowActionBtnState: false });\r\n    }\r\n  };\r\n\r\n  handleTableActionBtnOpen = () => {\r\n    this.setState({ tblRowActionBtnState: true });\r\n  };\r\n\r\n  handleOpenSuccesSnackbar = () => {\r\n    this.setState({ snackbarCreateProSuccessState: true });\r\n  };\r\n\r\n  handleCloseSuccesSnackbar = () => {\r\n    this.setState({ snackbarCreateProSuccessState: false });\r\n  };\r\n\r\n  handleOpenShareSuccesSnackbar = () => {\r\n    this.setState({ snackbarOpen: true });\r\n  };\r\n\r\n  handleCloseShareSuccesSnackbar = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  handleDeleteDialogCancel = () => {\r\n    this.setState({ projectDeleteDialogState: false });\r\n  };\r\n\r\n  handleDeleteDialogSubmit = () => {\r\n    this.setState({ deletingLoading: true });\r\n    this.props.deleteProject(this.state.deleteDialogProjectID);\r\n    setTimeout(() => {\r\n      this.setState({\r\n        projectDeleteDialogState: false,\r\n        snackbarMessage: (\r\n          <Fragment>\r\n            <div className=\"msg\">You have succesfully deleted project</div>\r\n            <div className=\"val\">{this.state.deleteDialogProjectName}</div>\r\n          </Fragment>\r\n        ),\r\n        snackbarType: 'success',\r\n        snackbarOpen: true,\r\n        deletingLoading: false\r\n      });\r\n    }, 1500);\r\n  };\r\n\r\n  handleShareDialogCancel = () => {\r\n    this.setState({\r\n      projectShareDialogState: false,\r\n      projectShareDialogErrorState: false,\r\n      projectShareDialogErrorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event: unknown, newPage: number) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setRowsPerPage(parseInt(event.target.value, 10));\r\n    this.setPage(0);\r\n  };\r\n\r\n  setPage = (page: number) => {\r\n    this.setState({ page: page });\r\n  };\r\n\r\n  setRowsPerPage = (rows: number) => {\r\n    this.setState({ rowsPerPage: rows });\r\n  };\r\n\r\n  handleChangeSearchTerm = (e: any) => {\r\n    this.setState({\r\n      searchTerm: e.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeProjectFilter = (e: any) => {\r\n    this.setState({\r\n      projectsFilter: e.target.value\r\n    });\r\n  };\r\n\r\n  filterProjects = (projects: any) => {\r\n    if (this.state.projectsFilter === 'shared') {\r\n      projects = projects.filter(\r\n        (p: any) => p.owner !== this.props.email\r\n      );\r\n    }\r\n    if (this.state.searchTerm !== '') {\r\n      projects = projects.filter(\r\n        (p: any) =>\r\n          p.name\r\n            .toLowerCase()\r\n            .indexOf(this.state.searchTerm.toLowerCase()) > -1\r\n      );\r\n    }\r\n    return projects;\r\n  };\r\n\r\n  handleRenderAsList = () => {\r\n    this.setState({ renderAsList: true });\r\n  };\r\n\r\n  handleRenderAsGrid = () => {\r\n    this.setState({ renderAsList: false });\r\n  };\r\n\r\n  viewTypeSwitchButtons = () => {\r\n    const buttons = [\r\n      <Button\r\n        key={1}\r\n        color={this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsList()}\r\n      >\r\n        <ViewListIcon />\r\n      </Button>,\r\n      <Button\r\n        key={2}\r\n        color={!this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsGrid()}\r\n      >\r\n        <ViewComfyIcon />\r\n      </Button>\r\n    ]\r\n    return buttons\r\n  }\r\n\r\n  getProjectFilters = (projects: any) => {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"filters-and-pagination\">\r\n          <div className=\"table-filters\">\r\n            <IkiInput \r\n              _label=\"\"\r\n              _placeholder=\"Search...\"\r\n              _type='text'\r\n              _autoComplete=\"new-password\"\r\n              _value={this.state.searchTerm}\r\n              _size=\"small\"\r\n              _margin=\"none\"\r\n              _filterType={true}\r\n              _onChange={(e: any) => this.handleChangeSearchTerm(e)}\r\n              _startIcon={\r\n                {\r\n                  _icon: (\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  )\r\n                }\r\n              }\r\n            />\r\n            <IkiInput \r\n              _label=\"\"\r\n              _placeholder=\"\"\r\n              _type='text'\r\n              _autoComplete=\"new-password\"\r\n              _value={this.state.projectsFilter}\r\n              _size=\"small\"\r\n              _margin=\"none\"\r\n              _filterType={true}\r\n              _isSelect={true}\r\n              _selectOptions={this.filterOptions}\r\n              _selectOptionsKeyForVal='value'\r\n              _selectOptionsKeyForTxt='text'\r\n              _onChange={(e: any) => this.handleChangeProjectFilter(e)}\r\n            />\r\n            <IkiButtonGroup\r\n              _variant=\"contained\"\r\n              _size=\"small\"\r\n              _color=\"secondary\"\r\n              _buttons={\r\n                this.viewTypeSwitchButtons()  \r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"table-pagination\">\r\n            <TablePagination\r\n              component=\"div\"\r\n              labelRowsPerPage=\"Projects per page\"\r\n              rowsPerPageOptions={[8, 16, 32]}\r\n              colSpan={3}\r\n              count={projects.length}\r\n              rowsPerPage={this.state.rowsPerPage}\r\n              page={this.state.page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'Projects per page'\r\n                }\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  onRequestSort = (event: any, property: string) => {\r\n    this.setState({\r\n      tableSortAsc: !this.state.tableSortAsc,\r\n      tableSortProperty: property\r\n    });\r\n  };\r\n\r\n  sortProjects = (projects: any) => {\r\n    if (this.state.tableSortProperty !== '') {\r\n      return this.sortOn(projects, this.state.tableSortProperty);\r\n    } else {\r\n      return projects;\r\n    }\r\n  };\r\n\r\n  sortOn = (arr: any, property: string) => {\r\n    //console.log(this.state.tableSortAsc);\r\n    var sortedArray = arr.sort((a: any, b: any) => {\r\n      if (b[property] < a[property]) {\r\n        return this.state.tableSortAsc ? 1 : -1;\r\n      }\r\n      if (b[property] > a[property]) {\r\n        return this.state.tableSortAsc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n    return sortedArray;\r\n  };\r\n\r\n  getProjectsList = () => {\r\n    var { projectsLoaded, projects, metabaseLoginId } = this.props;\r\n    const { page, rowsPerPage } = this.state;\r\n    if (projectsLoaded && (metabaseLoginId === \"\" || metabaseLoginId === undefined)) {\r\n      //console.log(\"projects: \");\r\n      //console.log(projects);\r\n      projects = this.sortProjects(this.filterProjects(projects));\r\n      var pageProjects = projects.slice(\r\n        page * rowsPerPage,\r\n        page * rowsPerPage + rowsPerPage\r\n      );\r\n      if (pageProjects.length === 0) {\r\n        return (\r\n          <div className=\"cardbox-holder\">\r\n            {this.getProjectFilters(projects)}\r\n            <Grid item xs={12}>\r\n              <Box display=\"flex\" alignItems=\"center\" className=\"no-results\">\r\n                <FindInPageIcon className=\"no-results-icon\" />\r\n                <span className=\"no-results-txt\">No projects found</span>\r\n              </Box>\r\n            </Grid>\r\n          </div>\r\n        );\r\n      } else {\r\n        /*{pageProjects.map((projectData: any) => {\r\n          console.log(\"projectData: \");\r\n          console.log(projectData);\r\n        });\r\n        }*/\r\n        return (\r\n          <div className=\"cardbox-holder\">\r\n            {this.getProjectFilters(projects)}\r\n            {this.state.renderAsList && (\r\n              <Grid item xs={12} className=\"i-pb-0\">\r\n                <Card className=\"cardbox has-table tableHolder\">\r\n                  <CardContent className=\"content table-inside\">\r\n                    <IkiTable\r\n                          _type=\"Project\"\r\n                          _link='/dashboard/project/'\r\n                          _header={\r\n                            [\r\n                              {\r\n                                key: 'name',\r\n                                name: 'Project'\r\n                              },\r\n                              {\r\n                                key: 'project_id',\r\n                                name: 'ID'\r\n                              },\r\n                              {\r\n                                key: 'owner',\r\n                                name: 'Owner'\r\n                              }\r\n                            ]\r\n                          }\r\n                          _data={pageProjects}\r\n                          _functions={\r\n                            [\r\n                              {\r\n                                edit: (itemId: string) => this.handleEditProject(itemId)\r\n                              },\r\n                              {\r\n                                delete: (itemId: string, itemName: string) => this.handleDeleteProjectDialog(itemId, itemName)\r\n                              },\r\n                              {\r\n                                share: (itemId: string, itemName: string) => this.handleShareProjectDialog(itemId, itemName)\r\n                              },\r\n                              {\r\n                                clone: (itemId: string, itemName: string) => this.handleDuplicateProjectDialog(itemId, itemName)\r\n                              }\r\n                            ]\r\n                          }\r\n                      />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            )}\r\n            {!this.state.renderAsList &&\r\n              <IkiGrid\r\n                _type='Project'\r\n                _link='/dashboard/project/'\r\n                _icon={<FolderOutlinedIcon />}\r\n                _data={pageProjects}\r\n                _functions={\r\n                  [\r\n                    {\r\n                      edit: (itemId: string) => this.handleEditProject(itemId)\r\n                    },\r\n                    {\r\n                      delete: (itemId: string, itemName: string) => this.handleDeleteProjectDialog(itemId, itemName)\r\n                    },\r\n                    {\r\n                      share: (itemId: string, itemName: string) => this.handleShareProjectDialog(itemId, itemName)\r\n                    },\r\n                    {\r\n                      clone: (itemId: string, itemName: string) => this.handleDuplicateProjectDialog(itemId, itemName)\r\n                    }\r\n                  ]\r\n                }\r\n              />\r\n            }\r\n            {projects.length > this.state.rowsPerPage && (\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  className=\"pagination-sm\"\r\n                  labelRowsPerPage=\"Projects per page\"\r\n                  rowsPerPageOptions={[8, 16, 32]}\r\n                  colSpan={3}\r\n                  count={projects.length}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      'aria-label': 'Projects per page'\r\n                    }\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n                />\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      //return <Loader />;\r\n      return null;\r\n    }\r\n  };\r\n\r\n  handleDuplicateProjectDialogSubmit = (projectId: string, newProjectName: string, targetUser: string) => {\r\n    this.setState({ duplicateLoading: true });\r\n    //console.log(\"projectId: \" + projectId + \", newProjectName: \" + newProjectName);\r\n    //console.log(\"handleDuplicateProjectDialogSubmit - this.props.projects: \");\r\n    //console.log(this.props.projects);\r\n    var matchProjects_Arr = this.props.projects.filter(\r\n      (p: any) => p.name === newProjectName\r\n    );\r\n    //console.log(\"dp newProject: \");\r\n    //console.log(matchProjects_Arr);\r\n    if (Object.keys(matchProjects_Arr).length > 0) {\r\n      //console.log(\"COPY name\");\r\n      setTimeout(() => {\r\n        this.setState({\r\n          duplicateDialogProjectState: false,\r\n          snackbarMessage: (\r\n            <Fragment>\r\n              <div className=\"msg\">Project with same name already exists. Please choose different name</div>\r\n            </Fragment>\r\n          ),\r\n          snackbarType: 'error',\r\n          snackbarOpen: true,\r\n          duplicateDialogProjectID: '',\r\n          duplicateDialogProjectName: '',\r\n          duplicateLoading: false\r\n        });\r\n      }, 1500);\r\n    } else {\r\n      //console.log(\"valid name\");\r\n      var duplicateAPIError: boolean = false;\r\n      try {\r\n        this.props.duplicateProject(projectId, newProjectName, targetUser);\r\n      } catch (error) {\r\n        //console.log(\"error: \", error);\r\n        duplicateAPIError = true;\r\n      }\r\n      if (duplicateAPIError) {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            duplicateDialogProjectState: false,\r\n            snackbarMessage: (\r\n              <Fragment>\r\n                <div className=\"msg\">\r\n                  Something went wrong. Please try again\r\n                </div>\r\n              </Fragment>\r\n            ),\r\n            snackbarType: 'error',\r\n            snackbarOpen: true,\r\n            duplicateDialogProjectID: '',\r\n            duplicateDialogProjectName: '',\r\n            duplicateLoading: false\r\n          });\r\n        }, 1500);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            duplicateDialogProjectState: false,\r\n            snackbarMessage: (\r\n              <Fragment>\r\n                <div className=\"msg\">\r\n                  You have succesfully cloned project\r\n                </div>\r\n              </Fragment>\r\n            ),\r\n            snackbarType: 'success',\r\n            snackbarOpen: true,\r\n            duplicateDialogProjectID: '',\r\n            duplicateDialogProjectName: '',\r\n            duplicateLoading: false\r\n          });\r\n        }, 1500);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleShareDialogSubmit = (email: string) => {\r\n    this.setState({ sharingLoading: true });\r\n    try {\r\n      shareProject(this.state.shareDialogProjectID, email)\r\n        .then((res: any) => {\r\n          //console.log('try res.status: ' + res.status);\r\n          if (res.status === 200) {\r\n            //console.log('sharing success');\r\n            setTimeout(() => {\r\n              this.setState({\r\n                projectShareDialogState: false,\r\n                projectShareDialogErrorState: false,\r\n                projectShareDialogErrorMsg: '',\r\n                snackbarMessage: (\r\n                  <Fragment>\r\n                    <div className=\"msg\">\r\n                      You have succesfully shared project{' '}\r\n                      <span className=\"val\">\r\n                        {this.state.shareDialogProjectName}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      with user <span className=\"val\">{email}</span>\r\n                    </div>\r\n                  </Fragment>\r\n                ),\r\n                snackbarType: 'success',\r\n                snackbarOpen: true,\r\n                sharingLoading: false\r\n              });\r\n            }, 1500);\r\n          } else {\r\n            this.setState({\r\n              projectShareDialogErrorState: true,\r\n              projectShareDialogErrorMsg:\r\n                'Sharing failed! Check user email and try again.'\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          //console.log('try 2 res.status: ' + err);\r\n          this.setState({\r\n            projectShareDialogErrorState: true,\r\n            projectShareDialogErrorMsg:\r\n              'Sharing failed! Check user email and try again.',\r\n            sharingLoading: false\r\n          });\r\n        });\r\n    } catch (e) {\r\n      this.setState({\r\n        projectShareDialogState: false,\r\n        projectShareDialogErrorState: false,\r\n        projectShareDialogErrorMsg: '',\r\n        snackbarMessage: (\r\n          <Fragment>\r\n            <div className=\"msg\">\r\n              Sharing failed! Check user email and try again.\r\n            </div>\r\n          </Fragment>\r\n        ),\r\n        snackbarType: 'error',\r\n        snackbarOpen: true,\r\n        sharingLoading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"props metabaseLoginId: \" + this.props.metabaseLoginId);\r\n    //console.log(\"RENDER: \");\r\n    //console.log(this.props);\r\n    var { projectsLoaded, metabaseLoginId } = this.props;\r\n    if (projectsLoaded && (metabaseLoginId === \"\" || metabaseLoginId === undefined)) {\r\n      return (\r\n        <Fragment>\r\n          <Container className=\"main-container\" component=\"main\" maxWidth={false}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <IkiPageHeader\r\n                  _breadcrumbLink='/dashboard'\r\n                  _breadcrumbText='Dashboard'\r\n                  _breadcrumbTitle='Projects'\r\n                  _actionButtons={\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='primary'\r\n                      _label=\"New Project\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _loading={false}\r\n                      _startIcon={\r\n                        <i className=\"zmdi zmdi-plus zmdi-hc-fw\"></i>\r\n                        //<AddIcon />\r\n                      }\r\n                      _onClick={this.handleDialogOpen}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {this.getProjectsList()}\r\n          </Container>\r\n          <IkiDialog\r\n            _open={this.state.newProjectDialogState}\r\n            _onClose={this.handleDialogClose}\r\n            _type='regular'\r\n            _icon={false}\r\n            _title='New project'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _content={\r\n                <IkiInput \r\n                  _label=\"Project name\"\r\n                  _placeholder=\"Enter project name\"\r\n                  _type='text'\r\n                  _value={this.state.newProjectName}\r\n                  _onChange={(e: any) => {\r\n                    this.setState({\r\n                      newProjectName: e.target.value\r\n                    });\r\n                  }}\r\n                  _characterCounter={40}\r\n                  _autoFocus={true}\r\n                  _fullWidth={true}\r\n                  _error={this.state.newProjectNameErrorMsg}\r\n                />\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={this.handleDialogClose}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Create\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={this.state.newProjectLoading}\r\n                  _disabled={this.state.newProjectLoading}\r\n                  _isAlternate={true}\r\n                  _onClick={this.handleDialogSave}\r\n                />\r\n              </Fragment>\r\n            }\r\n          />\r\n\r\n          <IkiDialog\r\n            _open={this.state.projectDeleteDialogState}\r\n            _onClose={this.handleDialogClose}\r\n            _type='delete'\r\n            _icon={false}\r\n            _title='Delete project'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _align='center'\r\n            _content={\r\n              <>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{this.state.deleteDialogProjectID}</div>\r\n                  <div className=\"txt-dialog-impact1\">{this.state.deleteDialogProjectName}</div>\r\n                </div>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-impact2 error\">Are you sure ?</div>\r\n                  <div className=\"error\">\r\n                    All your pipelines inside will be deleted as well.\r\n                  </div>\r\n                </div>\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={this.handleDeleteDialogCancel}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Delete\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={this.state.deletingLoading}\r\n                  _disabled={this.state.deletingLoading}\r\n                  _isDanger={true}\r\n                  _onClick={this.handleDeleteDialogSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n          />\r\n          {/* <DeleteProjectDialog\r\n            projectId={this.state.deleteDialogProjectID}\r\n            projectName={this.state.deleteDialogProjectName}\r\n            handleDialogClose={this.handleDialogClose}\r\n            handleDeleteDialogSubmit={this.handleDeleteDialogSubmit}\r\n            handleDeleteDialogCancel={this.handleDeleteDialogCancel}\r\n            open={this.state.projectDeleteDialogState}\r\n            deleteSubmitLoading={this.state.deletingLoading}\r\n          /> */}\r\n          <ShareProjectDialog\r\n            handleDialogClose={this.handleDialogClose}\r\n            handleShareDialogCancel={this.handleShareDialogCancel}\r\n            open={this.state.projectShareDialogState}\r\n            projectId={this.state.shareDialogProjectID}\r\n            projectName={this.state.shareDialogProjectName}\r\n            projectShareDialogErrorState={this.state.projectShareDialogErrorState}\r\n            projectShareDialogErrorMsg={this.state.projectShareDialogErrorMsg}\r\n            onSubmit={this.handleShareDialogSubmit}\r\n            shareSubmitLoading={this.state.sharingLoading}\r\n          />\r\n          <DuplicateProjectDialog\r\n            projectID={this.state.duplicateDialogProjectID}\r\n            projectName={this.state.duplicateDialogProjectName}\r\n            open={this.state.duplicateDialogProjectState}\r\n            onSubmit={(projectId: string, newProjectName: string, targetUser: string) => this.handleDuplicateProjectDialogSubmit(projectId, newProjectName, targetUser)}\r\n            handleDialogClose={this.handleDialogClose}\r\n            duplicateSubmitLoading={this.state.duplicateLoading}\r\n          />\r\n          <SnackbarMsg\r\n            snackbarOpen={this.state.snackbarOpen}\r\n            snackbarType={this.state.snackbarType}\r\n            snackbarMsg={this.state.snackbarMessage}\r\n            onSnackbarClose={this.handleSnackbarClose}\r\n          />\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Container className=\"main-container\" component=\"main\" maxWidth={false}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <IkiLoader\r\n                  loadingTxt=\"Loading Projects...\"\r\n                  fadeOut={false}\r\n                  placement=\"next-to-nav\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProjectsComponent;\r\n","import { State } from './../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n  createProjectActionStart,\r\n  deleteProjectActionStart,\r\n  duplicateProjectActionStart,\r\n  handleCleanSession,\r\n  handleProjectReturn\r\n} from '../../actions';\r\nimport ProjectsComponent from './projects-component';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  createNewProject: (name: string) => {\r\n    dispatch(createProjectActionStart(name));\r\n  },\r\n  deleteProject: (id: string) => {\r\n    dispatch(deleteProjectActionStart(id));\r\n  },\r\n  duplicateProject: (projectId: string, name: string, targetUser: string) => {\r\n    dispatch(duplicateProjectActionStart(projectId, name, targetUser));\r\n  },\r\n  cleanSession: () => {\r\n    dispatch(handleCleanSession())\r\n  },\r\n  fireReturnToProject: (sourcePage: string) => {\r\n    dispatch(handleProjectReturn(sourcePage))\r\n  },\r\n});\r\nconst mapStateToProps = (state: State) => ({\r\n  projects: state.flowReducerState.projects,\r\n  projectsLoaded: state.flowReducerState.projectsLoaded,\r\n  projectsLoadedError: state.flowReducerState.projectsLoadedError,\r\n  email: state.userReducerState.email,\r\n  metabaseLoginId: state.flowReducerState.metabaseLoginId,\r\n  activeProjectId: state.flowReducerState.activeProjectId,\r\n});\r\n\r\nexport const ProjectsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectsComponent);\r\n","import React, { Fragment } from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\n\r\nexport default function MoreMenu(props: any) {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleClose();\r\n    props.onEdit();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    handleClose();\r\n    props.onDelete();\r\n  };\r\n\r\n  const handleShare = () => {\r\n    handleClose();\r\n    props.onShare();\r\n  };\r\n\r\n  const handleDuplicate = () => {\r\n    handleClose();\r\n    props.onDuplicate();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton className=\"more-button\" onClick={handleClick} size=\"small\">\r\n        <MoreHorizOutlinedIcon />\r\n      </IconButton>\r\n      <Menu\r\n        classes={{\r\n          paper: 'action-btn-menu'\r\n        }}\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleEdit}>\r\n          <EditIcon />\r\n          <span>Edit Project</span>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleDelete}>\r\n          <DeleteIcon />\r\n          <span>Delete Project</span>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleShare}>\r\n          <ShareIcon />\r\n          <span>Share Project</span>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleDuplicate}>\r\n          <FileCopyIcon />\r\n          <span>Clone Project</span>\r\n        </MenuItem>\r\n      </Menu>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  TablePagination,\r\n  Card,\r\n  CardContent\r\n} from '@material-ui/core';\r\n\r\nimport FileSaver from 'file-saver';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\r\nimport AccountTreeOutlinedIcon from '@material-ui/icons/AccountTreeOutlined';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport {\r\n  getPipeline,\r\n  createPipeline\r\n} from '../../../services/app-data.service';\r\nimport {\r\n  ImportFlowDialog,\r\n  CloneFlowDialog\r\n} from '../../../components/dialogs';\r\nimport SnackbarMsg from '../../../components/SnackbarMsg';\r\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\r\nimport IkiButton from '../../../components/IkiFormElements/IkiButton';\r\nimport IkiButtonGroup from '../../../components/IkiFormElements/IkiButtonGroup';\r\nimport IkiInput from '../../../components/IkiFormElements/IkiInput';\r\nimport IkiGrid from '../../../components/IkiLayout/IkiGrid';\r\nimport IkiDialog from '../../../components/IkiDialog';\r\nimport IkiTable from '../../../components/IkiLayout/IkiTable';\r\n\r\ntype FlowsProps = {\r\n  flows: any;\r\n  creatingFlow: boolean;\r\n  projects: any;\r\n  projectId: string;\r\n  subpageClick: (subpageLink: string) => void;\r\n  addFlow: (flowObj: any) => void;\r\n  deleteFlow: (flowObj: any) => void;\r\n};\r\n\r\ntype FlowsState = {\r\n  sort: string;\r\n  deleteDialogState: boolean;\r\n  deletePipeline: any;\r\n  deletePipelineName: string;\r\n  deletePipelineID: string;\r\n  selectedDatasetData?: any;\r\n  selectedDashData?: any;\r\n  newFlowDialogState: boolean;\r\n  newFlowName: string;\r\n  newFlowNameError: boolean;\r\n  newFlowNameErrorMsg: string;\r\n  projectId: string;\r\n  projectNameEditMode: Boolean;\r\n  title: string;\r\n  projectDeleteDialogState: boolean;\r\n  projectShareDialogState: boolean;\r\n  projectShareDialogErrorState: boolean;\r\n  projectShareDialogErrorMsg: string;\r\n  snackbarShareProSuccessState: boolean;\r\n  editProjectDialogState: boolean;\r\n  addDatasetDialogState: boolean;\r\n  addDashboardtDialogState: boolean;\r\n  addDatasetMinimize: boolean;\r\n  editDatasetDialogState: boolean;\r\n  editDashboardDialogState: boolean;\r\n  deleteDatasetDialogState: boolean;\r\n  uploadDatasetDialogState: boolean;\r\n  duplicateDialogProjectState: boolean;\r\n  importFlowDialogState: boolean;\r\n  importFlowNameExists: boolean;\r\n  tabValue: number;\r\n  datasetEditMode: boolean;\r\n  dashEditMode: boolean;\r\n  snackbarOpen: boolean;\r\n  snackbarMessage: any;\r\n  snackbarType: string;\r\n  sharingLoading: boolean;\r\n  renamingLoading: boolean;\r\n  deletingLoading: boolean;\r\n  newlyAddedDatasetNameExists: boolean;\r\n  newlyAddedDashNameExists: boolean;\r\n  addFlowLoading: boolean;\r\n  rowsPerPage: number;\r\n  page: number;\r\n  searchTerm: string;\r\n  flowsFilter: string;\r\n  renderAsList: boolean;\r\n  tableSortAsc: boolean;\r\n  tableSortProperty: string;\r\n  toggleFilterDisplay: boolean;\r\n  clickedBox: string;\r\n  cloneFlowDialogState: boolean;\r\n  cloneFlowId: string;\r\n  cloneFlowName: string;\r\n  cloneFlowNameError: boolean;\r\n  cloneFlowNameErrorMsg: string;\r\n  cloneProcess: boolean;\r\n  sessionCreated: boolean;\r\n  sessionID: string;\r\n  showContent: boolean;\r\n  loadingTxt: string;\r\n};\r\n\r\nclass FlowsComponent extends Component<FlowsProps, FlowsState> {\r\n  state: FlowsState = {\r\n    sort: 'all',\r\n    deletePipeline: null,\r\n    deleteDialogState: false,\r\n    deletePipelineName: '',\r\n    deletePipelineID: '',\r\n    newFlowDialogState: false,\r\n    newFlowName: '',\r\n    newFlowNameError: false,\r\n    newFlowNameErrorMsg: '',\r\n    projectId: '',\r\n    projectNameEditMode: false,\r\n    title: '',\r\n    projectDeleteDialogState: false,\r\n    projectShareDialogState: false,\r\n    projectShareDialogErrorState: false,\r\n    projectShareDialogErrorMsg: '',\r\n    snackbarShareProSuccessState: false,\r\n    editProjectDialogState: false,\r\n    addDatasetDialogState: false,\r\n    addDashboardtDialogState: false,\r\n    deleteDatasetDialogState: false,\r\n    uploadDatasetDialogState: false,\r\n    editDatasetDialogState: false,\r\n    editDashboardDialogState: false,\r\n    duplicateDialogProjectState: false,\r\n    tabValue: 0,\r\n    datasetEditMode: false,\r\n    addDatasetMinimize: false,\r\n    dashEditMode: false,\r\n    snackbarOpen: false,\r\n    snackbarMessage: null,\r\n    snackbarType: '',\r\n    sharingLoading: false,\r\n    renamingLoading: false,\r\n    deletingLoading: false,\r\n    newlyAddedDatasetNameExists: false,\r\n    newlyAddedDashNameExists: false,\r\n    addFlowLoading: false,\r\n    rowsPerPage: 16,\r\n    page: 0,\r\n    searchTerm: '',\r\n    flowsFilter: 'all',\r\n    renderAsList: false,\r\n    tableSortAsc: true,\r\n    tableSortProperty: '',\r\n    toggleFilterDisplay: false,\r\n    clickedBox: '',\r\n    importFlowDialogState: false,\r\n    importFlowNameExists: false,\r\n    cloneFlowDialogState: false,\r\n    cloneFlowId: '',\r\n    cloneFlowName: '',\r\n    cloneFlowNameError: false,\r\n    cloneFlowNameErrorMsg: '',\r\n    cloneProcess: false,\r\n    sessionCreated: false,\r\n    sessionID: '',\r\n    showContent: false,\r\n    loadingTxt: ''\r\n  };\r\n  componentDidMount() {\r\n    //console.log(\"this.props: \", this.props);\r\n  }\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  onRequestSort = (event: any, property: string) => {\r\n    this.setState({\r\n      tableSortAsc: !this.state.tableSortAsc,\r\n      tableSortProperty: property\r\n    });\r\n  };\r\n\r\n  handleDialogkOpen = (flow: any) => {\r\n    //console.log(\"handleDialogkOpen: \", flow);\r\n    this.setState({\r\n      deleteDialogState: true,\r\n      deletePipeline: flow,\r\n      deletePipelineName: flow._name,\r\n      deletePipelineID: flow._id\r\n    });\r\n    //console.log(\"deleteDialogState: \" + this.state.deleteDialogState)\r\n  };\r\n\r\n  handleOnDownloadClick(flowId: string, flowName: string) {\r\n    //console.log(\"flowId: \", flowId + \", flowName: \" + flowName);\r\n    getPipeline(flowId).then(\r\n      (pipelineData: any) => {\r\n        var definition = pipelineData.pipeline.definition;\r\n        if (definition.facets) {\r\n          definition.facets.map((facet: any) => {\r\n            if (\r\n              facet.facet_type === 'IMPORTED' &&\r\n              facet.facet_group === 'DATASET'\r\n            ) {\r\n              delete facet.arguments.bucket;\r\n              Object.keys(facet.arguments).map((key: string) => {\r\n                if (key === 'path' && facet.arguments[key]) {\r\n                  facet.arguments[key] = '';\r\n                }\r\n                return ''\r\n              });\r\n            } else if (\r\n              facet.facet_type === 'EXPORTED' &&\r\n              facet.facet_group === 'DATASET'\r\n            ) {\r\n              delete facet.arguments.bucket;\r\n              delete facet.arguments.project_id;\r\n              delete facet.arguments.user_email;\r\n              delete facet.arguments.dataset_id;\r\n              delete facet.arguments.overwrite;\r\n              // eslint-disable-next-line\r\n              Object.keys(facet.arguments).map((key: string) => {\r\n                if (\r\n                  (key === 'dataset_name') &&\r\n                  facet.arguments[key]\r\n                ) {\r\n                  facet.arguments[key] = '';\r\n                }\r\n              });\r\n            } else if (facet.facet_type === 'S3') {\r\n              // eslint-disable-next-line\r\n              Object.keys(facet.arguments).map((key: string) => {\r\n                if (\r\n                  (key === 'bucket' ||\r\n                    key === 'path' ||\r\n                    key === 'aws_access_key_id' ||\r\n                    key === 'aws_secret_access_key') &&\r\n                  facet.arguments[key]\r\n                ) {\r\n                  facet.arguments[key] = '';\r\n                }\r\n              });\r\n            }\r\n            return facet;\r\n          });\r\n          var blb = new Blob([JSON.stringify(definition)], {\r\n            type: 'text/json'\r\n          });\r\n          FileSaver.saveAs(blb, pipelineData.pipeline.name + '.iki');\r\n          //console.log(pipelineData);\r\n        } else {\r\n          this.setState({\r\n            snackbarMessage: (\r\n              <Fragment>\r\n                <div className=\"msg\">This pipeline is empty</div>\r\n              </Fragment>\r\n            ),\r\n            snackbarType: 'error',\r\n            snackbarOpen: true\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  handleOnClone = (pipelineId: string, pipelineName: string) => {\r\n    this.setState({\r\n      cloneFlowDialogState: true,\r\n      cloneFlowId: pipelineId,\r\n      cloneFlowName: pipelineName\r\n    });\r\n    //console.log(\"deleteDialogState: \" + this.state.deleteDialogState)\r\n  };\r\n\r\n  handleChangeSearchTerm = (e: any) => {\r\n    this.setState({\r\n      searchTerm: e.target.value\r\n    });\r\n  };\r\n\r\n  handleRenderAsList = () => {\r\n    this.setState({ renderAsList: true });\r\n  };\r\n\r\n  handleRenderAsGrid = () => {\r\n    this.setState({ renderAsList: false });\r\n  };\r\n\r\n  handleChangePage = (event: unknown, newPage: number) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setRowsPerPage(parseInt(event.target.value, 10));\r\n    this.setPage(0);\r\n  };\r\n\r\n  setPage = (page: number) => {\r\n    this.setState({ page: page });\r\n  };\r\n\r\n  setRowsPerPage = (rows: number) => {\r\n    this.setState({ rowsPerPage: rows });\r\n  };\r\n\r\n  handleToggleFilter = () => {\r\n    if (this.state.toggleFilterDisplay === true) {\r\n      this.setState({ toggleFilterDisplay: false });\r\n    } else {\r\n      this.setState({ toggleFilterDisplay: true });\r\n    }\r\n  }\r\n\r\n  onImportFlowClick() {\r\n    this.setState({\r\n      importFlowDialogState: true\r\n    });\r\n  }\r\n\r\n  onNewFlowItemClick() {\r\n    this.setState({\r\n      newFlowDialogState: true\r\n    });\r\n    //this.props.addFlow();\r\n  }\r\n\r\n  handleImportFlowDialogCancel() {\r\n    this.setState({\r\n      importFlowDialogState: false,\r\n      importFlowNameExists: false\r\n    });\r\n  }\r\n\r\n  handleCloneFlowDialogCancel() {\r\n    this.setState({\r\n      cloneFlowDialogState: false,\r\n      cloneFlowId: '',\r\n      cloneFlowName: '',\r\n      cloneFlowNameError: false,\r\n      cloneFlowNameErrorMsg: ''\r\n    });\r\n  }\r\n\r\n  handleImportFlowDialogSubmit(flowName: string, definition: any) {\r\n    //var flowsArray = this.props.flows[this.props.projectId];\r\n    //console.log(\"flowsArray: \", flowsArray);\r\n    var checkFlowNameOverlap = false;\r\n    // eslint-disable-next-line  \r\n    this.props.flows.map((flowData: any) => {\r\n      //console.log(\"FLOW - NAME: \" + flowName + \", name: \" + flowData.pipeline.name);\r\n      if (flowData.name === flowName) {\r\n        //console.log(\"HITHITHIT!!! - NAME: \" + flowName + \", name: \" + flowData.pipeline.name);\r\n        checkFlowNameOverlap = true;\r\n      }\r\n      return ''\r\n    });\r\n    if (checkFlowNameOverlap !== false) {\r\n      this.setState({\r\n        importFlowNameExists: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        importFlowNameExists: false\r\n      });\r\n      /*this.props.addFlow({\r\n        name: flowName,\r\n        projectId: this.props.projectId,\r\n        definition: definition\r\n      });*/\r\n      var name = flowName;\r\n      var projectId = this.props.projectId;\r\n      const flowObj = { name, projectId, definition }\r\n      createPipeline(flowObj).then((pipelineIdByResponse: any) => {\r\n        //this.props.history.push(`/flow/${pipelineIdByResponse}`);\r\n        this.props.subpageClick(`/flow/${pipelineIdByResponse}`)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCloneFlowDialogSubmit(flowName: string, originalFlowId: string, targetProjectId: string, cloneType: string) {\r\n    //var flowsArray = this.props.flows[this.props.projectId];\r\n    var checkFlowNameOverlap = false;\r\n    // eslint-disable-next-line\r\n    this.props.flows.forEach((flowData: any) => {\r\n        //console.log(\"FLOW - NAME: \" + flowName + \", name: \" + flowData.pipeline.name);\r\n        if (flowData.name === flowName) {\r\n          //console.log(\"HITHITHIT!!! - NAME: \" + flowName + \", name: \" + flowData.pipeline.name);\r\n          checkFlowNameOverlap = true;\r\n        }\r\n    });\r\n    if (flowName === '') {\r\n      this.setState({\r\n        cloneFlowNameError: true,\r\n        cloneFlowNameErrorMsg: 'Flow name required',\r\n        cloneProcess: false\r\n      });\r\n    } else if (checkFlowNameOverlap !== false) {\r\n      this.setState({\r\n        cloneFlowNameError: true,\r\n        cloneFlowNameErrorMsg:\r\n          'Flow with same name already exists. Please choose different name',\r\n        cloneProcess: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cloneFlowNameError: false,\r\n        cloneFlowNameErrorMsg: '',\r\n        addFlowLoading: true\r\n      });\r\n      getPipeline(originalFlowId).then(\r\n        (pipelineData: any) => {\r\n          //console.log(\"pipelineData: \");\r\n          //console.log(pipelineData);\r\n          var definition = pipelineData.pipeline.definition;\r\n          //console.log(definition);\r\n          // var schedule = pipelineData.pipeline.schedule;\r\n          if (definition.facets) {\r\n            definition.facets.map((facet: any) => {\r\n              if (cloneType !== 'with-data') {\r\n                if (\r\n                  facet.facet_type === 'IMPORTED' &&\r\n                  facet.facet_group === 'DATASET'\r\n                ) {\r\n                  delete facet.arguments.bucket;\r\n                  Object.keys(facet.arguments).map((key: string) => {\r\n                    if (key === 'path' && facet.arguments[key]) {\r\n                      facet.arguments[key] = '';\r\n                    }\r\n                    return ''\r\n                  });\r\n                } else if (\r\n                  facet.facet_type === 'EXPORTED' &&\r\n                  facet.facet_group === 'DATASET'\r\n                ) {\r\n                  delete facet.arguments.bucket;\r\n                  delete facet.arguments.project_id;\r\n                  delete facet.arguments.user_email;\r\n                  delete facet.arguments.dataset_id;\r\n                  delete facet.arguments.overwrite;\r\n                  Object.keys(facet.arguments).map((key: string) => {\r\n                    if (\r\n                      (key === 'dataset_name') &&\r\n                      facet.arguments[key]\r\n                    ) {\r\n                      facet.arguments[key] = '';\r\n                    }\r\n                    return ''\r\n                  });\r\n                } else if (facet.facet_type === 'S3') {\r\n                  Object.keys(facet.arguments).map((key: string) => {\r\n                    if (\r\n                      (key === 'bucket' ||\r\n                        key === 'path' ||\r\n                        key === 'aws_access_key_id' ||\r\n                        key === 'aws_secret_access_key') &&\r\n                      facet.arguments[key]\r\n                    ) {\r\n                      facet.arguments[key] = '';\r\n                    }\r\n                    return ''\r\n                  });\r\n                }\r\n              }\r\n              return facet;\r\n            });\r\n          }\r\n          /*this.props.getFlows(targetProjectId);\r\n          this.props.addFlow({\r\n            name: flowName,\r\n            projectId: targetProjectId,\r\n            definition: definition\r\n          });*/\r\n          var name = flowName;\r\n          var projectId = targetProjectId;\r\n          const flowObj = { name, projectId, definition }\r\n          createPipeline(flowObj).then((pipelineIdByResponse: any) => {\r\n            //this.props.history.push(`/flow/${pipelineIdByResponse}`);\r\n            this.props.subpageClick(`/flow/${pipelineIdByResponse}`)\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getFlows(flows: any) {\r\n    //console.log(\"flows: \", flows, \", flows.length: \", flows.length)\r\n    //var allFlows = flows.length;\r\n    flows = this.sortFlows(this.filterFlows(flows));\r\n    var pageFlows = flows.slice(\r\n        this.state.page * this.state.rowsPerPage,\r\n        this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\r\n    );\r\n    if (flows && flows.length === 0) {\r\n      return (\r\n        <Fragment>\r\n          {this.getFlowsFilters(flows)}\r\n          <Grid item xs={12}>\r\n            <Box display=\"flex\" alignItems=\"center\" className=\"no-results\">\r\n              <FindInPageIcon className=\"no-results-icon\" />\r\n              <span className=\"no-results-txt\">No flows found</span>\r\n            </Box>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return(\r\n      <Fragment>\r\n        {this.getFlowsFilters(flows)}\r\n        {this.state.renderAsList ? (\r\n          <Grid item xs={12} className=\"i-pb-0\">\r\n            <Card className=\"cardbox has-table tableHolder\">\r\n              <CardContent className=\"content table-inside\">\r\n                <IkiTable\r\n                      _type=\"Flow\"\r\n                      _link='/flow/'\r\n                      _header={\r\n                        [\r\n                          {\r\n                            key: 'name',\r\n                            name: 'Flow'\r\n                          },\r\n                          {\r\n                            key: 'pipeline_id',\r\n                            name: 'ID'\r\n                          }\r\n                        ]\r\n                      }\r\n                      _data={pageFlows}\r\n                      _functions={\r\n                        [\r\n                          {\r\n                            edit: (itemId: string) => this.props.subpageClick(`/flow/${itemId}`)\r\n                          },\r\n                          {\r\n                            delete: (item: any) => this.handleDialogkOpen(item)\r\n                          },\r\n                          {\r\n                            download: (itemId: string, itemName: string) => this.handleOnDownloadClick(itemId, itemName)\r\n                          },\r\n                          {\r\n                            clone: (itemId: string, itemName: string) => this.handleOnClone(itemId, itemName)\r\n                          }\r\n                        ]\r\n                      }\r\n                  />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ):(\r\n          <IkiGrid\r\n            _type='Flow'\r\n            _link='/flow/'\r\n            _icon={<AccountTreeOutlinedIcon />}\r\n            _data={pageFlows}\r\n            _functions={\r\n              [\r\n                {\r\n                  edit: (itemId: string) => this.props.subpageClick(`/flow/${itemId}`)\r\n                },\r\n                {\r\n                  delete: (item: any) => this.handleDialogkOpen(item)\r\n                },\r\n                {\r\n                  download: (itemId: string, itemName: string) => this.handleOnDownloadClick(itemId, itemName)\r\n                },\r\n                {\r\n                  clone: (itemId: string, itemName: string) => this.handleOnClone(itemId, itemName)\r\n                }\r\n              ]\r\n            }\r\n          />\r\n        )}\r\n        {flows.length > this.state.rowsPerPage && (\r\n          <TablePagination\r\n                  component=\"div\"\r\n                  className=\"pagination-sm\"\r\n                  labelRowsPerPage=\"Flows per page\"\r\n                  rowsPerPageOptions={[8, 16, 32]}\r\n                  colSpan={3}\r\n                  count={flows.length}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      'aria-label': 'Flows per page'\r\n                    }\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  sortFlows = (flows: any) => {\r\n    //console.log(\"SORT PROJECTS: \");\r\n    //console.log(flows);\r\n    if (this.state.tableSortProperty !== '') {\r\n      return this.sortOn(flows, this.state.tableSortProperty);\r\n    } else {\r\n      return flows;\r\n    }\r\n  };\r\n\r\n  sortOn = (arr: any, property: string) => {\r\n    //console.log(\"ARR: \");\r\n    //console.log(arr);\r\n    var sortedArray = arr.sort((a: any, b: any) => {\r\n      if (b[property] < a[property]) {\r\n        return this.state.tableSortAsc ? 1 : -1;\r\n      }\r\n      if (b[property] > a[property]) {\r\n        return this.state.tableSortAsc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n    return sortedArray;\r\n  };\r\n\r\n  filterFlows = (flows: any) => {\r\n    //console.log(\"import p: \");\r\n    //console.log(flows);\r\n    if (this.state.searchTerm !== '') {\r\n      flows = flows.filter(\r\n        (p: any) =>\r\n          p.name\r\n            .toLowerCase()\r\n            .indexOf(this.state.searchTerm.toLowerCase()) > -1\r\n      );\r\n    }\r\n    return flows;\r\n  };\r\n\r\n  viewTypeSwitchButtons = () => {\r\n    const buttons = [\r\n      <Button\r\n        key={1}\r\n        color={this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsList()}\r\n      >\r\n        <ViewListIcon />\r\n      </Button>,\r\n      <Button\r\n        key={2}\r\n        color={!this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsGrid()}\r\n      >\r\n        <ViewComfyIcon />\r\n      </Button>\r\n    ]\r\n    return buttons\r\n  }\r\n\r\n  getFlowsFilters = (flows: any) => {\r\n    if(flows) {\r\n      return (\r\n        <div className=\"filters-and-pagination\">\r\n          <div className=\"table-filters\">\r\n                <IkiInput \r\n                  _label=\"\"\r\n                  _placeholder=\"Search...\"\r\n                  _type='text'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={this.state.searchTerm}\r\n                  _size=\"small\"\r\n                  _margin=\"none\"\r\n                  _filterType={true}\r\n                  _onChange={(e: any) => this.handleChangeSearchTerm(e)}\r\n                  _startIcon={\r\n                    {\r\n                      _icon: (\r\n                        <SearchIcon fontSize=\"small\" />\r\n                      )\r\n                    }\r\n                  }\r\n                />\r\n                <IkiButtonGroup\r\n                  _variant=\"contained\"\r\n                  _size=\"small\"\r\n                  _color=\"secondary\"\r\n                  _buttons={\r\n                    this.viewTypeSwitchButtons()\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"table-pagination\">\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  className=\"flows-pagination\"\r\n                  labelRowsPerPage=\"Flows per page\"\r\n                  rowsPerPageOptions={[8, 16, 32]}\r\n                  colSpan={3}\r\n                  count={flows.length}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      'aria-label': 'Flows per page'\r\n                    }\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n                />\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var flows: any = [];\r\n    if(this.props.flows){\r\n      flows = this.props.flows;\r\n    }\r\n      //var flows = this.props.flows;\r\n      //var allFlows = flows.length;\r\n      //flows = this.sortFlows(this.filterFlows(flows));\r\n      //var pageFlows = flows.slice(\r\n      //  this.state.page * this.state.rowsPerPage,\r\n      //  this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\r\n      //);\r\n      return (\r\n        <Fragment>\r\n              <div className=\"under-tab-buttons\">\r\n                      <IkiButton\r\n                        _variant='contained'\r\n                        _color='primary'\r\n                        _label=\"Add New Flow\"\r\n                        _type='button'\r\n                        _fullWidth={false}\r\n                        _loading={false}\r\n                        _startIcon={\r\n                          <i className=\"zmdi zmdi-plus zmdi-hc-fw\"></i>\r\n                        }\r\n                        _onClick={() => this.onNewFlowItemClick()}\r\n                      />\r\n                      <IkiButton\r\n                        _variant='contained'\r\n                        _color='primary'\r\n                        _label=\"Import a Flow\"\r\n                        _type='button'\r\n                        _fullWidth={false}\r\n                        _loading={false}\r\n                        _startIcon={\r\n                          <i className=\"zmdi zmdi-upload zmdi-hc-fw\"></i>\r\n                        }\r\n                        _onClick={() => this.onImportFlowClick()}\r\n                      />\r\n                    {/*this.props.data.flowsLoaded && \r\n                      this.getFlowsFilters(flows)\r\n                    */}\r\n              </div>\r\n              <div className=\"cardbox-holder\">\r\n                  {this.getFlows(flows)}                  \r\n              </div>\r\n              {this.newFlowDialog()}\r\n              {this.deleteFlowDialog()}\r\n              <ImportFlowDialog\r\n                isImportingProgress={this.props.creatingFlow}\r\n                open={this.state.importFlowDialogState}\r\n                handleCancel={() => this.handleImportFlowDialogCancel()}\r\n                importFlowNameExists={this.state.importFlowNameExists}\r\n                handleSubmit={(flowName: string, definition: any) => this.handleImportFlowDialogSubmit(flowName, definition)}\r\n              ></ImportFlowDialog>\r\n              <CloneFlowDialog\r\n                isCloningProgress={this.state.cloneProcess}\r\n                cloneFlowId={this.state.cloneFlowId}\r\n                cloneFlowName={this.state.cloneFlowName}\r\n                cloneFlowError={this.state.cloneFlowNameErrorMsg}\r\n                projectsList={this.props.projects}\r\n                projectId={this.props.projectId}\r\n                open={this.state.cloneFlowDialogState}\r\n                handleCancel={() => this.handleCloneFlowDialogCancel()}\r\n                handleSubmit={(flowName: string, originalFlowId: string, targetProjectId: string, cloneType: string) => {\r\n                  this.setState({ cloneProcess: true });\r\n                  this.handleCloneFlowDialogSubmit(flowName, originalFlowId, targetProjectId, cloneType)\r\n                }}\r\n              ></CloneFlowDialog>\r\n              <SnackbarMsg\r\n                snackbarOpen={this.state.snackbarOpen}\r\n                snackbarType={this.state.snackbarType}\r\n                snackbarMsg={this.state.snackbarMessage}\r\n                onSnackbarClose={this.handleSnackbarClose}\r\n              />\r\n        </Fragment>\r\n      );\r\n  }\r\n\r\n  newFlowDialog() {\r\n    return (\r\n      <IkiDialog\r\n            _open={this.state.newFlowDialogState}\r\n            _onClose={this.handleFlowDialogClose}\r\n            _type='regular'\r\n            _icon={false}\r\n            _title='New flow'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _content={\r\n                <IkiInput \r\n                  _label=\"Flow name\"\r\n                  _placeholder=\"Enter flow name\"\r\n                  _type='text'\r\n                  _value={this.state.newFlowName}\r\n                  _onChange={(e: any) => {\r\n                    this.setState({\r\n                      newFlowName: e.target.value\r\n                    });\r\n                  }}\r\n                  _characterCounter={40}\r\n                  _autoFocus={true}\r\n                  _fullWidth={true}\r\n                  _error={this.state.newFlowNameErrorMsg}\r\n                />\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={this.handleFlowDialogClose}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Create\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={this.state.addFlowLoading}\r\n                  _disabled={this.state.addFlowLoading}\r\n                  _isAlternate={true}\r\n                  _onClick={this.handleNewFlowDialogSave}\r\n                />\r\n              </Fragment>\r\n            }\r\n      />\r\n    );\r\n  }\r\n\r\n  deleteFlowDialog() {\r\n    return (\r\n      <IkiDialog\r\n            _open={this.state.deleteDialogState}\r\n            _onClose={this.handleDeleteDialogClose}\r\n            _type='delete'\r\n            _icon={false}\r\n            _title='Delete pipeline'\r\n            _subtitle=''\r\n            _size='xs'\r\n            _align='center'\r\n            _content={\r\n              <>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{this.state.deletePipelineID}</div>\r\n                  <div className=\"txt-dialog-impact1\">{this.state.deletePipelineName}</div>\r\n                </div>\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-impact2 error\">Are you sure ?</div>\r\n                </div>\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={this.handleDeleteDialogClose}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Delete\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _disabled={false}\r\n                  _isDanger={true}\r\n                  _onClick={() => this.onDelete(this.state.deletePipeline)}\r\n                />\r\n              </Fragment>\r\n            }\r\n          />\r\n    );\r\n  }\r\n\r\n  onDelete(flowObj: any) {\r\n    this.props.deleteFlow(flowObj);\r\n    this.setState({\r\n      deleteDialogState: false,\r\n      deletePipeline: '',\r\n      snackbarMessage: (\r\n        <Fragment>\r\n          <div className=\"msg\">You have succesfully deleted pipeline</div>\r\n          <div className=\"val\">{this.state.deletePipelineName}</div>\r\n        </Fragment>\r\n      ),\r\n      snackbarType: 'success',\r\n      snackbarOpen: true\r\n    });\r\n  }\r\n\r\n  handleFlowDialogClose = () => {\r\n    this.setState({\r\n      newFlowDialogState: false,\r\n      newFlowName: '',\r\n      newFlowNameError: false,\r\n      addFlowLoading: false\r\n    });\r\n  };\r\n\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({\r\n      deleteDialogState: false,\r\n      deletePipeline: null,\r\n      deletePipelineName: '',\r\n      deletePipelineID: ''\r\n    });\r\n    //console.log(\"deleteDialogState: \" + this.state.deleteDialogState)\r\n  };\r\n\r\n  handleNewFlowDialogSave = () => {\r\n    if (this.props.creatingFlow) return;\r\n    //this.subpageClicked = true;\r\n    var flowName = this.state.newFlowName;\r\n    //var flowsArray = this.props.data.flows[this.props.projectId];\r\n    var checkFlowNameOverlap = false;\r\n    // eslint-disable-next-line\r\n    this.props.flows.map((flowData: any) => {\r\n        //console.log(\"FLOW - NAME: \" + flowName + \", name: \" + flowData.pipeline.name);\r\n        if (flowData.name === flowName) {\r\n          //console.log(\"HITHITHIT!!! - NAME: \" + flowName + \", name: \" + flowData.pipeline.name);\r\n          checkFlowNameOverlap = true;\r\n        }\r\n        return ''\r\n    });\r\n    if (flowName === '') {\r\n      this.setState({\r\n        newFlowNameError: true,\r\n        newFlowNameErrorMsg: 'Flow name required'\r\n      });\r\n    } else if (checkFlowNameOverlap !== false) {\r\n      this.setState({\r\n        newFlowNameError: true,\r\n        newFlowNameErrorMsg:\r\n          'Flow with same name already exists. Please choose different name'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        newFlowNameError: false,\r\n        newFlowNameErrorMsg: '',\r\n        addFlowLoading: true\r\n      });\r\n      setTimeout(() => {\r\n        var name = flowName;\r\n        var projectId = this.props.projectId;\r\n        var definition = {};\r\n        const flowObj = { name, projectId, definition }\r\n        createPipeline(flowObj).then((pipelineIdByResponse: any) => {\r\n          //this.props.history.push(`/flow/${pipelineIdByResponse}`);\r\n          this.props.subpageClick(`/flow/${pipelineIdByResponse}`)\r\n        });\r\n        /*this.props.addFlow({\r\n          name: flowName,\r\n          projectId: this.props.projectId\r\n        })*/\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n  \r\n}\r\n\r\nexport default FlowsComponent;\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  TablePagination,\r\n  Card,\r\n  CardContent\r\n} from '@material-ui/core';\r\nimport FileSaver from 'file-saver';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport {\r\n  downloadDataset\r\n} from '../../../services/app-data.service';\r\nimport {\r\n  AddDatasetDialog,\r\n  DeleteDatasetDialog,\r\n  EditDatasetDialog\r\n} from '../../../components/dialogs';\r\nimport SnackbarMsg from '../../../components/SnackbarMsg';\r\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\r\nimport IkiButton from '../../../components/IkiFormElements/IkiButton';\r\nimport IkiButtonGroup from '../../../components/IkiFormElements/IkiButtonGroup';\r\nimport IkiInput from '../../../components/IkiFormElements/IkiInput';\r\nimport IkiGrid from '../../../components/IkiLayout/IkiGrid';\r\nimport IkiTable from '../../../components/IkiLayout/IkiTable';\r\n\r\ntype DatasetsProps = {\r\n  datasets: any;\r\n  projects: any;\r\n  projectId: string;\r\n  subpageClick: (subpageLink: string) => void;\r\n  createDataset: (projectId: string, datasetName: string, file: File) => void;\r\n  editDataset: (projectId: string, datasetId: string, datasetName: string, file: File) => void;\r\n  deleteDataset: (datasetId: string) => void;\r\n  uploadProgress: any;\r\n  uploadStatus: any;\r\n};\r\n\r\ntype DatasetsState = {\r\n  sort: string;\r\n  d_sort: string,\r\n  deleteDialogState: boolean;\r\n  deletePipeline: any;\r\n  deletePipelineName: string;\r\n  deletePipelineID: string;\r\n  selectedDatasetData?: any;\r\n  selectedDashData?: any;\r\n  newFlowDialogState: boolean;\r\n  newFlowName: string;\r\n  newFlowNameError: boolean;\r\n  newFlowNameErrorMsg: string;\r\n  projectId: string;\r\n  projectNameEditMode: Boolean;\r\n  title: string;\r\n  projectDeleteDialogState: boolean;\r\n  projectShareDialogState: boolean;\r\n  projectShareDialogErrorState: boolean;\r\n  projectShareDialogErrorMsg: string;\r\n  snackbarShareProSuccessState: boolean;\r\n  editProjectDialogState: boolean;\r\n  addDatasetDialogState: boolean;\r\n  addDashboardtDialogState: boolean;\r\n  addDatasetMinimize: boolean;\r\n  editDatasetDialogState: boolean;\r\n  editDashboardDialogState: boolean;\r\n  deleteDatasetDialogState: boolean;\r\n  uploadDatasetDialogState: boolean;\r\n  duplicateDialogProjectState: boolean;\r\n  importFlowDialogState: boolean;\r\n  importFlowNameExists: boolean;\r\n  tabValue: number;\r\n  datasetEditMode: boolean;\r\n  dashEditMode: boolean;\r\n  snackbarOpen: boolean;\r\n  snackbarMessage: any;\r\n  snackbarType: string;\r\n  sharingLoading: boolean;\r\n  renamingLoading: boolean;\r\n  deletingLoading: boolean;\r\n  newlyAddedDatasetNameExists: boolean;\r\n  newlyAddedDashNameExists: boolean;\r\n  addFlowLoading: boolean;\r\n  rowsPerPage: number;\r\n  page: number;\r\n  searchTerm: string;\r\n  flowsFilter: string;\r\n  renderAsList: boolean;\r\n  tableSortAsc: boolean;\r\n  tableSortProperty: string;\r\n  toggleFilterDisplay: boolean;\r\n  clickedBox: string;\r\n  d_rowsPerPage: number;\r\n  d_page: number;\r\n  d_searchTerm: string;\r\n  d_flowsFilter: string;\r\n  d_renderAsList: boolean;\r\n  d_tableSortAsc: boolean;\r\n  d_tableSortProperty: string;\r\n  d_toggleFilterDisplay: boolean;\r\n  d_clickedBox: string;\r\n  cloneFlowDialogState: boolean;\r\n  cloneFlowId: string;\r\n  cloneFlowName: string;\r\n  cloneFlowNameError: boolean;\r\n  cloneFlowNameErrorMsg: string;\r\n  cloneProcess: boolean;\r\n  sessionCreated: boolean;\r\n  sessionID: string;\r\n  showContent: boolean;\r\n  loadingTxt: string;\r\n};\r\n\r\nclass DatasetsComponent extends Component<DatasetsProps, DatasetsState> {\r\n  state: DatasetsState = {\r\n    sort: 'all',\r\n    d_sort: 'all',\r\n    deletePipeline: null,\r\n    deleteDialogState: false,\r\n    deletePipelineName: '',\r\n    deletePipelineID: '',\r\n    newFlowDialogState: false,\r\n    newFlowName: '',\r\n    newFlowNameError: false,\r\n    newFlowNameErrorMsg: '',\r\n    projectId: '',\r\n    projectNameEditMode: false,\r\n    title: '',\r\n    projectDeleteDialogState: false,\r\n    projectShareDialogState: false,\r\n    projectShareDialogErrorState: false,\r\n    projectShareDialogErrorMsg: '',\r\n    snackbarShareProSuccessState: false,\r\n    editProjectDialogState: false,\r\n    addDatasetDialogState: false,\r\n    addDashboardtDialogState: false,\r\n    deleteDatasetDialogState: false,\r\n    uploadDatasetDialogState: false,\r\n    editDatasetDialogState: false,\r\n    editDashboardDialogState: false,\r\n    duplicateDialogProjectState: false,\r\n    tabValue: 0,\r\n    datasetEditMode: false,\r\n    addDatasetMinimize: false,\r\n    dashEditMode: false,\r\n    snackbarOpen: false,\r\n    snackbarMessage: null,\r\n    snackbarType: '',\r\n    sharingLoading: false,\r\n    renamingLoading: false,\r\n    deletingLoading: false,\r\n    newlyAddedDatasetNameExists: false,\r\n    newlyAddedDashNameExists: false,\r\n    addFlowLoading: false,\r\n    rowsPerPage: 16,\r\n    page: 0,\r\n    searchTerm: '',\r\n    flowsFilter: 'all',\r\n    renderAsList: false,\r\n    tableSortAsc: true,\r\n    tableSortProperty: '',\r\n    toggleFilterDisplay: false,\r\n    clickedBox: '',\r\n    d_rowsPerPage: 16,\r\n    d_page: 0,\r\n    d_searchTerm: '',\r\n    d_flowsFilter: 'all',\r\n    d_renderAsList: false,\r\n    d_tableSortAsc: true,\r\n    d_tableSortProperty: '',\r\n    d_toggleFilterDisplay: false,\r\n    d_clickedBox: '',\r\n    importFlowDialogState: false,\r\n    importFlowNameExists: false,\r\n    cloneFlowDialogState: false,\r\n    cloneFlowId: '',\r\n    cloneFlowName: '',\r\n    cloneFlowNameError: false,\r\n    cloneFlowNameErrorMsg: '',\r\n    cloneProcess: false,\r\n    sessionCreated: false,\r\n    sessionID: '',\r\n    showContent: false,\r\n    loadingTxt: ''\r\n  };\r\n  componentDidMount() {\r\n    //console.log(\"this.props: \", this.props);\r\n  }\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  onRequestSort = (event: any, property: string) => {\r\n    this.setState({\r\n      tableSortAsc: !this.state.tableSortAsc,\r\n      tableSortProperty: property\r\n    });\r\n  };\r\n\r\n  handleChangeSearchTerm = (e: any) => {\r\n    this.setState({\r\n      searchTerm: e.target.value\r\n    });\r\n  };\r\n\r\n  handleRenderAsList = () => {\r\n    this.setState({ renderAsList: true });\r\n  };\r\n\r\n  handleRenderAsGrid = () => {\r\n    this.setState({ renderAsList: false });\r\n  };\r\n\r\n  handleChangePage = (event: unknown, newPage: number) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setRowsPerPage(parseInt(event.target.value, 10));\r\n    this.setPage(0);\r\n  };\r\n\r\n  setPage = (page: number) => {\r\n    this.setState({ page: page });\r\n  };\r\n\r\n  setRowsPerPage = (rows: number) => {\r\n    this.setState({ rowsPerPage: rows });\r\n  };\r\n\r\n  handleToggleFilter = () => {\r\n    if (this.state.toggleFilterDisplay === true) {\r\n      this.setState({ toggleFilterDisplay: false });\r\n    } else {\r\n      this.setState({ toggleFilterDisplay: true });\r\n    }\r\n  }\r\n\r\n  sortDatasets = (datasets: any) => {\r\n    //console.log(\"SORT PROJECTS: \");\r\n    //console.log(datasets);\r\n    if (this.state.tableSortProperty !== '') {\r\n      return this.sortOn(datasets, this.state.tableSortProperty);\r\n    } else {\r\n      return datasets;\r\n    }\r\n  };\r\n\r\n  sortOn = (arr: any, property: string) => {\r\n    //console.log(\"ARR: \");\r\n    //console.log(arr);\r\n    var sortedArray = arr.sort((a: any, b: any) => {\r\n      if (b[property] < a[property]) {\r\n        return this.state.tableSortAsc ? 1 : -1;\r\n      }\r\n      if (b[property] > a[property]) {\r\n        return this.state.tableSortAsc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n    return sortedArray;\r\n  };\r\n\r\n  filterDatasets = (datasets: any) => {\r\n    //console.log(\"import p: \");\r\n    //console.log(datasets);\r\n    if (this.state.searchTerm !== '') {\r\n      datasets = datasets.filter(\r\n        (p: any) =>\r\n          p.name\r\n            .toLowerCase()\r\n            .indexOf(this.state.searchTerm.toLowerCase()) > -1\r\n      );\r\n    }\r\n    return datasets;\r\n  };\r\n\r\n  onNewDatasetItemClick() {\r\n    this.setState({\r\n      addDatasetDialogState: true,\r\n      datasetEditMode: false\r\n    });\r\n  }\r\n\r\n  viewTypeSwitchButtons = () => {\r\n    const buttons = [\r\n      <Button\r\n        key={1}\r\n        color={this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsList()}\r\n      >\r\n        <ViewListIcon />\r\n      </Button>,\r\n      <Button\r\n        key={2}\r\n        color={!this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsGrid()}\r\n      >\r\n        <ViewComfyIcon />\r\n      </Button>\r\n    ]\r\n    return buttons\r\n  }\r\n\r\n  getDatasetsFilters = (datasets: any) => {\r\n    if(datasets) {\r\n      return (\r\n        <div className=\"filters-and-pagination\">\r\n          <div className=\"table-filters\">\r\n                <IkiInput \r\n                  _label=\"\"\r\n                  _placeholder=\"Search...\"\r\n                  _type='text'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={this.state.searchTerm}\r\n                  _size=\"small\"\r\n                  _margin=\"none\"\r\n                  _filterType={true}\r\n                  _onChange={(e: any) => this.handleChangeSearchTerm(e)}\r\n                  _startIcon={\r\n                    {\r\n                      _icon: (\r\n                        <SearchIcon fontSize=\"small\" />\r\n                      )\r\n                    }\r\n                  }\r\n                />\r\n                <IkiButtonGroup\r\n                  _variant=\"contained\"\r\n                  _size=\"small\"\r\n                  _color=\"secondary\"\r\n                  _buttons={\r\n                    this.viewTypeSwitchButtons()\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"table-pagination\">\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  className=\"flows-pagination\"\r\n                  labelRowsPerPage=\"Datasets per page\"\r\n                  rowsPerPageOptions={[8, 16, 32]}\r\n                  colSpan={3}\r\n                  count={datasets.length}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      'aria-label': 'Datasets per page'\r\n                    }\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n                />\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  getDatasets(datasets: any) {\r\n    var datasetsArr: any = [], pageDatasets, datasetsWithUploading: any = [];\r\n    let datasetUploading: any;\r\n    if(this.props.datasets) {\r\n      datasetsArr = this.props.datasets;\r\n      datasetsArr = this.sortDatasets(this.filterDatasets(datasetsArr));\r\n      pageDatasets = datasetsArr.slice(\r\n        this.state.page * this.state.rowsPerPage,\r\n        this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\r\n      );\r\n      datasetsArr.forEach((datasetData: any, index: number) => {\r\n        datasetUploading = this.props.uploadProgress.filter((uploadProgressData: any)=>{\r\n          return uploadProgressData.status !== 'complete' && datasetData.dataset_id === uploadProgressData.datasetId}\r\n        )\r\n        if(Object.keys(datasetUploading).length > 0){\r\n          //datasetsWithUploading.push(datasetData.dataset_id);\r\n          datasetsWithUploading[datasetData.dataset_id] = datasetData.dataset_id;\r\n        }\r\n      });\r\n    }\r\n    //console.log(\"datasetsWithUploading: \", datasetsWithUploading, \", datasetUploading: \", datasetUploading);\r\n    if (datasetsArr && datasetsArr.length === 0) {\r\n      return (\r\n        <Fragment>\r\n          {this.getDatasetsFilters(datasetsArr)}\r\n          <Grid item xs={12}>\r\n            <Box display=\"flex\" alignItems=\"center\" className=\"no-results\">\r\n              <FindInPageIcon className=\"no-results-icon\" />\r\n              <span className=\"no-results-txt\">No datasets found</span>\r\n            </Box>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return(\r\n      <Fragment>\r\n        {this.getDatasetsFilters(datasetsArr)}\r\n        {this.state.renderAsList ? (\r\n          <Grid item xs={12} className=\"i-pb-0\">\r\n            <Card className=\"cardbox has-table tableHolder\">\r\n              <CardContent className=\"content table-inside\">\r\n                <IkiTable\r\n                      _type=\"Dataset\"\r\n                      _link='/dataset/'\r\n                      _header={\r\n                        [\r\n                          {\r\n                            key: 'name',\r\n                            name: 'Dataset'\r\n                          },\r\n                          {\r\n                            key: 'dataset_id',\r\n                            name: 'ID'\r\n                          }\r\n                        ]\r\n                      }\r\n                      _data={pageDatasets}\r\n                      _functions={\r\n                        [\r\n                          {\r\n                            edit: (item: any) => this.handleDatasetEdit(item)\r\n                          },\r\n                          {\r\n                            delete: (item: any) => this.handleDatasetDelete(item)\r\n                          },\r\n                          {\r\n                            download: (item: any) => this.handleDatasetDownload(item)\r\n                          },\r\n                          {\r\n                            browse: (itemId: string) => this.props.subpageClick(`/dataset/${itemId}`)\r\n                          }\r\n                        ]\r\n                      }\r\n                  />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ):(\r\n          <IkiGrid\r\n            _type='Dataset'\r\n            _link='/dataset/'\r\n            _icon={<StorageIcon />}\r\n            _data={pageDatasets}\r\n            _uploadInfo={datasetUploading}\r\n            _functions={\r\n              [\r\n                {\r\n                  edit: (item: any) => this.handleDatasetEdit(item)\r\n                },\r\n                {\r\n                  delete: (item: any) => this.handleDatasetDelete(item)\r\n                },\r\n                {\r\n                  download: (item: any) => this.handleDatasetDownload(item)\r\n                },\r\n                {\r\n                  browse: (itemId: string) => this.props.subpageClick(`/dataset/${itemId}`)\r\n                }\r\n              ]\r\n            }\r\n          />\r\n        )}\r\n        {datasetsArr.length > this.state.rowsPerPage && (\r\n          <TablePagination\r\n                  component=\"div\"\r\n                  className=\"pagination-sm\"\r\n                  labelRowsPerPage=\"Datasets per page\"\r\n                  rowsPerPageOptions={[8, 16, 32]}\r\n                  colSpan={3}\r\n                  count={datasetsArr.length}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      'aria-label': 'Datasets per page'\r\n                    }\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var datasets: any = [];\r\n    if(this.props.datasets){\r\n      datasets = this.props.datasets;\r\n    }\r\n    var projectData = this.props.projects.filter(\r\n      (p: any) => p.project_id === this.props.projectId\r\n    )[0];\r\n    return (\r\n      <Fragment>\r\n        <div className=\"under-tab-buttons\">\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='primary'\r\n                      _label=\"Upload New Dataset\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _loading={false}\r\n                      _startIcon={\r\n                        <i className=\"zmdi zmdi-cloud-upload zmdi-hc-fw\"></i>\r\n                      }\r\n                      _onClick={() => this.onNewDatasetItemClick()}\r\n                    />\r\n        </div>\r\n        <div className=\"cardbox-holder\">\r\n          {this.getDatasets(datasets)}\r\n        </div>\r\n            <AddDatasetDialog\r\n                projectId={this.props.projectId}\r\n                projectName={projectData ? projectData.name : ''}\r\n                isEdit={this.state.datasetEditMode}\r\n                open={\r\n                this.state.addDatasetDialogState \r\n                }\r\n                name={\r\n                this.state.selectedDatasetData\r\n                    ? this.state.selectedDatasetData._name\r\n                    : ''\r\n                }\r\n                datasetID={\r\n                    this.state.selectedDatasetData\r\n                    ? this.state.selectedDatasetData._id\r\n                    : ''\r\n                }\r\n                uploadStatus={this.props.uploadStatus}\r\n                handleDialogClose={() => this.handleAddDatasetDialogClose()}\r\n                handleSubmit={(name: string, file: File) =>\r\n                this.handleAddDatasetDialogSubmit(name, file)\r\n                }\r\n                handleSubmitOverwrite={(name: string, file: File) =>\r\n                this.handleAddDatasetDialogSubmitOverwrite(name, file)\r\n                }\r\n                handleCancel={() => this.handleAddDatasetDialogClose()}\r\n                newDatasetNameExists={this.state.newlyAddedDatasetNameExists}\r\n                dismissAlert={() => this.handleDismissDatasetNameExists()}\r\n            ></AddDatasetDialog>\r\n            <DeleteDatasetDialog\r\n                datasetId={\r\n                    this.state.selectedDatasetData\r\n                    ? this.state.selectedDatasetData._id\r\n                    : ''\r\n                }\r\n                datasetName={\r\n                    this.state.selectedDatasetData\r\n                    ? this.state.selectedDatasetData._name\r\n                    : ''\r\n                }\r\n                open={this.state.deleteDatasetDialogState}\r\n                handleDialogClose={() => this.handleDeleteDatasetDialogClose()}\r\n                handleSubmit={() => this.handleDeleteDatsetDialogSubmit()}\r\n                handleCancel={() => this.handleDeleteDatasetDialogClose()}\r\n            ></DeleteDatasetDialog>\r\n            <EditDatasetDialog\r\n                datasetId={\r\n                    this.state.selectedDatasetData\r\n                    ? this.state.selectedDatasetData._id\r\n                    : ''\r\n                }\r\n                datasetName={\r\n                    this.state.selectedDatasetData\r\n                    ? this.state.selectedDatasetData._name\r\n                    : ''\r\n                }\r\n                open={this.state.editDatasetDialogState}\r\n                handleDialogClose={() => this.handleEditDatasetDialogClose()}\r\n                handleSubmit={() => this.handleEditDatasetDialogSubmit()}\r\n                handleCancel={() => this.handleEditDatasetDialogClose()}\r\n            ></EditDatasetDialog>\r\n            <SnackbarMsg\r\n              snackbarOpen={this.state.snackbarOpen}\r\n              snackbarType={this.state.snackbarType}\r\n              snackbarMsg={this.state.snackbarMessage}\r\n              onSnackbarClose={this.handleSnackbarClose}\r\n            />\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  handleEditDatasetDialogSubmit() {\r\n    this.handleEditDatasetDialogClose();\r\n  }\r\n\r\n  handleUploadDatasetDialogClose() {\r\n    this.setState({ uploadDatasetDialogState: false });\r\n  }\r\n\r\n  handleUploadDatasetDialogSubmit() {\r\n    this.handleUploadDatasetDialogClose();\r\n  }\r\n\r\n  handleDeleteDatsetDialogSubmit() {\r\n    if (this.state.selectedDatasetData) {\r\n      this.props.deleteDataset(this.state.selectedDatasetData._id);\r\n      this.setState({\r\n        snackbarMessage: (\r\n          <Fragment>\r\n            <div className=\"msg\">You have succesfully deleted dataset: </div>\r\n            <div className=\"val\">{this.state.selectedDatasetData._name}</div>\r\n          </Fragment>\r\n        ),\r\n        snackbarType: 'success',\r\n        snackbarOpen: true\r\n      });\r\n    }\r\n    this.handleDeleteDatasetDialogClose();\r\n  }\r\n\r\n  handleDeleteDatasetDialogClose() {\r\n    this.setState({ deleteDatasetDialogState: false });\r\n  }\r\n\r\n  handleDismissDatasetNameExists() {\r\n    this.setState({\r\n      newlyAddedDatasetNameExists: false\r\n    });\r\n  }\r\n\r\n  handleAddDatasetDialogSubmitOverwrite(name: string, file: File) {\r\n    // CALL TO API TO OVERWRITE DATASET\r\n    //console.log('OVERWRITE dataset: ' + name);\r\n    //this.props.createDataset(this.props.projectId, name, file);\r\n    var existingDatasetId = '';\r\n    const datasets = this.props.datasets.filter(\r\n      (datasetData: any) =>\r\n        datasetData.project_id === this.props.projectId\r\n    );\r\n    datasets.forEach((datasetData: any) => {\r\n        //console.log(\"NAME: \" + name + \", datasetData.name: \" + datasetData.name + \", id: \" + datasetData.dataset_id);\r\n        if (\r\n          datasetData.name === name &&\r\n          datasetData.project_id === this.props.projectId\r\n        ) {\r\n          existingDatasetId = datasetData.dataset_id;\r\n        }\r\n    });\r\n    if (existingDatasetId !== '') {\r\n      this.props.editDataset(\r\n        this.props.projectId,\r\n        existingDatasetId,\r\n        name,\r\n        file\r\n      );\r\n      this.setState({\r\n        newlyAddedDatasetNameExists: false,\r\n        /*snackbarMessage: (\r\n          <Fragment>\r\n            <div className=\"msg\">You have succesfully updated dataset: </div>\r\n            <div className=\"val\">{name}</div>\r\n          </Fragment>\r\n        ),\r\n        snackbarType: 'success',\r\n        snackbarOpen: true*/\r\n      });\r\n      this.handleAddDatasetDialogClose();\r\n    }\r\n  }\r\n\r\n  handleAddDatasetDialogSubmit(name: string, file: File) {\r\n    var checkDatasetNameOverlap = false;\r\n    const datasets = this.props.datasets.filter(\r\n      (datasetData: any) =>\r\n        datasetData.project_id === this.props.projectId\r\n    );\r\n    datasets.forEach((datasetData: any) => {\r\n        //console.log(\"NAME: \" + name + \", datasetData.name: \" + datasetData.name + \", id: \" + datasetData.dataset_id);\r\n        if (\r\n          datasetData.name === name &&\r\n          datasetData.project_id === this.props.projectId\r\n        ) {\r\n          checkDatasetNameOverlap = true;\r\n        }\r\n    });\r\n    //console.log(\"checkDatasetNameOverlap: \" + checkDatasetNameOverlap);\r\n    if (checkDatasetNameOverlap !== false) {\r\n      this.setState({ newlyAddedDatasetNameExists: true });\r\n    } else {\r\n      if (!this.state.datasetEditMode) {\r\n        this.props.createDataset(this.props.projectId, name, file);\r\n        //this.props.createDataset(this.props.projectId, name, file, \"\", false);\r\n        this.handleAddDatasetDialogClose();\r\n      } else {\r\n        this.props.editDataset(\r\n          this.props.projectId,\r\n          this.state.selectedDatasetData._id,\r\n          name,\r\n          file\r\n        );\r\n        this.handleAddDatasetDialogClose();\r\n      }\r\n      this.handleAddDatasetDialogClose();\r\n    }\r\n  }\r\n\r\n  handleAddDatasetDialogClose() {\r\n    this.setState({ addDatasetDialogState: false });\r\n  }\r\n\r\n  handleEditDatasetDialogClose() {\r\n    this.setState({ addDatasetDialogState: false });\r\n  }\r\n  handleDatasetEdit(data: any) {\r\n    console.log(\"handleDatasetEdit: \", data);\r\n    this.setState({\r\n      addDatasetDialogState: true,\r\n      selectedDatasetData: data,\r\n      datasetEditMode: true\r\n    });\r\n  }\r\n  handleDatasetDelete(data: any) {\r\n    //console.log(\"handleDatasetDelete: \", data);\r\n    this.setState({\r\n      deleteDatasetDialogState: true,\r\n      selectedDatasetData: data\r\n    });\r\n  }\r\n  handleDatasetUpload(data: any) {\r\n    this.setState({\r\n      uploadDatasetDialogState: true,\r\n      selectedDatasetData: data\r\n    });\r\n  }\r\n  handleDatasetDownload(data: any) {\r\n    //console.log(\"handleDatasetDownload: \", data);\r\n    downloadDataset(data.name, data.project_id, data.dataset_id).then(\r\n      (res: any) => {\r\n        //console.log(\"download res: \", res);\r\n        /*var blb = new Blob([res.file], { \r\n          type: res.fileType\r\n        });*/\r\n        FileSaver.saveAs(res.file.blobFile, res.file.fileName);\r\n        //window.location = res.fileUrl;\r\n        /*var link = document.createElement('a');\r\n        link.download = 'IkigaiLabs_' + res.file.fileName;\r\n        link.setAttribute(\"download\", 'IkigaiLabs_' + res.file.fileName);\r\n        //link.href = res.fileUrl;\r\n        link.href = URL.createObjectURL(res.file.blobFile);\r\n        link.click();*/\r\n      }\r\n    );\r\n  }\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n  \r\n}\r\n\r\nexport default DatasetsComponent;\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport './index.scss';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst FileInputPY = (props: any) => {\r\n  //console.log(\"fileData: \" + props.fileData)\r\n  // const [file, setFile] = useState();\r\n  const [deleteAction, setDeleteAction] = useState(false);\r\n  const onDrop = useCallback(\r\n    acceptedFiles => {\r\n      // Do something with the files\r\n      // setFile(acceptedFiles[0]);\r\n      props.onFileAdded(acceptedFiles[0]);\r\n      setDeleteAction(false);\r\n    },\r\n    [props]\r\n  );\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: props.accept ? props.accept : '.py'\r\n  });\r\n\r\n  const handleDeleteFile = () => {\r\n    // setFile(null);\r\n    setDeleteAction(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      // setFile(null);\r\n      setDeleteAction(false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"dropzone-container\">\r\n      {!props.fileData || deleteAction ? (\r\n        <div\r\n          {...getRootProps({\r\n            className: props.disabled ? 'dropzone disabled' : 'dropzone'\r\n          })}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <p>Drop the file or click to select file.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"upload-file\">\r\n          <div className=\"upload-file-title\">\r\n            <AttachFileIcon />\r\n            <span className=\"upload-name\">{props.fileData.name}</span>\r\n            <span className=\"upload-size\">\r\n              ({(props.fileData.size / 1000).toFixed(2)} KB)\r\n            </span>\r\n          </div>\r\n          <IconButton disabled={props.disabled} onClick={handleDeleteFile}>\r\n            <DeleteIcon color=\"primary\" />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FileInputPY;\r\n","import React, { useState, Fragment } from 'react';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\nimport IkiAutocomplete from '../../components/IkiFormElements/IkiAutocomplete';\r\nimport {\r\n  Box,\r\n  FormHelperText,\r\n  Fab,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport FileInputPY from '../file-input-dash';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport AlertMsg from '../AlertMsg';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport function AddDashboard(props: any) {\r\n  const {\r\n    dashboardId,\r\n    name,\r\n    handleDialogClose,\r\n    handleSubmit,\r\n    handleSubmitOverwrite,\r\n    handleCancel,\r\n    open,\r\n    isEdit,\r\n    dashUploadStatus,\r\n    newDashboardNameExists,\r\n    dismissAlert,\r\n    datasetIds,\r\n    datasets,\r\n  } = props;\r\n  //console.log(\"add dashboard props: \", props);\r\n  const [dashboardName, setDashboardName] = useState('');\r\n  const [dashboardNameError, setDashboardNameError] = useState('');\r\n  const [datasetId, setDatasetId] = useState(datasetIds);\r\n  const [file, setFile] = useState();\r\n  const [value, setValue] = useState([]);\r\n  const [isValidated, setIsvalidated] = useState(false);\r\n\r\n  const handleAdddashboardSubmit = () => {\r\n    //console.log(dashUploadStatus);\r\n    \r\n    if(dashboardName !== '' && file !== ''){\r\n      if (isEdit) {\r\n        if(datasetId.filter((a:any)=>{return a === ''||a===''}).length>0){\r\n          setIsvalidated(true);\r\n        }else{\r\n          if ((file || dashboardName !== '') && datasetId.length > 0) {\r\n            handleSubmit(dashboardName, file, datasetId,dashboardId);\r\n            setIsvalidated(false);\r\n          } else {\r\n            setIsvalidated(true);\r\n          }\r\n        }\r\n      } else {\r\n    //console.log(dashUploadStatus);\r\n        if(datasetId.filter((a:any)=>{return a === ''|| a===\"\"}).length>0){\r\n          setIsvalidated(true);\r\n        }else{\r\n          if (file && dashboardName !== '' && datasetId.length>0) {\r\n            handleSubmit(dashboardName, file, datasetId,dashboardId);\r\n            //console.log(dashUploadStatus);\r\n  \r\n            setIsvalidated(false);\r\n          } else {\r\n            setIsvalidated(true);\r\n          }\r\n        }\r\n        \r\n      }\r\n    }else{\r\n      if(dashboardName === '') {\r\n        setDashboardNameError('Required')\r\n        setIsvalidated(false);\r\n      } else {\r\n        setIsvalidated(true);\r\n      }\r\n      //console.log(\"no val: \" + dashboardName);\r\n    }\r\n  }\r\n\r\n  const handleAdddashboardSubmitOverwrite = () => {\r\n    if(dashboardName !== '' && file !== ''){\r\n      //console.log(\"has val: \" + dashboardName);\r\n      if (isEdit) {\r\n        if ((file || dashboardName !== '') && datasetId.length > 0) {\r\n          handleSubmitOverwrite(dashboardName, file,datasetId);\r\n          setIsvalidated(false);\r\n        } else {\r\n          setIsvalidated(true);\r\n        }\r\n      } else {\r\n        if (file && dashboardName !== '' && datasetId.length > 0) {\r\n          handleSubmitOverwrite(dashboardName, file, datasetId);\r\n          setIsvalidated(false);\r\n        } else {\r\n          setIsvalidated(true);\r\n        }\r\n      }\r\n    }else{\r\n      //console.log(\"no val: \" + dashboardName);\r\n      setIsvalidated(true);\r\n    }\r\n  }\r\n//console.log(datasets);\r\n\r\n  const handleOnEnter = () => {\r\n    isEdit ? setDashboardName(name) : setDashboardName('');\r\n    setDashboardNameError('');\r\n    isEdit ? setDatasetId(datasetIds) : setDatasetId(['']);\r\n    isEdit ? setValue(datasetIds) : setValue([]);\r\n    setFile(null);\r\n    //console.log(\"datasetId: \", datasetId, \"value: \", value);\r\n  }\r\n\r\n  const handleOnClose = () => {\r\n    setFile(null);\r\n    setIsvalidated(false);\r\n    setDashboardName('');\r\n    setDashboardNameError('');\r\n    handleDialogClose();\r\n  };\r\n\r\n  const handleOnAddDatasetChange = (option: any) => {\r\n    //console.log(\"handleOnAddDatasetChange option: \", option);\r\n    if(datasets) {\r\n      var selectedDatasetID: string = \"\";\r\n      var selectedDatasetIndex: number = 0;\r\n      var datasetsArr: any = datasetId;\r\n      if(datasets.length > 0) {\r\n        datasets.forEach((dataset: any, index: number) => {\r\n          if(dataset.name === option) {\r\n            selectedDatasetID = dataset.dataset_id;\r\n            selectedDatasetIndex = index;\r\n          }\r\n        });\r\n      }\r\n      //console.log(\"selectedDatasetID: \", selectedDatasetID);\r\n      if(selectedDatasetID !== \"\") {\r\n        //datasetsArr.push(selectedDatasetID);\r\n        //var datasetIdLength = datasetId.length;\r\n        var val: any = datasetId;\r\n        val[selectedDatasetIndex] = selectedDatasetID;\r\n        datasetsArr[selectedDatasetIndex] = selectedDatasetID\r\n        var temp = datasetsArr.map(\r\n          (a: any, i: number) => {\r\n            return val[i] ? val[i]:false\r\n          }).filter(\r\n            (a: any) => {\r\n              return a!==false\r\n            }\r\n          );\r\n        setDatasetId(temp);\r\n        setValue(temp);\r\n      }\r\n\r\n      /*var updatedAssociatedDatasets: any = datasetId\r\n      updatedAssociatedDatasets[selectedDatasetIndex] = selectedDatasetID;\r\n      console.log(\"updatedAssociatedDatasets: \", updatedAssociatedDatasets, \"datasetId: \", datasetId);\r\n      var val: any = \"\";\r\n      val[selectedDatasetIndex] = selectedDatasetID;\r\n      var temp = updatedAssociatedDatasets.map(\r\n        (a: any, i: number) => {\r\n          return val[i] ? val[i]:false\r\n        }).filter(\r\n          (a: any) => {\r\n            return a!==false\r\n          }\r\n        );\r\n      setDatasetId(temp);\r\n      setValue(temp);*/\r\n\r\n      // init-old parameters -> event: any, index: any, datasetID: string\r\n      /*console.info(\"handleOnAddDatasetChange: \", event, \"index: \", index, \"datasetID: \", datasetID, \"datasetId arr: \", datasetId);\r\n      var updatedAssociatedDatasets:any = datasetId\r\n      updatedAssociatedDatasets[index] = datasetID\r\n      console.log(\"updatedAssociatedDatasets: \", updatedAssociatedDatasets, \"event.target.value: \", event.target.value, \"datasetId: \", datasetId);\r\n      var val:any = value\r\n      val[index] = datasetID\r\n      var temp = updatedAssociatedDatasets.map((a:any,i:number)=>{return val[i] ? val[i]:false}).filter((a:any)=>{return a!==false})\r\n      console.log(\"val: \", val + \"temp: \", temp);\r\n      setDatasetId(temp)\r\n      setValue(temp)*/\r\n    }\r\n  }\r\n\r\n  return (\r\n    <IkiDialog\r\n      _open={open}\r\n      _onExit={handleOnClose}\r\n      _onEnter={handleOnEnter}\r\n      _onClose={handleOnClose}\r\n      _type='clouploadne'\r\n      _icon={false}\r\n      _title={isEdit ? 'Edit Dashboard' : 'Upload New Dashboard'}\r\n      _subtitle=''\r\n      _size='xs'\r\n      _align='left'\r\n      _content={\r\n        <>\r\n          {newDashboardNameExists === true ?\r\n            <Fragment>\r\n              <AlertMsg\r\n                alertType=\"warning\"\r\n                alertContent={\r\n                  <Fragment>\r\n                      <div>\r\n                        <span>Dashboard with same name already exists.</span>\r\n                        <br />\r\n                        <strong>{dashboardName}</strong>\r\n                      </div>\r\n                      <div>Please note:<br /> All flows which contain this dashboard will be reflected by this change.</div>\r\n                      <div>\r\n                        <strong>Are you sure you want to continue and overwrite dashboard?</strong>\r\n                      </div>\r\n                  </Fragment>\r\n                }\r\n                alertButtons={\r\n                  <Fragment>\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='default'\r\n                      _label=\"No, go back\"\r\n                      _type='button'\r\n                      _fullWidth={false}\r\n                      _loading={false}\r\n                      _onClick={() => dismissAlert()}\r\n                    />\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='primary'\r\n                      _label=\"Yes, overwrite\"\r\n                      _type='button'\r\n                      _isWarning={true}\r\n                      _fullWidth={false}\r\n                      _loading={false}\r\n                      _onClick={() => handleAdddashboardSubmitOverwrite()}\r\n                    />\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Fragment>\r\n          :\r\n            <div>\r\n              {isEdit &&\r\n                <div className=\"section\">\r\n                  <div className=\"txt-dialog-faded1\">{dashboardId}</div>\r\n                  <div className=\"txt-dialog-impact1\">{name}</div>\r\n                </div>\r\n              }\r\n              <div className=\"section\">\r\n                <IkiInput \r\n                      _label=\"Dashboard name\"\r\n                      _placeholder=\"Enter new name for Dashboard\"\r\n                      _type='text'\r\n                      _autoComplete=\"new-password\"\r\n                      _value={dashboardName}\r\n                      _onChange={(e: any) => {\r\n                        setDashboardName(e.target.value);\r\n                      }}\r\n                      _characterCounter={40}\r\n                      _autoFocus={true}\r\n                      _fullWidth={true}\r\n                      _error={dashboardNameError}\r\n                />\r\n                <Box mt={2}>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">Python Script File * </Typography>\r\n                </Box>\r\n                <FileInputPY\r\n                  onFileAdded={(file: File) => setFile(file)}\r\n                  disabled={dashUploadStatus === 'pending'}\r\n                  fileData={file}\r\n                ></FileInputPY>\r\n                {isValidated && !isEdit && !file && (\r\n                    <FormHelperText className=\"input-error\" error>\r\n                      <ErrorIcon />\r\n                      <span>File is required</span>\r\n                    </FormHelperText>\r\n                )}\r\n              </div>\r\n              <div className=\"section\">\r\n                <Box mt={2}>\r\n                  <div className=\"flow-nested-arg in-add-dash-dialog\" key={'ASSOCIATED_DATASET'}>\r\n                    <div className=\"flow-nested-arg-title\">\r\n                      <div className=\"flow-nested-arg-label\">ASSOCIATED DATASETS</div>\r\n                      {/* <Fragment>\r\n                        <Button\r\n                          className=\"is-right\"\r\n                          startIcon={<AddIcon />}\r\n                          onClick={() => {\r\n                            setDatasetId([...datasetId,' '])\r\n                          }}\r\n                          >\r\n                            Add\r\n                        </Button>\r\n                      </Fragment> */}\r\n                    </div>\r\n                    {datasetId.map((data:any, index:number)=>(\r\n                      <div className=\"flow-addon-associated_datasets\" key={index}>\r\n                        {(\r\n                          <Fab\r\n                            color=\"primary\"\r\n                            aria-label=\"delete\"\r\n                            size=\"small\"\r\n                            className=\"flow-nested-associated-btn\"\r\n                            disabled={datasetId.length === 1}\r\n                            onClick={() => {\r\n                              var temp:any = datasetId.filter((a:any,i:number)=>{return i!=index})\r\n                              setDatasetId(temp)\r\n                              setValue(temp)\r\n                            }}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </Fab>\r\n                        )}\r\n                            <IkiInput \r\n                              key={'ikinputselect-' + index} \r\n                              _required={true}\r\n                              _error={isValidated && (datasetId[index] === ' ' || datasetId[index] === '') ? 'Cannot be empty' : ''}\r\n                              _label={'Associated Dataset # ' + (index + 1)}\r\n                              _placeholder={\"Select Associated Dataset\"}\r\n                              _type='text'\r\n                              _autoComplete=\"new-password\"\r\n                              _value={value[index] ? datasetId[index] : ' '}\r\n                              _isSelect={true}\r\n                              _fullWidth={true}\r\n                              _selectOptions={datasets}\r\n                              _selectOptionsKeyForVal='dataset_id'\r\n                              _selectOptionsKeyForTxt='name'\r\n                              _onChange={(event: any) => {\r\n                                var updatedAssociatedDatasets:any = datasetId\r\n                                updatedAssociatedDatasets[index] = event.target.value\r\n                                var val:any = value\r\n                                val[index] = event.target.value\r\n                                var temp = updatedAssociatedDatasets.map((a:any,i:number)=>{return val[i] ? val[i]:false}).filter((a:any)=>{return a!=false})\r\n                                setDatasetId(temp)\r\n                                setValue(temp)\r\n                              }}\r\n                            />\r\n                        </div>\r\n                      ))\r\n                    }\r\n                    <div>\r\n                      <IkiButton\r\n                        _variant='contained'\r\n                        _color='default'\r\n                        _label='Add Associated Dataset'\r\n                        _type='button'\r\n                        _fullWidth={true}\r\n                        _loading={false}\r\n                        _disabled={false}\r\n                        _onClick={() => setDatasetId([...datasetId,''])}\r\n                        _startIcon={<AddIcon />}\r\n                      />\r\n                    </div>\r\n                </div>\r\n                \r\n                  {isValidated && datasetId.length < 1 &&(\r\n                    <FormHelperText className=\"input-error\" error>\r\n                      <ErrorIcon />\r\n                      <span>Minimum one Dataset's required</span>\r\n                    </FormHelperText>\r\n                  )}\r\n                </Box>\r\n              </div>\r\n            </div>\r\n          }\r\n        </>\r\n      }\r\n      _actions={\r\n        newDashboardNameExists !== true &&\r\n          <Fragment>\r\n            <IkiButton\r\n              _variant='text'\r\n              _color='default'\r\n              _label=\"Cancel\"\r\n              _type='button'\r\n              _fullWidth={false}\r\n              _loading={false}\r\n              _onClick={() => handleCancel()}\r\n            />\r\n            <IkiButton\r\n              _variant='contained'\r\n              _color='primary'\r\n              _label={isEdit ? 'Update' : 'Upload'}\r\n              _type='button'\r\n              _fullWidth={false}\r\n              _loading={dashUploadStatus === 'pending'}\r\n              _disabled={dashUploadStatus === 'pending'}\r\n              _onClick={() => handleAdddashboardSubmit()}\r\n            />\r\n          </Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Box,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\n\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\nexport function EditDashboardDialog(props: any) {\r\n  const {\r\n    dashboardId,\r\n    handleDialogClose,\r\n    handleSubmit,\r\n    handleCancel,\r\n    open\r\n  } = props;\r\n\r\n  const [dashboardName, setDashboardName] = useState('');\r\n  const [isValidated, setIsvalidated] = useState(false);\r\n  return (\r\n    <Dialog\r\n      onClose={handleDialogClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={open}\r\n      className=\"dialog\"\r\n      fullWidth={true}\r\n      maxWidth=\"xs\"\r\n      disableBackdropClick={true}\r\n    >\r\n      <DialogContent className=\"dialog-content\">\r\n        <div>\r\n          <Box className=\"dialog-title default-color\" mb={2}>\r\n            Edit dashboard\r\n          </Box>\r\n          <div>\r\n            <div className=\"project-id\">{dashboardId}</div>\r\n            <div className=\"project-name\">{props.dashboardName}</div>\r\n          </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            required\r\n            label=\"Dashboard name\"\r\n            placeholder=\"Enter new name for Dashboard\"\r\n            type=\"search\"\r\n            autoComplete=\"new-username\"\r\n            value={dashboardName}\r\n            onChange={(e: any) => {\r\n              setDashboardName(e.target.value);\r\n            }}\r\n            error={isValidated && dashboardName === ''}\r\n            autoFocus\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          {isValidated && dashboardName === '' && (\r\n            <FormHelperText className=\"input-error\" error>\r\n              <ErrorIcon />\r\n              <span>Dashboard name required</span>\r\n            </FormHelperText>\r\n          )}\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions className=\"footer\">\r\n        <Button\r\n          autoFocus\r\n          onClick={() => handleCancel()}\r\n          color=\"default\"\r\n          className=\"button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"button\"\r\n          onClick={() => {\r\n            if (dashboardName !== '') {\r\n              handleSubmit(dashboardName);\r\n              setIsvalidated(false);\r\n            } else {\r\n              setIsvalidated(true);\r\n            }\r\n          }}\r\n        >\r\n          Update\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  TablePagination,\r\n  Card,\r\n  CardContent\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SnackbarMsg from '../../../components/SnackbarMsg';\r\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\r\nimport { AddDashboard } from '../../../components/dialogs/add-dashboard';\r\nimport { EditDashboardDialog } from '../../../components/dialogs/edit-dashboard';\r\nimport IkiButton from '../../../components/IkiFormElements/IkiButton';\r\nimport IkiButtonGroup from '../../../components/IkiFormElements/IkiButtonGroup';\r\nimport IkiInput from '../../../components/IkiFormElements/IkiInput';\r\nimport IkiGrid from '../../../components/IkiLayout/IkiGrid';\r\nimport IkiTable from '../../../components/IkiLayout/IkiTable';\r\n\r\ntype FlowsProps = {\r\n  dashboards: any;\r\n  datasets: any;\r\n  projects: any;\r\n  projectId: string;\r\n  subpageClick: (subpageLink: string) => void;\r\n  createDashboard: (projectId: string, datasetId: any, name: string, file: File) => void;\r\n  editDashboard: (projectId: string, datasetId: any, name: string, dashboardId: string, file: File) => void;\r\n  deleteDashboard: (dashboardId: string) => void;\r\n  uploadProgress: any;\r\n  dashUploadStatus: any;\r\n};\r\n\r\ntype FlowsState = {\r\n  sort: string;\r\n  d_sort: string,\r\n  deleteDialogState: boolean;\r\n  deletePipeline: any;\r\n  deletePipelineName: string;\r\n  deletePipelineID: string;\r\n  selectedDatasetData?: any;\r\n  selectedDashData?: any;\r\n  newFlowDialogState: boolean;\r\n  newFlowName: string;\r\n  newFlowNameError: boolean;\r\n  newFlowNameErrorMsg: string;\r\n  projectId: string;\r\n  projectNameEditMode: Boolean;\r\n  title: string;\r\n  projectDeleteDialogState: boolean;\r\n  projectShareDialogState: boolean;\r\n  projectShareDialogErrorState: boolean;\r\n  projectShareDialogErrorMsg: string;\r\n  snackbarShareProSuccessState: boolean;\r\n  editProjectDialogState: boolean;\r\n  addDatasetDialogState: boolean;\r\n  addDashboardtDialogState: boolean;\r\n  addDatasetMinimize: boolean;\r\n  editDatasetDialogState: boolean;\r\n  editDashboardDialogState: boolean;\r\n  deleteDatasetDialogState: boolean;\r\n  uploadDatasetDialogState: boolean;\r\n  duplicateDialogProjectState: boolean;\r\n  importFlowDialogState: boolean;\r\n  importFlowNameExists: boolean;\r\n  tabValue: number;\r\n  datasetEditMode: boolean;\r\n  dashEditMode: boolean;\r\n  snackbarOpen: boolean;\r\n  snackbarMessage: any;\r\n  snackbarType: string;\r\n  sharingLoading: boolean;\r\n  renamingLoading: boolean;\r\n  deletingLoading: boolean;\r\n  newlyAddedDatasetNameExists: boolean;\r\n  newlyAddedDashNameExists: boolean;\r\n  addFlowLoading: boolean;\r\n  rowsPerPage: number;\r\n  page: number;\r\n  searchTerm: string;\r\n  flowsFilter: string;\r\n  renderAsList: boolean;\r\n  tableSortAsc: boolean;\r\n  tableSortProperty: string;\r\n  toggleFilterDisplay: boolean;\r\n  clickedBox: string;\r\n  dash_rowsPerPage: number;\r\n  dash_page: number;\r\n  dash_searchTerm: string;\r\n  dash_flowsFilter: string;\r\n  dash_renderAsList: boolean;\r\n  dash_tableSortAsc: boolean;\r\n  dash_tableSortProperty: string;\r\n  dash_toggleFilterDisplay: boolean;\r\n  dash_clickedBox: string;\r\n  cloneFlowDialogState: boolean;\r\n  cloneFlowId: string;\r\n  cloneFlowName: string;\r\n  cloneFlowNameError: boolean;\r\n  cloneFlowNameErrorMsg: string;\r\n  cloneProcess: boolean;\r\n  sessionCreated: boolean;\r\n  sessionID: string;\r\n  showContent: boolean;\r\n  loadingTxt: string;\r\n};\r\n\r\nclass DashboardsComponent extends Component<FlowsProps, FlowsState> {\r\n  state: FlowsState = {\r\n    sort: 'all',\r\n    d_sort: 'all',\r\n    deletePipeline: null,\r\n    deleteDialogState: false,\r\n    deletePipelineName: '',\r\n    deletePipelineID: '',\r\n    newFlowDialogState: false,\r\n    newFlowName: '',\r\n    newFlowNameError: false,\r\n    newFlowNameErrorMsg: '',\r\n    projectId: '',\r\n    projectNameEditMode: false,\r\n    title: '',\r\n    projectDeleteDialogState: false,\r\n    projectShareDialogState: false,\r\n    projectShareDialogErrorState: false,\r\n    projectShareDialogErrorMsg: '',\r\n    snackbarShareProSuccessState: false,\r\n    editProjectDialogState: false,\r\n    addDatasetDialogState: false,\r\n    addDashboardtDialogState: false,\r\n    deleteDatasetDialogState: false,\r\n    uploadDatasetDialogState: false,\r\n    editDatasetDialogState: false,\r\n    editDashboardDialogState: false,\r\n    duplicateDialogProjectState: false,\r\n    tabValue: 0,\r\n    datasetEditMode: false,\r\n    addDatasetMinimize: false,\r\n    dashEditMode: false,\r\n    snackbarOpen: false,\r\n    snackbarMessage: null,\r\n    snackbarType: '',\r\n    sharingLoading: false,\r\n    renamingLoading: false,\r\n    deletingLoading: false,\r\n    newlyAddedDatasetNameExists: false,\r\n    newlyAddedDashNameExists: false,\r\n    addFlowLoading: false,\r\n    rowsPerPage: 16,\r\n    page: 0,\r\n    searchTerm: '',\r\n    flowsFilter: 'all',\r\n    renderAsList: false,\r\n    tableSortAsc: true,\r\n    tableSortProperty: '',\r\n    toggleFilterDisplay: false,\r\n    clickedBox: '',\r\n    dash_rowsPerPage: 16,\r\n    dash_page: 0,\r\n    dash_searchTerm: '',\r\n    dash_flowsFilter: 'all',\r\n    dash_renderAsList: false,\r\n    dash_tableSortAsc: true,\r\n    dash_tableSortProperty: '',\r\n    dash_toggleFilterDisplay: false,\r\n    dash_clickedBox: '',\r\n    importFlowDialogState: false,\r\n    importFlowNameExists: false,\r\n    cloneFlowDialogState: false,\r\n    cloneFlowId: '',\r\n    cloneFlowName: '',\r\n    cloneFlowNameError: false,\r\n    cloneFlowNameErrorMsg: '',\r\n    cloneProcess: false,\r\n    sessionCreated: false,\r\n    sessionID: '',\r\n    showContent: false,\r\n    loadingTxt: ''\r\n  };\r\n  componentDidMount() {\r\n    //console.log(\"this.props: \", this.props);\r\n  }\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  onRequestSort = (event: any, property: string) => {\r\n    this.setState({\r\n      tableSortAsc: !this.state.tableSortAsc,\r\n      tableSortProperty: property\r\n    });\r\n  };\r\n\r\n  handleChangeSearchTerm = (e: any) => {\r\n    this.setState({\r\n      searchTerm: e.target.value\r\n    });\r\n  };\r\n\r\n  handleRenderAsList = () => {\r\n    this.setState({ renderAsList: true });\r\n  };\r\n\r\n  handleRenderAsGrid = () => {\r\n    this.setState({ renderAsList: false });\r\n  };\r\n\r\n  handleChangePage = (event: unknown, newPage: number) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setRowsPerPage(parseInt(event.target.value, 10));\r\n    this.setPage(0);\r\n  };\r\n\r\n  setPage = (page: number) => {\r\n    this.setState({ page: page });\r\n  };\r\n\r\n  setRowsPerPage = (rows: number) => {\r\n    this.setState({ rowsPerPage: rows });\r\n  };\r\n\r\n  handleToggleFilter = () => {\r\n    if (this.state.toggleFilterDisplay === true) {\r\n      this.setState({ toggleFilterDisplay: false });\r\n    } else {\r\n      this.setState({ toggleFilterDisplay: true });\r\n    }\r\n  }\r\n\r\n  sortDashboards = (dashboards: any) => {\r\n    //console.log(\"SORT PROJECTS: \");\r\n    //console.log(dashboards);\r\n    if (this.state.tableSortProperty !== '') {\r\n      return this.sortOn(dashboards, this.state.tableSortProperty);\r\n    } else {\r\n      return dashboards;\r\n    }\r\n  };\r\n\r\n  sortOn = (arr: any, property: string) => {\r\n    //console.log(\"ARR: \");\r\n    //console.log(arr);\r\n    var sortedArray = arr.sort((a: any, b: any) => {\r\n      if (b[property] < a[property]) {\r\n        return this.state.tableSortAsc ? 1 : -1;\r\n      }\r\n      if (b[property] > a[property]) {\r\n        return this.state.tableSortAsc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n    return sortedArray;\r\n  };\r\n\r\n  filterDashboards = (dashboards: any) => {\r\n    //console.log(\"import p: \");\r\n    //console.log(dashboards);\r\n    if (this.state.searchTerm !== '') {\r\n      dashboards = dashboards.filter(\r\n        (p: any) =>\r\n          p.name\r\n            .toLowerCase()\r\n            .indexOf(this.state.searchTerm.toLowerCase()) > -1\r\n      );\r\n    }\r\n    return dashboards;\r\n  };\r\n\r\n  onNewDatasetItemClick() {\r\n    this.setState({\r\n      addDatasetDialogState: true,\r\n      datasetEditMode: false\r\n    });\r\n  }\r\n\r\n  viewTypeSwitchButtons = () => {\r\n    const buttons = [\r\n      <Button\r\n        key={1}\r\n        color={this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsList()}\r\n      >\r\n        <ViewListIcon />\r\n      </Button>,\r\n      <Button\r\n        key={2}\r\n        color={!this.state.renderAsList ? 'primary' : 'default'}\r\n        onClick={() => this.handleRenderAsGrid()}\r\n      >\r\n        <ViewComfyIcon />\r\n      </Button>\r\n    ]\r\n    return buttons\r\n  }\r\n\r\n  getDashboardsFilters = (dashboards: any) => {\r\n    if(dashboards) {\r\n      return (\r\n        <div className=\"filters-and-pagination\">\r\n          <div className=\"table-filters\">\r\n                <IkiInput \r\n                  _label=\"\"\r\n                  _placeholder=\"Search...\"\r\n                  _type='text'\r\n                  _autoComplete=\"new-password\"\r\n                  _value={this.state.searchTerm}\r\n                  _size=\"small\"\r\n                  _margin=\"none\"\r\n                  _filterType={true}\r\n                  _onChange={(e: any) => this.handleChangeSearchTerm(e)}\r\n                  _startIcon={\r\n                    {\r\n                      _icon: (\r\n                        <SearchIcon fontSize=\"small\" />\r\n                      )\r\n                    }\r\n                  }\r\n                />\r\n                <IkiButtonGroup\r\n                  _variant=\"contained\"\r\n                  _size=\"small\"\r\n                  _color=\"secondary\"\r\n                  _buttons={\r\n                    this.viewTypeSwitchButtons()\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"table-pagination\">\r\n                <TablePagination\r\n                  component=\"div\"\r\n                  className=\"flows-pagination\"\r\n                  labelRowsPerPage=\"Dashboards per page\"\r\n                  rowsPerPageOptions={[8, 16, 32]}\r\n                  colSpan={3}\r\n                  count={dashboards.length}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      'aria-label': 'Dashboards per page'\r\n                    }\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n                />\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  getDashboards(dashboards: any) {\r\n    var dashboardsArr: any = [], pageDashboards, dashboardsWithUploading: any = [];\r\n    let dashboardUploading: any;\r\n    if(this.props.dashboards) {\r\n      dashboardsArr = this.props.dashboards;\r\n      dashboardsArr = this.sortDashboards(this.filterDashboards(dashboardsArr));\r\n      pageDashboards = dashboardsArr.slice(\r\n        this.state.page * this.state.rowsPerPage,\r\n        this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\r\n      );\r\n      dashboardsArr.forEach((datasetData: any, index: number) => {\r\n        dashboardUploading = this.props.uploadProgress.filter((uploadProgressData: any)=>{\r\n          return uploadProgressData.status !== 'complete' && datasetData.dataset_id === uploadProgressData.datasetId}\r\n        )\r\n        if(Object.keys(dashboardUploading).length > 0){\r\n          //dashboardsWithUploading.push(datasetData.dataset_id);\r\n          dashboardsWithUploading[datasetData.dataset_id] = datasetData.dataset_id;\r\n        }\r\n      });\r\n    }\r\n    //console.log(\"dashboardsWithUploading: \", dashboardsWithUploading, \", dashboardUploading: \", dashboardUploading);\r\n    if (dashboardsArr && dashboardsArr.length === 0) {\r\n      return (\r\n        <Fragment>\r\n          {this.getDashboardsFilters(dashboardsArr)}\r\n          <Grid item xs={12}>\r\n            <Box display=\"flex\" alignItems=\"center\" className=\"no-results\">\r\n              <FindInPageIcon className=\"no-results-icon\" />\r\n              <span className=\"no-results-txt\">No dashboards found</span>\r\n            </Box>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return(\r\n      <Fragment>\r\n        {this.getDashboardsFilters(dashboardsArr)}\r\n        {this.state.renderAsList ? (\r\n          <Grid item xs={12} className=\"i-pb-0\">\r\n            <Card className=\"cardbox has-table tableHolder\">\r\n              <CardContent className=\"content table-inside\">\r\n                <IkiTable\r\n                      _type=\"Dashboard\"\r\n                      _link='/dash/'\r\n                      _header={\r\n                        [\r\n                          {\r\n                            key: 'name',\r\n                            name: 'Dashboard'\r\n                          },\r\n                          {\r\n                            key: 'dashboard_id',\r\n                            name: 'ID'\r\n                          }\r\n                        ]\r\n                      }\r\n                      _data={pageDashboards}\r\n                      _functions={\r\n                        [\r\n                          {\r\n                            edit: (item: any) => this.handleDashEdit(item)\r\n                          },\r\n                          {\r\n                            delete: (item: any) => this.handleDashboardDelete(item)\r\n                          },\r\n                          {\r\n                            browse: (itemId: string) => this.props.subpageClick(`/dash/${itemId}`)\r\n                          }\r\n                        ]\r\n                      }\r\n                  />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ):(\r\n          <IkiGrid\r\n            _type='Dashboard'\r\n            _link='/dash/'\r\n            _icon={<BarChartIcon />}\r\n            _data={pageDashboards}\r\n            _uploadInfo={dashboardUploading}\r\n            _functions={\r\n              [\r\n                {\r\n                  edit: (item: any) => this.handleDashEdit(item)\r\n                },\r\n                {\r\n                  delete: (item: any) => this.handleDashboardDelete(item)\r\n                },\r\n                {\r\n                  browse: (itemId: string) => this.props.subpageClick(`/dash/${itemId}`)\r\n                }\r\n              ]\r\n            }\r\n          />\r\n        )}\r\n        {dashboardsArr.length > this.state.rowsPerPage && (\r\n          <TablePagination\r\n                  component=\"div\"\r\n                  className=\"pagination-sm\"\r\n                  labelRowsPerPage=\"Datasets per page\"\r\n                  rowsPerPageOptions={[8, 16, 32]}\r\n                  colSpan={3}\r\n                  count={dashboardsArr.length}\r\n                  rowsPerPage={this.state.rowsPerPage}\r\n                  page={this.state.page}\r\n                  SelectProps={{\r\n                    inputProps: {\r\n                      'aria-label': 'Datasets per page'\r\n                    }\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var dashboards: any = [];\r\n    if(this.props.dashboards){\r\n      dashboards = this.props.dashboards;\r\n    }\r\n    var projectData = this.props.projects.filter(\r\n      (p: any) => p.project_id === this.props.projectId\r\n    )[0];\r\n    var datasetsExisting = false;\r\n    if(this.props.datasets && this.props.datasets.length > 0) {\r\n      datasetsExisting = true;\r\n    }\r\n    return (\r\n      <Fragment>\r\n          <Fragment>\r\n              <div className=\"under-tab-buttons\">\r\n                        <IkiButton\r\n                          _disabled={!datasetsExisting}\r\n                          _variant='contained'\r\n                          _color='primary'\r\n                          _label=\"Upload New Dashboard\"\r\n                          _type='button'\r\n                          _fullWidth={false}\r\n                          _loading={false}\r\n                          _startIcon={\r\n                            <i className=\"zmdi zmdi-cloud-upload zmdi-hc-fw\"></i>\r\n                          }\r\n                          _onClick={() => this.onDashboardItemClick()}\r\n                        />\r\n            </div>\r\n            <div className=\"cardbox-holder\">\r\n              {this.getDashboards(dashboards)}\r\n            </div>\r\n\r\n            <AddDashboard\r\n                projectId={this.props.projectId}\r\n                projectName={projectData ? projectData.name : ''}\r\n                isEdit={this.state.dashEditMode}\r\n                open={\r\n                    this.state.addDashboardtDialogState ||\r\n                    this.props.dashUploadStatus === 'pending'\r\n                }\r\n                name={\r\n                    this.state.selectedDashData\r\n                    ? this.state.selectedDashData.name\r\n                    : ''\r\n                }\r\n                datasetIds={\r\n                    this.state.selectedDashData\r\n                    ? this.state.selectedDashData.dataset_id\r\n                    : []\r\n                }\r\n                dashboardId={\r\n                    this.state.selectedDashData\r\n                    ? this.state.selectedDashData.dashboard_id\r\n                    : ''\r\n                }\r\n                datasets={this.handleDatasetsForDash()}\r\n                dashUploadStatus={this.props.dashUploadStatus}\r\n                handleDialogClose={() => this.handleAddDashboardDialogClose()}\r\n                handleSubmit={(name: string, file: File, datasetId: any, dashboardId: string) =>\r\n                    this.handleAddDashDailogSubmit(datasetId, name, file, dashboardId)\r\n                }\r\n                handleSubmitOverwrite={(name: string, file: File, datasetId: any) =>\r\n                    this.handleAddDashDialogSubmitOverwrite(name, file, datasetId)\r\n                }\r\n                handleCancel={() => this.handleAddDashboardDialogClose()}\r\n                newDashboardNameExists={this.state.newlyAddedDashNameExists}\r\n                dismissAlert={() => this.handleDismissDashNameExists()}\r\n            ></AddDashboard>\r\n            <EditDashboardDialog\r\n                dashboardId={\r\n                    this.state.selectedDashData\r\n                    ? this.state.selectedDashData.dashboard_id\r\n                    : ''\r\n                }\r\n                dashboardName={\r\n                    this.state.selectedDashData\r\n                    ? this.state.selectedDashData.name\r\n                    : ''\r\n                }\r\n                open={this.state.editDashboardDialogState}\r\n                handleDialogClose={() => this.handleEditDashboardDialogClose()}\r\n                handleSubmit={() => this.handleEditDashboardDialogSubmit()}\r\n                handleCancel={() => this.handleEditDashboardDialogClose()}\r\n            ></EditDashboardDialog>\r\n\r\n            <SnackbarMsg\r\n              snackbarOpen={this.state.snackbarOpen}\r\n              snackbarType={this.state.snackbarType}\r\n              snackbarMsg={this.state.snackbarMessage}\r\n              onSnackbarClose={this.handleSnackbarClose}\r\n            />\r\n          </Fragment>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  handleDismissDashNameExists() {\r\n    this.setState({\r\n      newlyAddedDashNameExists: false\r\n    });\r\n  }\r\n\r\n  handleAddDashDailogSubmit(datasetId: any, name: string, file: File, dashboardId: string) {\r\n    var checkDashNameOverlap = false;\r\n    const dashboards = this.props.dashboards.filter(\r\n      (dashboardData: any) =>\r\n        dashboardData.project_id === this.props.projectId\r\n    );\r\n    // eslint-disable-next-line\r\n    dashboards.map((dashboardData: any) => {\r\n        //console.log(\"NAME: \" + name + \", dashboardData.name: \" + dashboardData.name + \", id: \" + dashboardData.dataset_id);\r\n        if (\r\n          dashboardData.name === name &&\r\n          dashboardData.project_id === this.props.projectId\r\n        ) {\r\n          checkDashNameOverlap = true;\r\n        }\r\n        return ''\r\n    });\r\n    //console.log(\"checkDashNameOverlap: \" + checkDashNameOverlap);\r\n    if (checkDashNameOverlap !== false) {\r\n      this.setState({ newlyAddedDashNameExists: true });\r\n    } else {\r\n      if (!this.state.dashEditMode) {\r\n        this.props.createDashboard(this.props.projectId, datasetId, name, file);\r\n        //this.props.createDataset(this.props.projectId, name, file, \"\", false);\r\n        this.setState({\r\n          snackbarMessage: (\r\n            <Fragment>\r\n              <div className=\"msg\">\r\n                You have succesfully uploaded new dashboard.\r\n              </div>\r\n              <div className=\"val\">{name}</div>\r\n            </Fragment>\r\n          ),\r\n          snackbarType: 'success',\r\n          addDashboardtDialogState: false,\r\n\r\n          snackbarOpen: true\r\n        });\r\n      } else {\r\n        this.props.editDashboard(\r\n          this.props.projectId,\r\n          datasetId,\r\n          name,\r\n          dashboardId,\r\n          file\r\n        );\r\n        this.setState({\r\n          snackbarMessage: (\r\n            <Fragment>\r\n              <div className=\"msg\">You have succesfully edited dashboard: </div>\r\n              <div className=\"val\">{name}</div>\r\n            </Fragment>\r\n          ),\r\n          snackbarType: 'success',\r\n          snackbarOpen: true\r\n        });\r\n      }\r\n      this.handleAddDashboardDialogClose();\r\n    }\r\n  }\r\n  handleAddDashDialogSubmitOverwrite(name: string, file: File, datasetId: any) {\r\n    // CALL TO API TO OVERWRITE DATASET\r\n    //console.log('OVERWRITE dashboard: ' + name);\r\n    //this.props.createDataset(this.props.projectId, name, file);\r\n    var existingDashboardId = '';\r\n    const dashboards = this.props.dashboards.filter(\r\n      (dashData: any) =>\r\n        dashData.project_id === this.props.projectId\r\n    );\r\n    // eslint-disable-next-line\r\n    dashboards.map((dashData: any) => {\r\n        //console.log(\"NAME: \" + name + \", datasetData.name: \" + datasetData.name + \", id: \" + datasetData.dataset_id);\r\n        if (\r\n          dashData.name === name &&\r\n          dashData.project_id === this.props.projectId\r\n        ) {\r\n          existingDashboardId = dashData.dashboard_id;\r\n        }\r\n        return ''\r\n    });\r\n    if (existingDashboardId !== '') {\r\n      this.props.editDashboard(this.props.projectId, datasetId, name, existingDashboardId, file)\r\n      // this.props.editDataset(\r\n      //   this.props.projectId,\r\n      //   existingDatasetId,\r\n      //   name,\r\n      //   file\r\n      // );\r\n      // this.props.getDashboards(this.props.projectId)\r\n\r\n      this.setState({\r\n        newlyAddedDashNameExists: false,\r\n        snackbarMessage: (\r\n          <Fragment>\r\n            <div className=\"msg\">You have succesfully updated dashboard: </div>\r\n            <div className=\"val\">{name}</div>\r\n          </Fragment>\r\n        ),\r\n        snackbarType: 'success',\r\n        snackbarOpen: true\r\n      });\r\n      this.handleAddDashboardDialogClose();\r\n    }\r\n  }\r\n\r\n  handleAddDashboardDialogClose() {\r\n    this.setState({ addDashboardtDialogState: false });\r\n  }\r\n\r\n  handleDatasetsForDash() {\r\n    var dForDash: any = [];\r\n    if(this.props.datasets && this.props.datasets.length > 0) {\r\n      dForDash = this.props.datasets.filter(\r\n        (datasetData: any) => datasetData.project_id === this.props.projectId\r\n      )\r\n      return dForDash;\r\n    } else {\r\n      return null;\r\n    }\r\n    //this.props.data.dashboards.filter((d:any)=>{return d.project_id = this.props.projectId})\r\n    //console.log(\"dForDash: \", dForDash);\r\n    //return dForDash;\r\n  }\r\n\r\n  onDashboardItemClick() {\r\n    this.setState({\r\n      addDashboardtDialogState: true,\r\n      dashEditMode: false\r\n    });\r\n  }\r\n\r\n  handleDashEdit(data: any) {\r\n    this.setState({\r\n      addDashboardtDialogState: true,\r\n      selectedDashData: data,\r\n      dashEditMode: true\r\n    })\r\n  }\r\n  handleEditDashboardDialogClose() {\r\n    this.setState({ addDashboardtDialogState: false });\r\n  }\r\n  handleEditDashboardDialogSubmit() {\r\n    this.handleEditDashboardDialogClose();\r\n  }\r\n  handleDashboardBrowse(data: any) {\r\n    var subpageLink = `/dash/${data.dashboard_id}`;\r\n    this.props.subpageClick(subpageLink);\r\n  }\r\n  handleDashboardDelete(data: any) {\r\n    this.props.deleteDashboard(data.dashboard_id)\r\n    this.setState({\r\n      snackbarMessage: (\r\n        <Fragment>\r\n          <div className=\"msg\">You have succesfully deleted dashboard: </div>\r\n          <div className=\"val\">{data.dashboard_id}</div>\r\n        </Fragment>\r\n      ),\r\n      snackbarType: 'success',\r\n      snackbarOpen: true\r\n    });\r\n  }\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n  \r\n}\r\n\r\nexport default DashboardsComponent;\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n} from '@material-ui/core';\r\nimport IkiLoader from '../../components/IkiLoader';\r\n\r\nimport './ProjectPage.module.scss';\r\nimport MoreMenu from './more-menu';\r\nimport {\r\n  shareProject,\r\n  enterSession as enterSessionManully,\r\n  exitSession as exitSessionManually\r\n} from '../../services/app-data.service';\r\nimport {\r\n  DeleteProjectDialog,\r\n  ShareProjectDialog,\r\n  EditProjectDialog,\r\n  DuplicateProjectDialog,\r\n} from '../../components/dialogs';\r\nimport SnackbarMsg from '../../components/SnackbarMsg';\r\nimport FlowsComponent from './flows/flows-component';\r\nimport DatasetsComponent from './datasets/datasets-components';\r\nimport DashboardsComponent from './dashboards/dashboards-component';\r\nimport IkiPageHeader from '../../components/IkiLayout/IkiPageHeader'\r\n\r\ntype FlowsProps = {\r\n  data: any;\r\n  match: any;\r\n  classes: any;\r\n  history: any;\r\n  componentList: any;\r\n  facetDocLoaded: boolean;\r\n  addFlow: (flowObj: any) => void;\r\n  deleteFlow: (id: string) => void;\r\n  restoreFlow: (id: string) => void;\r\n  renameFlow: (id: string, name: string) => void;\r\n  getFlows: (projectId: string) => void;\r\n  logout: () => void;\r\n  renameProject: (projectId: string, newName: string) => void;\r\n  deleteProject: (projectId: string) => void;\r\n  duplicateProject: (projectId: string, name: string, targetUser: string) => void;\r\n  getDatasets: (projectId: string) => void;\r\n  getDashboards: (projectId: string) => void;\r\n  createDataset: (projectId: string, datasetName: string, file: File) => void;\r\n  createDashboard: (projectId: string, datasetId: any, name: string, file: File) => void;\r\n  deleteDataset: (datasetId: string) => void;\r\n  deleteDashboard: (dashboardId: string) => void;\r\n  editDataset: (\r\n    projectId: string,\r\n    datasetId: string,\r\n    datasetName: string,\r\n    file: File\r\n  ) => void;\r\n  editDashboard: (\r\n    projectId: string,\r\n    datasetId: any,\r\n    name: string,\r\n    dashboardId: string,\r\n    file: File\r\n  ) => void;\r\n  enterSession: (projectId: string) => void;\r\n  email: string;\r\n  metabaseLoginId: string;\r\n  activePageType: string;\r\n  fireReturnToProject: (sourcePage: string) => void;\r\n  cleanSession: () => void;\r\n  fillSessions: (proSess: string, proId: string) => void;\r\n  uploadProgress: any;\r\n};\r\ntype FlowsState = {\r\n  sort: string;\r\n  deleteDialogState: boolean;\r\n  deletePipeline: any;\r\n  deletePipelineName: string;\r\n  deletePipelineID: string;\r\n  selectedDatasetData?: any;\r\n  selectedDashData?: any;\r\n  newFlowDialogState: boolean;\r\n  newFlowName: string;\r\n  newFlowNameError: boolean;\r\n  newFlowNameErrorMsg: string;\r\n  projectId: string;\r\n  projectNameEditMode: Boolean;\r\n  title: string;\r\n  projectDeleteDialogState: boolean;\r\n  projectShareDialogState: boolean;\r\n  projectShareDialogErrorState: boolean;\r\n  projectShareDialogErrorMsg: string;\r\n  snackbarShareProSuccessState: boolean;\r\n  editProjectDialogState: boolean;\r\n  addDatasetDialogState: boolean;\r\n  addDashboardtDialogState: boolean;\r\n  addDatasetMinimize: boolean;\r\n  editDatasetDialogState: boolean;\r\n  editDashboardDialogState: boolean;\r\n  deleteDatasetDialogState: boolean;\r\n  uploadDatasetDialogState: boolean;\r\n  duplicateDialogProjectState: boolean;\r\n  importFlowDialogState: boolean;\r\n  importFlowNameExists: boolean;\r\n  tabValue: number;\r\n  datasetEditMode: boolean;\r\n  dashEditMode: boolean;\r\n  snackbarOpen: boolean;\r\n  snackbarMessage: any;\r\n  snackbarType: string;\r\n  sharingLoading: boolean;\r\n  renamingLoading: boolean;\r\n  deletingLoading: boolean;\r\n  newlyAddedDatasetNameExists: boolean;\r\n  newlyAddedDashNameExists: boolean;\r\n  addFlowLoading: boolean;\r\n  rowsPerPage: number;\r\n  page: number;\r\n  searchTerm: string;\r\n  flowsFilter: string;\r\n  renderAsList: boolean;\r\n  tableSortAsc: boolean;\r\n  tableSortProperty: string;\r\n  toggleFilterDisplay: boolean;\r\n  clickedBox: string;\r\n  cloneFlowDialogState: boolean;\r\n  cloneFlowId: string;\r\n  cloneFlowName: string;\r\n  cloneFlowNameError: boolean;\r\n  cloneFlowNameErrorMsg: string;\r\n  cloneProcess: boolean;\r\n  sessionCreated: boolean;\r\n  sessionID: string;\r\n  showContent: boolean;\r\n  loadingTxt: string;\r\n};\r\n\r\nclass ProjectComponent extends Component<FlowsProps, FlowsState> {\r\n  subpageClicked: boolean = false;\r\n  state: FlowsState = {\r\n    sort: 'all',\r\n    deletePipeline: null,\r\n    deleteDialogState: false,\r\n    deletePipelineName: '',\r\n    deletePipelineID: '',\r\n    newFlowDialogState: false,\r\n    newFlowName: '',\r\n    newFlowNameError: false,\r\n    newFlowNameErrorMsg: '',\r\n    projectId: '',\r\n    projectNameEditMode: false,\r\n    title: '',\r\n    projectDeleteDialogState: false,\r\n    projectShareDialogState: false,\r\n    projectShareDialogErrorState: false,\r\n    projectShareDialogErrorMsg: '',\r\n    snackbarShareProSuccessState: false,\r\n    editProjectDialogState: false,\r\n    addDatasetDialogState: false,\r\n    addDashboardtDialogState: false,\r\n    deleteDatasetDialogState: false,\r\n    uploadDatasetDialogState: false,\r\n    editDatasetDialogState: false,\r\n    editDashboardDialogState: false,\r\n    duplicateDialogProjectState: false,\r\n    tabValue: 0,\r\n    datasetEditMode: false,\r\n    addDatasetMinimize: false,\r\n    dashEditMode: false,\r\n    snackbarOpen: false,\r\n    snackbarMessage: null,\r\n    snackbarType: '',\r\n    sharingLoading: false,\r\n    renamingLoading: false,\r\n    deletingLoading: false,\r\n    newlyAddedDatasetNameExists: false,\r\n    newlyAddedDashNameExists: false,\r\n    addFlowLoading: false,\r\n    rowsPerPage: 16,\r\n    page: 0,\r\n    searchTerm: '',\r\n    flowsFilter: 'all',\r\n    renderAsList: false,\r\n    tableSortAsc: true,\r\n    tableSortProperty: '',\r\n    toggleFilterDisplay: false,\r\n    clickedBox: '',\r\n    importFlowDialogState: false,\r\n    importFlowNameExists: false,\r\n    cloneFlowDialogState: false,\r\n    cloneFlowId: '',\r\n    cloneFlowName: '',\r\n    cloneFlowNameError: false,\r\n    cloneFlowNameErrorMsg: '',\r\n    cloneProcess: false,\r\n    sessionCreated: false,\r\n    sessionID: '',\r\n    showContent: false,\r\n    loadingTxt: ''\r\n  };\r\n  componentDidMount() {\r\n    /*console.log('Project props...', this.props);\r\n    if(this.props.data.activeProjectId !== '') {\r\n      //console.log('this.props.data.activeProjectId... ', this.props.data.activeProjectId);\r\n      let pathName = '';\r\n      if(this.props.history.location.pathname) {\r\n        pathName = this.props.history.location.pathname;\r\n        var pathName_array = pathName.split(\"/\");\r\n        var page_id = pathName_array[pathName_array.length - 1];\r\n        var page_type = pathName_array[2];\r\n        if(page_type === 'project') {\r\n          this.props.fillSessions('', page_id);\r\n        }\r\n      }\r\n    }*/\r\n    //console.log(\"props metabaseLoginId - project page: \" + this.props.metabaseLoginId);\r\n    //console.log(\"this.props: \", this.props);\r\n    this.setState({ loadingTxt: 'Creating Project Session...' });\r\n    var urlParamProjectId = this.props.match.params['id'];\r\n    var typeOfPageAccess = \"\";\r\n    if (this.props.history.action) {\r\n      typeOfPageAccess = this.props.history.action;\r\n    }\r\n    //this.props.fireReturnToProject(\"project\");\r\n    if (!urlParamProjectId || urlParamProjectId === '') {\r\n      this.props.history.push('/dashboard');\r\n    } else {\r\n      if (this.props.activePageType === \"schedule\" || this.props.activePageType === \"pipeline\" || this.props.activePageType === \"dataset\" || this.props.activePageType === \"dash\") {\r\n        if (this.props.activePageType === \"pipeline\") {\r\n          this.setState({\r\n            projectId: urlParamProjectId,\r\n            tabValue: 0\r\n          });\r\n        } else if (this.props.activePageType === \"dataset\") {\r\n          //console.log(\"this.props.activePageType IN dataset\");\r\n          this.setState({\r\n            projectId: urlParamProjectId,\r\n            tabValue: 1\r\n          });\r\n        } else if (this.props.activePageType === \"dash\") {\r\n          this.setState({\r\n            projectId: urlParamProjectId,\r\n            tabValue: 2\r\n          });\r\n        } else {\r\n          this.setState({\r\n            projectId: urlParamProjectId,\r\n            tabValue: 0\r\n          });\r\n        }\r\n        this.props.getFlows(urlParamProjectId);\r\n        this.props.getDatasets(urlParamProjectId);\r\n        this.props.getDashboards(urlParamProjectId);\r\n        this.setState({\r\n          sessionCreated: true,\r\n          loadingTxt: 'Preparing Project View...'\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({ showContent: true });\r\n        }, 2000);\r\n      } else {\r\n        this.setState({\r\n          projectId: urlParamProjectId,\r\n          tabValue: 0\r\n        });\r\n        //console.log(\"props metabaseLoginId - project page: \" + this.props.metabaseLoginId);\r\n        //console.log(\"typeOfPageAccess: \" + typeOfPageAccess);\r\n        if (typeOfPageAccess !== \"POP\") {\r\n          enterSessionManully(urlParamProjectId).then((sessRes: any) => {\r\n            //console.log(\"project, after enter sess: \" + sessRes);\r\n            this.props.getFlows(urlParamProjectId);\r\n            this.props.getDatasets(urlParamProjectId);\r\n            this.props.getDashboards(urlParamProjectId);\r\n            this.setState({\r\n              sessionCreated: true,\r\n              loadingTxt: 'Preparing Project View...'\r\n            });\r\n            this.props.fillSessions(sessRes, urlParamProjectId);\r\n            setTimeout(() => {\r\n              this.setState({ showContent: true });\r\n            }, 2000);\r\n          }).catch((enterSessRes: any) => {\r\n            //this.showStatus(\"error\", \"Something went wrong. Redirecting to Projects...\");\r\n            this.setState({\r\n              snackbarMessage: (\r\n                <Fragment>\r\n                  <div className=\"msg\">Something went wrong. Redirecting to Projects...</div>\r\n                </Fragment>\r\n              ),\r\n              snackbarType: \"error\",\r\n              snackbarOpen: true\r\n            });\r\n            setTimeout(() => {\r\n              this.props.history.push(`/dashboard/projects`);\r\n            }, 3000)\r\n          });\r\n          //this.props.enterSession(urlParamProjectId);\r\n        } else {\r\n          this.props.getFlows(urlParamProjectId);\r\n          this.props.getDatasets(urlParamProjectId);\r\n          this.props.getDashboards(urlParamProjectId);\r\n          this.setState({\r\n            sessionCreated: true,\r\n            loadingTxt: 'Preparing Project View...'\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ showContent: true });\r\n          }, 2000);\r\n        }\r\n      }\r\n      //this.props.getFlows(urlParamProjectId);\r\n      //this.props.getDatasets(urlParamProjectId);\r\n      //this.props.getDashboards(urlParamProjectId);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    //console.log(\"componentWillUnmount subpageC: \" + this.subpageClicked);\r\n    //console.log(\"componentWillUnmount - this.props...\", this.props);\r\n\r\n    let isUnderProject: boolean = false;\r\n    if(this.props.history.location.pathname) {\r\n      var pathName = this.props.history.location.pathname;\r\n      var pathName_array = pathName.split(\"/\");\r\n      var page_id = pathName_array[pathName_array.length - 1];\r\n      var page_type = pathName_array[2];\r\n      //console.log('page_type: ' + page_type);\r\n      if(page_type === 'project-schedules') {\r\n        isUnderProject = true;\r\n      }\r\n    }\r\n\r\n    var typeOfPageAccess = \"\";\r\n    if (this.props.history.action) {\r\n      typeOfPageAccess = this.props.history.action;\r\n    }\r\n    //console.log('isUnderProject: ' + isUnderProject);\r\n    if (typeOfPageAccess !== \"POP\" && !isUnderProject) {\r\n      if (!this.subpageClicked) {\r\n        this.props.fireReturnToProject(\"\");\r\n        this.setState({ sessionCreated: false });\r\n        exitSessionManually(this.state.projectId).then((exitSessRes: any) => {\r\n          this.props.cleanSession();\r\n        }).catch((exitSessErr: any) => {\r\n          this.props.cleanSession();\r\n        });\r\n      } else {\r\n        if (this.state.tabValue === 0) {\r\n          this.props.fireReturnToProject(\"pipeline\");\r\n        } else if (this.state.tabValue === 1) {\r\n          this.props.fireReturnToProject(\"dataset\");\r\n        } else if (this.state.tabValue === 2) {\r\n          this.props.fireReturnToProject(\"dash\");\r\n        } else {\r\n          this.props.fireReturnToProject(\"pipeline\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  showStatus(variant: any, message: string) {\r\n    this.setState({\r\n      snackbarMessage: (\r\n        <Fragment>\r\n          <div className=\"msg\">\r\n            {message}\r\n          </div>\r\n        </Fragment>\r\n      ),\r\n      snackbarType: variant,\r\n      snackbarOpen: true\r\n    });\r\n  }\r\n\r\n  handleDialogkOpen = (flow: any) => {\r\n    this.setState({\r\n      deleteDialogState: true,\r\n      deletePipeline: flow,\r\n      deletePipelineName: flow.name,\r\n      deletePipelineID: flow.pipeline_id\r\n    });\r\n    //console.log(\"deleteDialogState: \" + this.state.deleteDialogState)\r\n  };\r\n  handleOnClone = (pipelineId: string, pipelineName: string) => {\r\n    this.setState({\r\n      cloneFlowDialogState: true,\r\n      cloneFlowId: pipelineId,\r\n      cloneFlowName: pipelineName\r\n    });\r\n    //console.log(\"deleteDialogState: \" + this.state.deleteDialogState)\r\n  };\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      deleteDialogState: false,\r\n      deletePipeline: null,\r\n      deletePipelineName: '',\r\n      deletePipelineID: '',\r\n      projectShareDialogState: false,\r\n      projectShareDialogErrorState: false,\r\n      projectShareDialogErrorMsg: ''\r\n    });\r\n    //console.log(\"deleteDialogState: \" + this.state.deleteDialogState)\r\n  };\r\n\r\n  toggleProjectNameEditMode(name: string) {\r\n    if (this.state.projectNameEditMode) {\r\n      this.setState({\r\n        projectNameEditMode: false\r\n      });\r\n      this.props.renameProject(this.state.projectId, this.state.title);\r\n    } else {\r\n      this.setState({\r\n        projectNameEditMode: true,\r\n        title: name\r\n      });\r\n    }\r\n  }\r\n\r\n  logoutHandler() {\r\n    this.props.logout();\r\n  }\r\n\r\n  onChangeTitle(e: any) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeTabs(event: React.ChangeEvent<{}>, newValue: number) {\r\n    this.setState({ tabValue: newValue });\r\n  }\r\n\r\n  handleToggleFilter = () => {\r\n    if (this.state.toggleFilterDisplay === true) {\r\n      this.setState({ toggleFilterDisplay: false });\r\n    } else {\r\n      this.setState({ toggleFilterDisplay: true });\r\n    }\r\n  }\r\n\r\n  onEditClick(pipelineId: string) {\r\n    var subpageLink = `/flow/${pipelineId}`;\r\n    this.handleSubpageClick(subpageLink);\r\n    //this.props.history.push(`/flow/${pipelineId}`);\r\n  }\r\n\r\n  handleDismissDatasetNameExists() {\r\n    this.setState({\r\n      newlyAddedDatasetNameExists: false\r\n    });\r\n  }\r\n  handleDismissDashNameExists() {\r\n    this.setState({\r\n      newlyAddedDashNameExists: false\r\n    });\r\n  }\r\n\r\n  handleSubpageClick(subpageLink: string) {\r\n    this.subpageClicked = true;\r\n    //this.props.history.push(`/flow/${this.props.data.pipeline_id}`);\r\n    this.props.history.push(subpageLink);\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"metabase session id: \" + this.props.metabaseLoginId);\r\n    //console.log(this.props.metabaseLoginId);\r\n    //console.log(\"activePageType: \" + this.props.activePageType);\r\n    //console.log(\"props metabaseLoginId - project page: \" + this.props.metabaseLoginId);\r\n    //console.log(\"this.props.uploadProgress: \", this.props.uploadProgress);\r\n    // eslint-disable-next-line\r\n    var projectId: any,\r\n      datasetId: any,\r\n      dashboardId: any,\r\n      dashName: any,\r\n      datasetName: any,\r\n      flows: any,\r\n      projectData: any,\r\n      datasets: any,\r\n      dashboards: any\r\n    if (this.state.sessionCreated && this.props.data.flowsLoaded && this.props.data.datasetsLoaded && this.props.data.dashboardsLoaded) {\r\n      projectId = this.state.projectId;\r\n      flows = this.props.data.flows[projectId];\r\n      //console.log(\"data FLOWS in render: \");\r\n      //console.log(this.props.data);\r\n      datasetId = this.state.selectedDatasetData\r\n        ? this.state.selectedDatasetData.dataset_id\r\n        : '';\r\n\r\n      dashboardId = this.state.selectedDashData\r\n        ? this.state.selectedDashData.dashboard_id\r\n        : '';\r\n\r\n      dashName = this.state.selectedDashData\r\n        ? this.state.selectedDashData.name\r\n        : '';\r\n\r\n      datasetName = this.state.selectedDatasetData\r\n        ? this.state.selectedDatasetData.name\r\n        : '';\r\n\r\n      projectData = this.props.data.projects.filter(\r\n        (p: any) => p.project_id === projectId\r\n      )[0];\r\n\r\n      datasets = this.props.data.datasets.filter(\r\n        (datasetData: any) => datasetData.project_id === projectId\r\n      );\r\n\r\n      dashboards = this.props.data.dashboards.filter(\r\n        (dashboardData: any) => dashboardData.project_id === projectId\r\n      );\r\n\r\n      if (\r\n        (this.props.data.projects.length > 0 &&\r\n          !projectData &&\r\n          projectId !== '') ||\r\n        (this.props.data.projectsLoaded && this.props.data.projects.length === 0)\r\n      ) {\r\n        this.props.history.push('/dashboard');\r\n      }\r\n      if (this.props.data.flowsLoaded) {\r\n\r\n      }\r\n      if (this.props.data.datasetsLoaded) {\r\n\r\n      }\r\n      if (this.props.data.dashboardsLoaded) {\r\n\r\n      }\r\n    }\r\n    //console.log(this.props,this.state)\r\n    return (\r\n      <Fragment>\r\n        <Container className=\"main-container\" component=\"main\" maxWidth={false}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <IkiLoader\r\n                loadingTxt={this.state.loadingTxt}\r\n                fadeOut={this.state.showContent}\r\n                placement=\"next-to-nav\"\r\n                history={this.props.history}\r\n                backLink={`/dashboard`}\r\n              />\r\n              <IkiPageHeader\r\n                  _breadcrumbLink='/dashboard'\r\n                  _breadcrumbText='Home / Projects'\r\n                  _breadcrumbBackIcon={true}\r\n                  _breadcrumbTitle={projectData ? projectData.name : ''}\r\n                  _actionButtons={\r\n                    <MoreMenu\r\n                      onEdit={() => {\r\n                        this.setState({ editProjectDialogState: true });\r\n                      }}\r\n                      onDelete={() => {\r\n                        this.setState({ projectDeleteDialogState: true });\r\n                      }}\r\n                      onShare={() => {\r\n                        this.setState({ projectShareDialogState: true });\r\n                      }}\r\n                      onDuplicate={()=>{\r\n                        this.setState({duplicateDialogProjectState:true});\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className=\"tab-container flow-tab-container\">\r\n            <Grid item xs={12}>\r\n              <Tabs\r\n                value={this.state.tabValue}\r\n                classes={{\r\n                  indicator: 'flow-tab-indicator'\r\n                }}\r\n                onChange={this.onChangeTabs.bind(this)}\r\n              >\r\n                <Tab label=\"Flows\"></Tab>\r\n                <Tab label=\"Datasets\"></Tab>\r\n                <Tab label=\"Dashboards\"></Tab>\r\n              </Tabs>\r\n            </Grid>\r\n          </Grid>\r\n          <div hidden={this.state.tabValue !== 0}>\r\n              <FlowsComponent\r\n                flows={flows}\r\n                subpageClick={(link: string) => this.handleSubpageClick(link)}\r\n                addFlow={(flowObj: any) => this.props.addFlow(flowObj)}\r\n                deleteFlow={(flowObj: any) => this.props.deleteFlow(flowObj)}\r\n                creatingFlow={this.props.data.creatingFlow}\r\n                projects={this.props.data.projects}\r\n                projectId={this.state.projectId}\r\n              />\r\n          </div>\r\n          <div hidden={this.state.tabValue !== 1}>\r\n              <DatasetsComponent\r\n                  datasets={datasets}\r\n                  subpageClick={(link: string) => this.handleSubpageClick(link)}\r\n                  createDataset={(projectId: string, datasetName: string, file: File) => this.props.createDataset(projectId, datasetName, file)}\r\n                  editDataset={(projectId: string, datasetId: string, datasetName: string, file: File) => this.props.editDataset(projectId, datasetId, datasetName, file)}\r\n                  deleteDataset={(datasetId: string) => this.props.deleteDataset(datasetId)}\r\n                  uploadProgress={this.props.uploadProgress}\r\n                  uploadStatus={this.props.data.uploadStatus}\r\n                  projects={this.props.data.projects}\r\n                  projectId={this.state.projectId}\r\n                />\r\n          </div>\r\n          <div hidden={this.state.tabValue !== 2}>\r\n              <DashboardsComponent\r\n                dashboards={dashboards}\r\n                datasets={datasets}\r\n                subpageClick={(link: string) => this.handleSubpageClick(link)}\r\n                createDashboard={(projectId: string, datasetId: any, name: string, file: File) => this.props.createDashboard(projectId, datasetId, name, file)}\r\n                editDashboard={(projectId: string, datasetId: any, name: string, dashboardId: string, file: File) => this.props.editDashboard(projectId, datasetId, name, dashboardId, file)}\r\n                deleteDashboard={(dashboardId: string) => this.props.deleteDashboard(dashboardId)}\r\n                uploadProgress={this.props.uploadProgress}\r\n                dashUploadStatus={this.props.data.dashUploadStatus}\r\n                projects={this.props.data.projects}\r\n                projectId={this.state.projectId}\r\n              />\r\n          </div>\r\n        </Container>\r\n\r\n        <DeleteProjectDialog\r\n          projectId={this.state.projectId}\r\n          projectName={projectData ? projectData.name : ''}\r\n          handleDialogClose={() => this.handleDeleteDialogCancel()}\r\n          handleDeleteDialogSubmit={() => this.handleDeleteDialogSubmit()}\r\n          handleDeleteDialogCancel={() => this.handleDeleteDialogCancel()}\r\n          open={this.state.projectDeleteDialogState}\r\n          deleteSubmitLoading={this.state.deletingLoading}\r\n        />\r\n        <ShareProjectDialog\r\n          handleDialogClose={() => this.handleShareDialogCancel()}\r\n          handleShareDialogCancel={() => this.handleShareDialogCancel()}\r\n          open={this.state.projectShareDialogState}\r\n          projectId={this.state.projectId}\r\n          projectName={projectData ? projectData.name : ''}\r\n          projectShareDialogErrorState={this.state.projectShareDialogErrorState}\r\n          projectShareDialogErrorMsg={this.state.projectShareDialogErrorMsg}\r\n          onSubmit={(email: string) => this.handleShareDialogSubmit(email)}\r\n          shareSubmitLoading={this.state.sharingLoading}\r\n        />\r\n        <EditProjectDialog\r\n          handleDialogClose={() => this.handleEditProjectDialogClose()}\r\n          handleEditCancel={() => this.handleEditProjectDialogClose()}\r\n          onSubmit={(name: string) => this.handleEditProjectDialogSubmit(name)}\r\n          open={this.state.editProjectDialogState}\r\n          projectName={projectData ? projectData.name : ''}\r\n          projectID={this.state.projectId}\r\n          renameSubmitLoading={this.state.renamingLoading}\r\n        />\r\n        <DuplicateProjectDialog\r\n          projectName={projectData ? projectData.name : ''}\r\n          projectID={this.state.projectId}\r\n          open={this.state.duplicateDialogProjectState}\r\n          onSubmit={(projectId: string, newProjectName: string, targetUser: string) => this.handleDuplicateProjectDialogSubmit(projectId, newProjectName, targetUser)}\r\n          handleDialogClose={() => {\r\n            this.handleDuplicateProjectDialogClose();\r\n          }}\r\n        />\r\n        <SnackbarMsg\r\n          snackbarOpen={this.state.snackbarOpen}\r\n          snackbarType={this.state.snackbarType}\r\n          snackbarMsg={this.state.snackbarMessage}\r\n          onSnackbarClose={this.handleSnackbarClose}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  handleDuplicateProjectDialogSubmit = (projectId: string, newProjectName: string, targetUser: string) => {\r\n    var matchProjects_Arr = this.props.data.projects.filter(\r\n      (p: any) => p.name === newProjectName\r\n    );\r\n    if (Object.keys(matchProjects_Arr).length > 0) {\r\n      //console.log(\"COPY name\");\r\n      setTimeout(() => {\r\n        this.setState({\r\n          duplicateDialogProjectState: false,\r\n          snackbarMessage: (\r\n            <Fragment>\r\n              <div className=\"msg\">Project with same name already exists. Please choose different name</div>\r\n            </Fragment>\r\n          ),\r\n          snackbarType: 'error',\r\n          snackbarOpen: true\r\n        });\r\n      }, 1500);\r\n    } else {\r\n      this.props.duplicateProject(this.state.projectId, newProjectName, targetUser);\r\n      setTimeout(() => {\r\n        this.setState({\r\n          duplicateDialogProjectState: false,\r\n          snackbarMessage: (\r\n            <Fragment>\r\n              <div className=\"msg\">\r\n                You have succesfully cloned project\r\n              </div>\r\n            </Fragment>\r\n          ),\r\n          snackbarType: 'success',\r\n          snackbarOpen: true,\r\n        });\r\n      }, 1500);\r\n    }\r\n    this.handleDuplicateProjectDialogClose();\r\n  }\r\n  handleDuplicateProjectDialogClose() {\r\n    this.setState({ duplicateDialogProjectState: false });\r\n  }\r\n  handleEditProjectDialogClose() {\r\n    this.setState({\r\n      editProjectDialogState: false\r\n    });\r\n  }\r\n  handleEditProjectDialogSubmit(name: string) {\r\n    this.setState({ renamingLoading: true });\r\n    this.props.renameProject(this.state.projectId, name);\r\n    setTimeout(() => {\r\n      this.setState({\r\n        editProjectDialogState: false,\r\n        snackbarMessage: (\r\n          <Fragment>\r\n            <div className=\"msg\">You have succesfully renamed project</div>\r\n            <div className=\"val\">{name}</div>\r\n          </Fragment>\r\n        ),\r\n        snackbarType: 'success',\r\n        snackbarOpen: true,\r\n        renamingLoading: false\r\n      });\r\n    }, 1500);\r\n  }\r\n  handleShareDialogCancel() {\r\n    this.setState({\r\n      projectShareDialogState: false,\r\n      projectShareDialogErrorState: false,\r\n      projectShareDialogErrorMsg: ''\r\n    });\r\n  }\r\n  handleShareDialogSubmit(email: string) {\r\n    this.setState({ sharingLoading: true });\r\n    var projectData = this.props.data.projects.filter(\r\n      (p: any) => p.project_id === this.state.projectId\r\n    )[0];\r\n    try {\r\n      shareProject(this.state.projectId, email)\r\n        .then((res: any) => {\r\n          //console.log('try res.status: ' + res.status);\r\n          if (res.status === 200) {\r\n            //console.log('sharing success');\r\n            setTimeout(() => {\r\n              this.setState({\r\n                projectShareDialogState: false,\r\n                projectShareDialogErrorState: false,\r\n                projectShareDialogErrorMsg: '',\r\n                snackbarMessage: (\r\n                  <Fragment>\r\n                    {/* <span>Project shared successfully</span> */}\r\n                    <div className=\"msg\">\r\n                      You have succesfully shared project{' '}\r\n                      <span className=\"val\">{projectData ? projectData.name : ''}</span>\r\n                    </div>\r\n                    <div>\r\n                      with user <span className=\"val\">{email}</span>\r\n                    </div>\r\n                  </Fragment>\r\n                ),\r\n                snackbarType: 'success',\r\n                snackbarOpen: true,\r\n                sharingLoading: false\r\n              });\r\n            }, 1500);\r\n          } else {\r\n            this.setState({\r\n              projectShareDialogErrorState: true,\r\n              projectShareDialogErrorMsg:\r\n                'Sharing failed! Check user email and try again.',\r\n              sharingLoading: false\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            projectShareDialogErrorState: true,\r\n            projectShareDialogErrorMsg:\r\n              'Sharing failed! Check user email and try again.',\r\n            sharingLoading: false\r\n          });\r\n        });\r\n    } catch (e) {\r\n      this.setState({\r\n        projectShareDialogState: false,\r\n        projectShareDialogErrorState: false,\r\n        projectShareDialogErrorMsg: '',\r\n        snackbarMessage: (\r\n          <Fragment>\r\n            <div className=\"msg\">\r\n              Sharing failed. Something went wrong. Please try again\r\n            </div>\r\n          </Fragment>\r\n        ),\r\n        snackbarType: 'error',\r\n        snackbarOpen: true,\r\n        sharingLoading: false\r\n      });\r\n    }\r\n  }\r\n  handleCloseShareSuccesSnackbar = () => {\r\n    this.setState({ snackbarShareProSuccessState: false });\r\n  };\r\n  handleDeleteDialogSubmit() {\r\n    this.setState({ deletingLoading: true });\r\n    var projectData = this.props.data.projects.filter(\r\n      (p: any) => p.project_id === this.state.projectId\r\n    )[0];\r\n    this.setState({\r\n      snackbarMessage: (\r\n        <Fragment>\r\n          <div className=\"msg\">Deleting project ...</div>\r\n          <div className=\"val\">{projectData ? projectData.name : ''}</div>\r\n        </Fragment>\r\n      ),\r\n      snackbarType: 'processing',\r\n      snackbarOpen: true\r\n    });\r\n    setTimeout(() => {\r\n      this.props.deleteProject(this.state.projectId);\r\n      this.setState({\r\n        projectDeleteDialogState: false,\r\n        deletingLoading: false\r\n      });\r\n    }, 2000);\r\n  }\r\n  handleDeleteDialogCancel() {\r\n    this.setState({\r\n      projectDeleteDialogState: false\r\n    });\r\n  }\r\n  onDelete(flowObj: any) {\r\n    this.props.deleteFlow(flowObj);\r\n    this.setState({\r\n      deleteDialogState: false,\r\n      deletePipeline: '',\r\n      snackbarMessage: (\r\n        <Fragment>\r\n          <div className=\"msg\">You have succesfully deleted pipeline</div>\r\n          <div className=\"val\">{this.state.deletePipelineName}</div>\r\n        </Fragment>\r\n      ),\r\n      snackbarType: 'success',\r\n      snackbarOpen: true\r\n    });\r\n  }\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n}\r\n\r\nexport default ProjectComponent;\r\n","import { State } from '../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport ProjectComponent from './project-component';\r\nimport {\r\n  addFlowAction,\r\n  deleteFlowAction,\r\n  getFlowsActionStart,\r\n  logoutAction,\r\n  renameProjectActionStart,\r\n  deleteProjectActionStart,\r\n  getDatasetActionStart,\r\n  //shareProjectActionStart,\r\n  createDatasetActionStart,\r\n  deleteDatasetActionStart,\r\n  editDatasetActionStart,\r\n  getDashboardActionStart,\r\n  createDashboardForUploadActionStart,\r\n  loginMetabaseActionStart,\r\n  editDashbarodActionStart,\r\n  uploadDashboardActionStart,\r\n  handleProjectReturn,\r\n  handleCleanSession,\r\n  deleteDashboardActionStart,\r\n  handleFillSession,\r\n  duplicateProjectActionStart\r\n} from '../../actions';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  addFlow: (flowObj: any) => dispatch(addFlowAction(flowObj)),\r\n  deleteFlow: (flowObj: any) => dispatch(deleteFlowAction(flowObj)),\r\n  getFlows: (projectId: string) => dispatch(getFlowsActionStart(projectId)),\r\n  logout: () => dispatch(logoutAction()),\r\n  renameProject: (projectId: string, newName: string) =>\r\n    dispatch(renameProjectActionStart(projectId, newName)),\r\n  deleteProject: (id: string) => dispatch(deleteProjectActionStart(id)),\r\n  getDatasets: (projectId: string) =>\r\n    dispatch(getDatasetActionStart(projectId)),\r\n  getDashboards: (projectId:string) => \r\n    dispatch(getDashboardActionStart(projectId)),\r\n  createDataset: (projectId: string, datasetName: string, file: File) =>\r\n    dispatch(createDatasetActionStart(projectId, datasetName, file)),\r\n  createDashboard: (projectId: string, datasetId: any, name:string, file: File) =>\r\n    dispatch(createDashboardForUploadActionStart(projectId, datasetId, name, file)),\r\n  editDataset: (\r\n    projectId: string,\r\n    datasetId: string,\r\n    datasetName: string,\r\n    file: File\r\n  ) =>\r\n    dispatch(editDatasetActionStart(projectId, datasetId, datasetName, file)),\r\n  editDashboard:(\r\n    projectId:string,\r\n    datasetId:any,\r\n    name:string,\r\n    dashboardId:string,\r\n    file:File\r\n  ) => dispatch(editDashbarodActionStart(projectId,datasetId,name,dashboardId,file)),\r\n  uploadDashboard:(\r\n    dashboardId:string,\r\n    file:File\r\n  ) => dispatch(uploadDashboardActionStart(file,dashboardId)),\r\n  deleteDataset: (datasetId: string) =>\r\n    dispatch(deleteDatasetActionStart(datasetId)),\r\n  deleteDashboard:(dashboardId:string) =>\r\n    dispatch(deleteDashboardActionStart(dashboardId)),\r\n  enterSession: (projectId: string) => {\r\n      dispatch(loginMetabaseActionStart(projectId))\r\n  },\r\n  fireReturnToProject: (sourcePage: string) => {\r\n    dispatch(handleProjectReturn(sourcePage))\r\n  },\r\n  cleanSession: () => {\r\n    dispatch(handleCleanSession())\r\n  },\r\n  fillSessions: (proSess: string, projectId: string) => {\r\n    dispatch(handleFillSession(proSess, projectId))\r\n  },\r\n  duplicateProject: (projectId: string, name: string, targetUser: string) => {\r\n    dispatch(duplicateProjectActionStart(projectId, name, targetUser));\r\n  },\r\n});\r\nconst mapStateToProps = (state: State) => ({\r\n  data: state.flowReducerState,\r\n  email: state.userReducerState.email,\r\n  metabaseLoginId: state.flowReducerState.metabaseLoginId,\r\n  activePageType: state.flowReducerState.activePageType,\r\n  uploadProgress: state.flowReducerState.uploadProgress,\r\n});\r\n\r\nexport const ProjectContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectComponent);\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  FormControl,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { MuiPickersUtilsProvider, DatePicker, TimePicker } from 'material-ui-pickers';\r\nimport AccountTreeOutlinedIcon from '@material-ui/icons/AccountTreeOutlined';\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../IkiFormElements/IkiButton';\r\nimport IkiInput from '../IkiFormElements/IkiInput';\r\nimport IkiAutocomplete from '../IkiFormElements/IkiAutocomplete';\r\nimport moment from 'moment';\r\n\r\nexport function NewScheduleDialog(props: any) {\r\n  const {\r\n    handleDialogClose,\r\n    open,\r\n    newScheduleDialogErrorMsg,\r\n    onSubmit,\r\n    newScheduleSubmitLoading,\r\n    appData\r\n  } = props;\r\n\r\n  const getSteps = () => {\r\n    //console.log('appData...', appData);\r\n    return [\r\n      'What would you like to Schedule?', \r\n      'Which subject would you like to run', \r\n      'Set time frame of execution',\r\n      'Enter Schedule Name and Description'\r\n    ];\r\n  }\r\n\r\n  const setSubjectItems = () => {\r\n    var subjectsItems: any = [];\r\n    Object.keys(appData).forEach((projectKey: any) => {\r\n      var projectPipelines: any = [];\r\n      if(appData[projectKey].pipelines) {\r\n        projectPipelines = appData[projectKey].pipelines;\r\n        var projectName: string = appData[projectKey].project.name;\r\n        Object.keys(projectPipelines).forEach((pipelineKey: any) => {\r\n          var pipelineId: string = projectPipelines[pipelineKey].pipeline_id;\r\n          var pipelineName: string = projectPipelines[pipelineKey].name;\r\n          var scheduleItem: any = {\r\n            projectName: projectName,\r\n            pipelineId: pipelineId,\r\n            pipelineName: pipelineName\r\n          }\r\n          subjectsItems.push(scheduleItem);\r\n        });\r\n        //console.log('project...', appData[projectKey]);\r\n      }\r\n    });\r\n    //console.log('subjectsItems...', subjectsItems);\r\n    return subjectsItems;\r\n  }\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [scheduleName, setScheduleName] = React.useState('');\r\n  const [scheduleNameErrorMsg, setScheduleNameErrorMsg] = React.useState('');\r\n  const [scheduleDescription, setScheduleDescription] = React.useState('');\r\n  const [scheduleDescrErrorMsg, setScheduleDescrErrorMsg] = React.useState('');\r\n  const [subjectsArr, setSubjectsArr] = React.useState([]);\r\n  const [subjectItem, setSubjectItem] = React.useState('');\r\n  const [subjectItemError, setSubjectItemError] = React.useState('');\r\n  const [scheduleTimeType, setScheduleTimeType] = React.useState('once');\r\n  const [scheduleTime, setScheduleTime] = React.useState({\r\n    type: 'once',\r\n    enabled: true,\r\n    startDate: moment(),\r\n    startTime: moment(),\r\n    endDate: moment(),\r\n    recur: false,\r\n    days: 0,\r\n    weeks: 0,\r\n    weekDays: [],\r\n    cron: ''\r\n  });\r\n  const [recurDaily, setRecurDaily] = React.useState(1);\r\n  const [recurDailyErrorMsg, setRecurDailyErrorMsg] = React.useState('');\r\n  const [recurWeekly, setRecurWeekly] = React.useState(1);\r\n  const [recurWeeklyErrorMsg, setRecurWeeklyErrorMsg] = React.useState('');\r\n  const steps = getSteps();\r\n  const subjectItems = setSubjectItems();\r\n  //console.log('subjectItems...', subjectItems);\r\n  const weekDaysObject = [\r\n    {\r\n      day: 'Monday',\r\n      value: false,\r\n      shortForm: 'mon'\r\n    },\r\n    {\r\n      day: 'Tuesday',\r\n      value: false,\r\n      shortForm: 'tue'\r\n    },\r\n    {\r\n      day: 'Wednesday',\r\n      value: false,\r\n      shortForm: 'wed'\r\n    },\r\n    {\r\n      day: 'Thursday',\r\n      value: false,\r\n      shortForm: 'thu'\r\n    },\r\n    {\r\n      day: 'Friday',\r\n      value: false,\r\n      shortForm: 'fri'\r\n    },\r\n    {\r\n      day: 'Saturday',\r\n      value: false,\r\n      shortForm: 'sat'\r\n    },\r\n    {\r\n      day: 'Sunday',\r\n      value: false,\r\n      shortForm: 'sun'\r\n    }\r\n  ];\r\n  const [weekDays, setWeekDays] = React.useState(weekDaysObject);\r\n  const [selectedDaysError, setSelectedDaysError] = React.useState('');\r\n\r\n  const getStepContent = (step: number) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div className=\"subject-cardbox-wrap\">\r\n            <div className=\"subject-cardbox active\">\r\n              <div className=\"subject-cardbox-icon\">\r\n                <AccountTreeOutlinedIcon />\r\n              </div>\r\n              <div className=\"subject-cardbox-title\">Flow</div>\r\n            </div>\r\n            <div className=\"subject-cardbox disabled\">\r\n              <div className=\"subject-cardbox-icon\">\r\n                <PowerIcon />\r\n              </div>\r\n              <div className=\"subject-cardbox-title\">Connector</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <IkiAutocomplete \r\n            _label='Subject'\r\n            _placeholder='Select Subject...'\r\n            _value={subjectItem}\r\n            _isMultiple={false}\r\n            _selectOptions={subjectItems}\r\n            _fullWidth={true}\r\n            _groupByValue='projectName'\r\n            _keyValue='pipelineId'\r\n            _nameValue='pipelineName'\r\n            _onChange={(event: any, option: any) => handleColumnNameSelect(option)}\r\n            _error={subjectItemError}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <>\r\n            <FormControl \r\n              className=\"radio-btn-holder with-label horizontal\" \r\n              component=\"fieldset\" \r\n              margin=\"normal\"\r\n            >\r\n              <RadioGroup \r\n                aria-label=\"schedule-time\" \r\n                name=\"schedule-time\"\r\n                //defaultValue='once'\r\n                value={scheduleTimeType} \r\n                onChange={handleScheduleTimeType}\r\n              >\r\n                <FormControlLabel \r\n                  value='once'\r\n                  key='once'\r\n                  control={\r\n                    <Radio \r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      //onClick={(e: any) => setScheduleTimeType(e.target.value)}\r\n                      //checked={scheduleTimeType === '' || scheduleTimeType === 'once'}\r\n                    />\r\n                  } \r\n                  label='Once' \r\n                />\r\n                <FormControlLabel \r\n                  value='daily'\r\n                  key='daily'\r\n                  control={\r\n                    <Radio \r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      //onClick={(e: any) => setScheduleTimeType(e.target.value)}\r\n                    />\r\n                  } \r\n                  label='Daily' \r\n                />\r\n                <FormControlLabel \r\n                  value='weekly'\r\n                  key='weekly'\r\n                  control={\r\n                    <Radio \r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      //onClick={(e: any) => setScheduleTimeType(e.target.value)}\r\n                    />\r\n                  } \r\n                  label='Weekly' \r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <div className=\"time-controls-holder\">\r\n              {scheduleTimeType === 'once' && (\r\n                <div className=\"time-controls once\">\r\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                      <FormControl>\r\n                        <DatePicker\r\n                          value={scheduleTime.startDate}\r\n                          onChange={(date: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: date,\r\n                              startTime: scheduleTime.startTime,\r\n                              endDate: date,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"Date\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                      <FormControl>\r\n                        <TimePicker\r\n                          value={scheduleTime.startTime}\r\n                          onChange={(time: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: scheduleTime.startDate,\r\n                              startTime: time,\r\n                              endDate: scheduleTime.endDate,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"Time\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                    </MuiPickersUtilsProvider>\r\n                  </div>\r\n              )}\r\n              {scheduleTimeType === 'daily' && (\r\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <div className=\"time-controls once\">\r\n                      <FormControl>\r\n                        <DatePicker\r\n                          value={scheduleTime.startDate}\r\n                          onChange={(date: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: date,\r\n                              startTime: scheduleTime.startTime,\r\n                              endDate: scheduleTime.endDate,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"Start Date\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                      <FormControl>\r\n                        <DatePicker\r\n                          value={scheduleTime.endDate}\r\n                          onChange={(date: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: scheduleTime.startDate,\r\n                              startTime: scheduleTime.startTime,\r\n                              endDate: date,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"End Date\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                    </div>\r\n                  <div className=\"time-controls once\">\r\n                      <FormControl className=\"time-control\">\r\n                        <TimePicker\r\n                          value={scheduleTime.startTime}\r\n                          onChange={(time: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: scheduleTime.startDate,\r\n                              startTime: time,\r\n                              endDate: scheduleTime.endDate,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"Time\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                      <IkiInput \r\n                        _label=\"Recur every X days\"\r\n                        _placeholder=\"\"\r\n                        _type='number'\r\n                        _autoComplete=\"new-password\"\r\n                        _value={recurDaily > 0 ? recurDaily : 1}\r\n                        _onChange={handleRecurDailyChange}\r\n                        _autoFocus={false}\r\n                        _fullWidth={true}\r\n                        _error={recurDailyErrorMsg}\r\n                      />\r\n                    </div>\r\n                  </MuiPickersUtilsProvider>\r\n              )}\r\n              {scheduleTimeType === 'weekly' && (\r\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <div className=\"time-controls once\">\r\n                      <FormControl>\r\n                        <DatePicker\r\n                          value={scheduleTime.startDate}\r\n                          onChange={(date: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: date,\r\n                              startTime: scheduleTime.startTime,\r\n                              endDate: scheduleTime.endDate,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"Start Date\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                      <FormControl>\r\n                        <DatePicker\r\n                          value={scheduleTime.endDate}\r\n                          onChange={(date: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: scheduleTime.startDate,\r\n                              startTime: scheduleTime.startTime,\r\n                              endDate: date,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"End Date\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                    </div>\r\n                  <div className=\"time-controls once\">\r\n                      <FormControl className=\"time-control\">\r\n                        <TimePicker\r\n                          value={scheduleTime.startTime}\r\n                          onChange={(time: any) => {\r\n                            setScheduleTime({\r\n                              type: scheduleTime.type,\r\n                              enabled: scheduleTime.enabled,\r\n                              startDate: scheduleTime.startDate,\r\n                              startTime: time,\r\n                              endDate: scheduleTime.endDate,\r\n                              recur: scheduleTime.recur,\r\n                              days: scheduleTime.days,\r\n                              weeks: scheduleTime.weeks,\r\n                              weekDays: scheduleTime.weekDays,\r\n                              cron: scheduleTime.cron\r\n                            })\r\n                          }}\r\n                          disabled={false}\r\n                          variant=\"outlined\"\r\n                          label=\"Time\"\r\n                          InputLabelProps={{\r\n                            shrink: true\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                      <IkiInput \r\n                        _label=\"Recur every X weeks\"\r\n                        _placeholder=\"\"\r\n                        _type='number'\r\n                        _autoComplete=\"new-password\"\r\n                        _value={recurWeekly > 0 ? recurWeekly : 1}\r\n                        _onChange={handleRecurWeeklyChange}\r\n                        _autoFocus={false}\r\n                        _fullWidth={true}\r\n                        _error={recurWeeklyErrorMsg}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <FormControl fullWidth>\r\n                        {weekDays.map((day: any) => {\r\n                          return (\r\n                            <FormControlLabel\r\n                              className=\"checkbox-label\"\r\n                              control={\r\n                                <Checkbox\r\n                                  //disabled={!this.state.settings.week.enabled}\r\n                                  color=\"primary\"\r\n                                  //checked={day}\r\n                                  onChange={handleChangeDaySelect}\r\n                                  value={day.shortForm}\r\n                                />\r\n                              }\r\n                              label={day.day}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </FormControl>\r\n                    </div>\r\n                  </MuiPickersUtilsProvider>\r\n              )}\r\n            </div>\r\n          </>\r\n        );\r\n      case 3:\r\n        return (\r\n          <>\r\n            <IkiInput \r\n              _label=\"Name\"\r\n              _placeholder=\"Enter Schedule Name...\"\r\n              _type='text'\r\n              _autoComplete=\"new-password\"\r\n              _value={scheduleName}\r\n              _onChange={handleScheduleNameChange}\r\n              _characterCounter={40}\r\n              _autoFocus={true}\r\n              _fullWidth={true}\r\n              _error={scheduleNameErrorMsg}\r\n            />\r\n            {/* <IkiInput \r\n              _label=\"Description\"\r\n              _placeholder=\"Enter Schedule description...\"\r\n              _type='text'\r\n              _autoComplete=\"new-password\"\r\n              _value={scheduleDescription}\r\n              _onChange={handleScheduleDescriptionChange}\r\n              _characterCounter={200}\r\n              _fullWidth={true}\r\n              _multiline={true}\r\n              _rows={4}\r\n              _error={scheduleDescrErrorMsg}\r\n            /> */}\r\n          </>\r\n        )\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const handleScheduleNameChange = (e: any) => {\r\n    setScheduleName(e.target.value);\r\n  };\r\n\r\n  const handleRecurDailyChange = (e: any) => {\r\n    var days = e.target.value;\r\n    setRecurDaily(e.target.value);\r\n    setScheduleTime({\r\n      type: scheduleTime.type,\r\n      enabled: scheduleTime.enabled,\r\n      startDate: scheduleTime.startDate,\r\n      startTime: scheduleTime.startTime,\r\n      endDate: scheduleTime.endDate,\r\n      recur: scheduleTime.recur,\r\n      days: days,\r\n      weeks: scheduleTime.weeks,\r\n      weekDays: scheduleTime.weekDays,\r\n      cron: scheduleTime.cron\r\n    })\r\n  };\r\n\r\n  const handleRecurWeeklyChange = (e: any) => {\r\n    var weeks = e.target.value;\r\n    setRecurWeekly(e.target.value);\r\n    setScheduleTime({\r\n      type: scheduleTime.type,\r\n      enabled: scheduleTime.enabled,\r\n      startDate: scheduleTime.startDate,\r\n      startTime: scheduleTime.startTime,\r\n      endDate: scheduleTime.endDate,\r\n      recur: scheduleTime.recur,\r\n      days: scheduleTime.days,\r\n      weeks: weeks,\r\n      weekDays: scheduleTime.weekDays,\r\n      cron: scheduleTime.cron\r\n    })\r\n  };\r\n\r\n  const handleScheduleDescriptionChange = (e: any) => {\r\n    setScheduleDescription(e.target.value);\r\n  };\r\n\r\n  const handleColumnNameSelect = (selectedVal: any) =>{\r\n    if(selectedVal !== null && selectedVal !== undefined && selectedVal !== \"\"){\r\n      setSubjectItem(selectedVal);  \r\n    }else{\r\n      setSubjectItem(''); \r\n    }\r\n  }\r\n\r\n  const handleScheduleTimeType = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    var scheduleType = (event.target as HTMLInputElement).value;\r\n    setScheduleTimeType(scheduleType);\r\n    setScheduleTime({\r\n      type: scheduleType,\r\n      enabled: true,\r\n      startDate: moment(),\r\n      startTime: moment(),\r\n      endDate: moment(),\r\n      recur: false,\r\n      days: 0,\r\n      weeks: 0,\r\n      weekDays: [],\r\n      cron: ''\r\n    })\r\n  };\r\n\r\n  const handleChangeDaySelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    var checkedDay = (event.target as HTMLInputElement).value;\r\n    //console.log('checkedDay: ' + checkedDay);\r\n    //setWeekDays()\r\n    weekDays.forEach((dayObject: any) => {\r\n      if(dayObject.shortForm === checkedDay) {\r\n        if(!dayObject.value) {\r\n          dayObject.value = true;\r\n        } else {\r\n          dayObject.value = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    let selectedDaysArray: any = []; \r\n    selectedDaysArray = weekDays.filter((day: any) => day.value).map((day: any) => day.shortForm);\r\n\r\n    //console.log('selectedDaysArray...', selectedDaysArray);\r\n\r\n    setScheduleTime({\r\n          type: scheduleTime.type,\r\n          enabled: scheduleTime.enabled,\r\n          startDate: scheduleTime.startDate,\r\n          startTime: scheduleTime.startTime,\r\n          endDate: scheduleTime.endDate,\r\n          recur: scheduleTime.recur,\r\n          days: scheduleTime.days,\r\n          weeks: scheduleTime.weeks,\r\n          weekDays: selectedDaysArray,\r\n          cron: scheduleTime.cron\r\n    });\r\n\r\n    //console.log('scheduleTime...', scheduleTime);\r\n\r\n    //console.log('dayObject after handleChangeDaySelect...', weekDays);\r\n  }\r\n\r\n  const handleScheduleDialogSubmit = (e: any) => {\r\n    let validationCounter = 0;\r\n\r\n    if (scheduleName === '') {\r\n      setScheduleNameErrorMsg('Required');\r\n      validationCounter++;\r\n    }\r\n\r\n    if (subjectItem === '') {\r\n      setSubjectItemError('Required');\r\n      validationCounter++;\r\n    }\r\n\r\n    if (validationCounter === 0) {\r\n      onSubmit(subjectItem, scheduleTime, scheduleName);\r\n    }\r\n  };\r\n\r\n  const handleOnCloseScheduleDialog = () => {\r\n    setScheduleName('');\r\n    setScheduleNameErrorMsg('');\r\n    setSubjectItem('');\r\n    setSubjectItemError('');\r\n    handleDialogClose();\r\n  }\r\n\r\n  const handleOnEnterScheduleDialog = () => {\r\n\r\n  }\r\n\r\n  return (\r\n      <IkiDialog\r\n            _open={open}\r\n            _onEnter={() => handleOnEnterScheduleDialog()}\r\n            _onClose={() => handleOnCloseScheduleDialog()}\r\n            _onExit={() => handleOnCloseScheduleDialog()}\r\n            _type='share'\r\n            _icon={false}\r\n            _title='New Schedule'\r\n            _subtitle={'Step ' + (activeStep + 1 ) + ' / 4'}\r\n            _size='xs'\r\n            _align='left'\r\n            _content={\r\n              <>\r\n                <Stepper activeStep={activeStep} orientation=\"vertical\" className=\"newSchedule\">\r\n                  {steps.map((label, index) => (\r\n                    <Step key={label}>\r\n                      <StepLabel>{label}</StepLabel>\r\n                      <StepContent>\r\n                        <div>\r\n                          {getStepContent(index)}\r\n                        </div>\r\n                        <Box mt={1}>\r\n                            <IkiButton\r\n                              _disabled={activeStep === 0}\r\n                              _variant='text'\r\n                              _color='default'\r\n                              _label=\"Back\"\r\n                              _type='button'\r\n                              _fullWidth={false}\r\n                              _loading={false}\r\n                              _onClick={() => handleBack()}\r\n                            />\r\n                            {(index+1) !== steps.length && (\r\n                              <IkiButton\r\n                                _variant='text'\r\n                                _color='primary'\r\n                                _label=\"Next\"\r\n                                _type='button'\r\n                                _fullWidth={false}\r\n                                _loading={false}\r\n                                _onClick={() => handleNext()}\r\n                              />\r\n                            )}\r\n                        </Box>\r\n                      </StepContent>\r\n                    </Step>\r\n                  ))}\r\n                </Stepper>\r\n                {newScheduleDialogErrorMsg !== '' && (\r\n                  <div className=\"section\">\r\n                    <div className=\"submit-error has-txt-centered\">\r\n                      {newScheduleDialogErrorMsg}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Cancel\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={() => handleOnCloseScheduleDialog()}\r\n                />\r\n                <IkiButton\r\n                  _variant='contained'\r\n                  _color='primary'\r\n                  _label=\"Submit\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={newScheduleSubmitLoading}\r\n                  _disabled={newScheduleSubmitLoading}\r\n                  _onClick={handleScheduleDialogSubmit}\r\n                />\r\n              </Fragment>\r\n            }\r\n        />\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IkiDialog from '../IkiDialog';\r\nimport IkiButton from '../IkiFormElements/IkiButton';\r\nimport moment from 'moment';\r\n\r\nexport function PreviewScheduleDialog(props: any) {\r\n  const {\r\n    handleDialogClose,\r\n    open,\r\n    data\r\n  } = props;\r\n\r\n  console.log('PreviewScheduleDialog...', props);\r\n\r\n  const [scheduleTime, setScheduleTime] = React.useState('');\r\n  const [eventStatusStyle, setEventStatusStyle] = React.useState('');\r\n\r\n  const handleOnCloseScheduleDialog = () => {\r\n    handleDialogClose();\r\n  }\r\n\r\n  const handleOnEnterScheduleDialog = () => {\r\n    //var scheduleTime = moment(props.data.start).format(\"DD-MM-YYYY HH:mm\");\r\n    var scheduleTime = moment(props.data.start).format(\"MM/DD/YYYY h:mm A\");\r\n    setScheduleTime(scheduleTime);\r\n    var eventStatusStyle: string = '';\r\n    if(props.data.status === 'SUCCESS') {\r\n        eventStatusStyle = 'success';\r\n    } else if(props.data.status === 'FAILED') {\r\n        eventStatusStyle = 'error';\r\n    } else{\r\n        eventStatusStyle = 'pending';\r\n    }\r\n    setEventStatusStyle(eventStatusStyle);\r\n  }\r\n\r\n  return (\r\n      <IkiDialog\r\n            _open={open}\r\n            _onEnter={() => handleOnEnterScheduleDialog()}\r\n            _onClose={() => handleOnCloseScheduleDialog()}\r\n            _type='share'\r\n            _icon={false}\r\n            _title='Event'\r\n            _subtitle={props.data.category !== '' ? props.data.category : ''}\r\n            _size='xs'\r\n            _align='left'\r\n            _content={\r\n              <>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"section\">\r\n                            <div className=\"txt-dialog-faded1\">Type: </div>\r\n                            <div className=\"txt-dialog-impact1\">Flow</div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"section\">\r\n                            <div className=\"txt-dialog-faded1\">Status: </div>\r\n                            <div className={\"txt-dialog-impact1 \" + eventStatusStyle}>{props.data.status !== '' ? (props.data.status).toLowerCase() : '-'}</div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"section\">\r\n                            <div className=\"txt-dialog-faded1\">Item: </div>\r\n                            <div className=\"txt-dialog-impact1\">{props.data.pipeline.name}</div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"section\">\r\n                            <div className=\"txt-dialog-faded1\">Project: </div>\r\n                            <div className=\"txt-dialog-impact1\">{props.data.project.name}</div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"section\">\r\n                            <div className=\"txt-dialog-faded1\">Time: </div>\r\n                            <div className=\"txt-dialog-impact1\">{scheduleTime}</div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <div className=\"section\">\r\n                            <div className=\"txt-dialog-faded1\">Schedule name: </div>\r\n                            <div className=\"txt-dialog-impact1\">{props.data.schedule.name}</div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                {props.data.status === 'FAILED' && (\r\n                    <Fragment>\r\n                        <Box mt={2}></Box>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <ExpansionPanel className=\"expand-panel\">\r\n                                    <ExpansionPanelSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"log-content\"\r\n                                        id=\"log-header\"\r\n                                    >\r\n                                        <div>Error Log Message</div>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <div className=\"error error-log-string\">\r\n                                            {props.data.message}\r\n                                        </div>\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Fragment>\r\n                )}\r\n              </>\r\n            }\r\n            _actions={\r\n              <Fragment>\r\n                <IkiButton\r\n                  _variant='text'\r\n                  _color='default'\r\n                  _label=\"Close\"\r\n                  _type='button'\r\n                  _fullWidth={false}\r\n                  _loading={false}\r\n                  _onClick={() => handleOnCloseScheduleDialog()}\r\n                />\r\n              </Fragment>\r\n            }\r\n        />\r\n  );\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    Box,\r\n    //Button,\r\n    Grid,\r\n    Container,\r\n    //Card,\r\n    //CardContent,\r\n    //TablePagination,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    RadioGroup,\r\n    Radio\r\n  } from '@material-ui/core';\r\n  //import TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\r\n//import { sizing } from '@material-ui/system';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\n//import SearchIcon from '@material-ui/icons/Search';\r\n//import ViewListIcon from '@material-ui/icons/ViewList';\r\n//import CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport IkiPageHeader from '../../components/IkiLayout/IkiPageHeader'\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\n//import IkiButtonGroup from '../../components/IkiFormElements/IkiButtonGroup';\r\n//import IkiInput from '../../components/IkiFormElements/IkiInput';\r\n//import IkiGrid from '../../components/IkiLayout/IkiGrid';\r\n//import IkiDialog from '../../components/IkiDialog';\r\n//import IkiTable from '../../components/IkiLayout/IkiTable';\r\nimport IkiLoader from '../../components/IkiLoader';\r\nimport { NewScheduleDialog } from '../../components/dialogs/new-schedule';\r\nimport { PreviewScheduleDialog } from '../../components/dialogs/preview-schedule';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"../../themes/rbc-calendar.scss\";\r\nimport moment from 'moment';\r\nimport { parseCronString, convertToCronString } from '../../util/cron';\r\nimport SnackbarMsg from '../../components/SnackbarMsg';\r\nimport { getCurrentDate } from '../../util';\r\nimport './Schedule.module.scss';\r\nimport {\r\n  getProjects,\r\n  getFlows,\r\n  getPipeline,\r\n  getProject,\r\n  getPastScheduleForUser,\r\n  getPastScheduleForProject,\r\n  getPastScheduleForPipeline,\r\n  getUpcomingScheduleForUser,\r\n  getUpcomingScheduleForProject,\r\n  getUpcomingScheduleForPipeline,\r\n  exitSession as exitSessionManually\r\n} from '../../services/app-data.service';\r\nconst localizer = momentLocalizer(moment)\r\n\r\ntype schedules = {\r\n  title: string,\r\n  start: Date,\r\n  end: Date,\r\n  desc: string,\r\n  status: string,\r\n  message: any,\r\n  project: any;\r\n  pipeline: any;\r\n  schedule: any,\r\n  category: string\r\n}\r\n\r\ntype SchedulesProps = {\r\n  data: any;\r\n  history: any;\r\n  match: any;\r\n  email: string;\r\n  metabaseLoginId: string;\r\n  activePageType: string;\r\n  uploadProgress: any;\r\n  fireReturnToProject: (sourcePage: string) => void;\r\n  cleanSession: () => void;\r\n  fillSessions: (proSess: string, proId: string) => void;\r\n  updateFlowData: (flowData: object) => void;\r\n}\r\ntype SchedulesState = {\r\n    schedules: any;\r\n    pastSchedules: any;\r\n    upcomingSchedules: any;\r\n    loading: boolean;\r\n    loadingTxt: string;\r\n    renderAsList: boolean;\r\n    tableSortAsc: boolean;\r\n    tableSortProperty: string;\r\n    rowsPerPage: number;\r\n    page: number;\r\n    searchTerm: string;\r\n    scheduleCategory: string;\r\n    newScheduleDialogOpen: boolean;\r\n    newScheduleDialogError: string;\r\n    addingNewScheduleLoading: boolean;\r\n    appData: any;\r\n    previewScheduleDialogOpen: boolean;\r\n    previewScheduleData: any;\r\n    breadCrumbLink: string;\r\n    breadCrumbTxt: string;\r\n    projectId: string;\r\n    projectName: string;\r\n    subjectName: string;\r\n    subjectId: string;\r\n    snackbarOpen: boolean;\r\n    snackbarMessage: any;\r\n    snackbarType: string;\r\n}\r\n\r\nclass SchedulesComponent extends Component<SchedulesProps, SchedulesState> {\r\n    subpageClicked: boolean = false;\r\n    state: SchedulesState = {\r\n        schedules: {},\r\n        upcomingSchedules: {},\r\n        pastSchedules: {},\r\n        loading: true,\r\n        loadingTxt: 'Loading Schedules...',\r\n        renderAsList: true,\r\n        tableSortAsc: true,\r\n        tableSortProperty: '',\r\n        rowsPerPage: 16,\r\n        page: 0,\r\n        searchTerm: '',\r\n        scheduleCategory: 'upcoming',\r\n        newScheduleDialogOpen: false,\r\n        newScheduleDialogError: '',\r\n        addingNewScheduleLoading: false,\r\n        appData: {},\r\n        previewScheduleDialogOpen: false,\r\n        previewScheduleData: {},\r\n        breadCrumbLink: '',\r\n        breadCrumbTxt: '',\r\n        projectId: '',\r\n        projectName: '',\r\n        subjectName: '',\r\n        subjectId: '',\r\n        snackbarOpen: false,\r\n        snackbarMessage: null,\r\n        snackbarType: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log('SchedulesComponent...', this.props);\r\n        this.props.fireReturnToProject(\"schedule\");\r\n\r\n        let appData: any = [];\r\n        let projectId: string = '';\r\n        let projectName: string = '';\r\n        let subjectName: string = '';\r\n        let flowId: string = '';\r\n        let flowName: string = '';\r\n        let page_type: string = \"\";\r\n        let schedulePath = this.props.history.location.pathname;\r\n        let path_array = schedulePath.split(\"/\");\r\n        page_type = path_array[2];\r\n        if(page_type === 'flow-schedules') {\r\n          this.setState({ loadingTxt: 'Loading Flow Schedules...' });\r\n          //var projectId = pathname_array[pathname_array.length - 1];\r\n          //projectId = this.props.data.activeProjectId;\r\n          flowId = this.props.match.params['id'];\r\n          //console.log('projectId: ' + projectId + \", page_type: \" + page_type);\r\n          var appData_arr: any = {};\r\n          getPipeline(flowId).then((getPipeline_response: any) => {\r\n            //console.log('getPipeline_response... ', getPipeline_response);\r\n            appData_arr.pipelines = [getPipeline_response.pipeline];\r\n            projectId = getPipeline_response.pipeline.project_id;\r\n            flowName = getPipeline_response.pipeline.name;\r\n            //this.setState({ subjectName: flowName });\r\n            getProject(projectId).then((getProject_response: any) => {\r\n              //console.log('getProject_response... ', getProject_response);\r\n              appData_arr.project = [getProject_response.project];\r\n              subjectName = getProject_response.project.name;\r\n              projectId = getProject_response.project.project_id;\r\n\r\n              appData = [appData_arr];\r\n              //console.log(\"appData...\", appData);\r\n\r\n              this.setState({ \r\n                appData: appData,\r\n                loading: false,\r\n                subjectName: flowName,\r\n                projectId: projectId   \r\n              });\r\n            });\r\n          });\r\n        } else if(page_type === 'project-schedules') {\r\n          this.setState({ loadingTxt: 'Loading Project Schedules...' });\r\n          //var projectId = pathname_array[pathname_array.length - 1];\r\n          //projectId = this.props.data.activeProjectId;\r\n          projectId = this.props.match.params['id'];\r\n          //console.log('projectId: ' + projectId + \", page_type: \" + page_type);\r\n          getProjects().then((getProjects_response: any) => {\r\n            //console.log(\"getProjects_response...\", getProjects_response);\r\n            getProjects_response.forEach((project: any) => {\r\n              var appData_arr: any = {};\r\n              appData_arr.project = project;\r\n              //console.log('project.project_id...', project.project_id, 'projectId...', projectId);\r\n              if(project.project_id === projectId) {\r\n                //console.log('found project name!');\r\n                subjectName = project.name;\r\n                this.setState({ \r\n                  subjectName: project.name,\r\n                  projectId: projectId\r\n                });\r\n                getFlows(project.project_id).then((getFlows_response: any) => {\r\n                  //console.log(\"getFlows_response...\", getFlows_response.data.pipelines);\r\n                  appData_arr.pipelines = getFlows_response.data.pipelines;\r\n                });\r\n                appData.push(appData_arr);\r\n              }\r\n            });\r\n            //console.log(\"appData...\", appData);\r\n\r\n            this.setState({ \r\n              appData: appData,\r\n              loading: false  \r\n            });\r\n          });\r\n        } else {\r\n          this.setState({ loadingTxt: 'Loading Schedules...' });\r\n          getProjects().then((getProjects_response: any) => {\r\n            //console.log(\"getProjects_response...\", getProjects_response);\r\n            getProjects_response.forEach((project: any) => {\r\n              var appData_arr: any = {};\r\n              appData_arr.project = project;\r\n              //console.log('project.project_id...', project.project_id, 'projectId...', projectId);\r\n              if(project.project_id === projectId) {\r\n                //console.log('found project name!');\r\n                subjectName = project.name;\r\n                //this.setState({ subjectName: project.name });\r\n              }\r\n              getFlows(project.project_id).then((getFlows_response: any) => {\r\n                //console.log(\"getFlows_response...\", getFlows_response.data.pipelines);\r\n                appData_arr.pipelines = getFlows_response.data.pipelines;\r\n              });\r\n              appData.push(appData_arr);\r\n            });\r\n            //console.log(\"appData...\", appData);\r\n\r\n            this.setState({ \r\n              appData: appData,\r\n              loading: false  \r\n            });\r\n          });\r\n        }\r\n\r\n        //console.log('projectId: ' + projectId + \", subjectName: \" + subjectName + \", flowId: \" + flowId + \", flowName: \" + flowName);\r\n        \r\n        if(page_type === 'flow-schedules') {\r\n          getPastScheduleForPipeline(\"\", flowId, 1000, \"\").then((pastSchedules_response: any) => {\r\n              this.setState({ \r\n                  pastSchedules: pastSchedules_response.schedule_logs\r\n              })\r\n          });\r\n\r\n          getUpcomingScheduleForPipeline(\"\", flowId, 1000, \"\").then((upcomingSchedules_response: any) => {\r\n            //console.log('upcomingSchedules_response.schedule_logs...', upcomingSchedules_response.schedule_logs);\r\n            this.setState({ \r\n                //...this.state.schedules,\r\n                upcomingSchedules: [upcomingSchedules_response.schedule_log]\r\n            });\r\n          });\r\n\r\n          this.constructBreadcrumb(flowId, flowName, page_type);\r\n        } else if(page_type === 'project-schedules') {\r\n          getPastScheduleForProject(projectId, \"\", 1000, \"\").then((pastSchedules_response: any) => {\r\n              this.setState({ \r\n                  pastSchedules: pastSchedules_response.schedule_logs\r\n              })\r\n          });\r\n\r\n          getUpcomingScheduleForProject(projectId, \"\", 1000, \"\").then((upcomingSchedules_response: any) => {\r\n            this.setState({ \r\n                //...this.state.schedules,\r\n                upcomingSchedules: upcomingSchedules_response.schedule_logs\r\n            });\r\n          });\r\n\r\n          this.constructBreadcrumb(projectId, subjectName, page_type);\r\n        } else {\r\n          getPastScheduleForUser(\"\", \"\", 1000, \"\").then((pastSchedules_response: any) => {\r\n            this.setState({ \r\n                pastSchedules: pastSchedules_response.schedule_logs\r\n            })\r\n          });\r\n\r\n          getUpcomingScheduleForUser(\"\", \"\", 1000, \"\").then((upcomingSchedules_response: any) => {\r\n            this.setState({ \r\n                //...this.state.schedules,\r\n                upcomingSchedules: upcomingSchedules_response.schedule_logs\r\n            });\r\n          });\r\n\r\n          this.constructBreadcrumb(projectId, subjectName, page_type);\r\n        }\r\n        \r\n        //this.setState({ loading: false });\r\n        //this.constructBreadcrumb(projectId, subjectName, page_type);\r\n        //console.log(\"appData...\", appData);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      //console.log(\"componentWillUnmount subpageC: \" + this.subpageClicked);\r\n      //console.log(\"componentWillUnmount - this.props...\", this.props);\r\n  \r\n      let isUnderProject: boolean = true;\r\n      let pathName:string = '';\r\n      let pathName2: string = '';\r\n      if(this.props.history.location.pathname && this.props.match.path) {\r\n        pathName = this.props.history.location.pathname;\r\n        pathName2 = this.props.match.path;\r\n        var pathName_array = pathName.split(\"/\");\r\n        var page_id = pathName_array[pathName_array.length - 1];\r\n        var page_type = pathName_array[2];\r\n        //console.log('page_type: ' + page_type + \", pathName: \" + pathName + \", pathName2: \" + pathName2);\r\n        if(page_type === 'projects') {\r\n          //pathName !== '/dashboard/projects' && pathName2 !== '/dashboard/schedules'\r\n          if(pathName2 !== '/dashboard/schedules') {\r\n            isUnderProject = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if(!isUnderProject) {\r\n        exitSessionManually(this.state.projectId).then((exitSessRes: any) => {\r\n          this.props.cleanSession();\r\n        }).catch((exitSessErr: any) => {\r\n          this.props.cleanSession();\r\n        });\r\n      }\r\n    }\r\n\r\n    constructBreadcrumb = (id: string, name: string, page: string) => {\r\n      //console.log(\"projectId...\", projectId, \"subjectName...\", subjectName, \"page...\", page);\r\n      if(page === 'flow-schedules') {\r\n        this.setState({\r\n          breadCrumbLink: '/flow/' + id,\r\n          breadCrumbTxt: 'Flow / '\r\n        });\r\n      } else if(page === 'project-schedules') {\r\n        this.setState({\r\n          breadCrumbLink: '/dashboard/project/' + id,\r\n          breadCrumbTxt: 'Project / '\r\n        });\r\n      } else {\r\n        this.setState({\r\n          breadCrumbLink: '/dashboard',\r\n          breadCrumbTxt: 'Home'\r\n        });\r\n      }\r\n    }\r\n\r\n    handleChangeSearchTerm = (e: any) => {\r\n        this.setState({\r\n          searchTerm: e.target.value\r\n        });\r\n    };\r\n\r\n    setScheduleCategory = (e: any) => {\r\n      this.setState({\r\n        scheduleCategory: e.target.value\r\n      });\r\n    }\r\n    \r\n    getScheduleFilters = () => {\r\n        return (\r\n            <div className=\"filter-cardbox-holder\">\r\n              {/* <div className=\"filters-and-pagination\">\r\n                <IkiInput \r\n                    _label=\"\"\r\n                    _placeholder=\"Search...\"\r\n                    _type='text'\r\n                    _autoComplete=\"new-password\"\r\n                    _value={this.state.searchTerm}\r\n                    _size=\"small\"\r\n                    _margin=\"none\"\r\n                    _filterType={true}\r\n                    _onChange={(e: any) => this.handleChangeSearchTerm(e)}\r\n                    _startIcon={\r\n                        {\r\n                          _icon: (\r\n                            <SearchIcon fontSize=\"small\" />\r\n                          )\r\n                        }\r\n                    }\r\n                />\r\n              </div> */}\r\n\r\n              <Box mt={2}>\r\n                <FormControl fullWidth className=\"checkbox-form-control\">\r\n                    <FormControlLabel\r\n                        className=\"checkbox-label\"\r\n                        control={\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              checked\r\n                              disabled\r\n                            />\r\n                        }\r\n                        label='Flow'\r\n                        disabled\r\n                    />\r\n                    <FormControlLabel\r\n                        className=\"checkbox-label\"\r\n                        control={\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              disabled\r\n                            />\r\n                        }\r\n                        label='Connector'\r\n                        disabled\r\n                    />\r\n                  </FormControl>\r\n              </Box>\r\n\r\n              <Box mt={2}>\r\n                <FormControl fullWidth className=\"checkbox-form-control\">\r\n                        {/* <FormLabel component=\"div\">Type:</FormLabel> */}\r\n                      <RadioGroup \r\n                        aria-label=\"schedule-time\" \r\n                        name=\"schedule-category\" \r\n                      >\r\n                        <FormControlLabel \r\n                            value='upcoming'\r\n                            key='upcoming'\r\n                            control={\r\n                                <Radio \r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    onClick={(e: any) => this.setScheduleCategory(e)}\r\n                                    checked={this.state.scheduleCategory === 'upcoming'}\r\n                                />\r\n                            } \r\n                            label='Upcoming Events' \r\n                        />\r\n                        <FormControlLabel \r\n                            value='past'\r\n                            key='past'\r\n                            control={\r\n                                <Radio \r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    onClick={(e: any) => this.setScheduleCategory(e)}\r\n                                    checked={this.state.scheduleCategory === 'past'}\r\n                                />\r\n                            } \r\n                            label='Past Logs' \r\n                        />\r\n                      </RadioGroup>\r\n                </FormControl>\r\n              </Box>\r\n\r\n              {/* <Box mt={2}>\r\n                <FormControl fullWidth className=\"checkbox-form-control\">\r\n                    <FormControlLabel\r\n                        className=\"checkbox-label\"\r\n                        control={\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              checked\r\n                            />\r\n                        }\r\n                        label='Success'\r\n                    />\r\n                    <FormControlLabel\r\n                        className=\"checkbox-label\"\r\n                        control={\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              checked\r\n                            />\r\n                        }\r\n                        label='Fail'\r\n                    />\r\n                  </FormControl>\r\n              </Box> */}\r\n\r\n              {/* <Box mt={2}>\r\n                <FormControl fullWidth className=\"checkbox-form-control\">\r\n                    <FormControlLabel\r\n                        className=\"checkbox-label\"\r\n                        control={\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              checked\r\n                            />\r\n                        }\r\n                        label='Once'\r\n                    />\r\n                    <FormControlLabel\r\n                        className=\"checkbox-label\"\r\n                        control={\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              checked\r\n                            />\r\n                        }\r\n                        label='Daily'\r\n                    />\r\n                    <FormControlLabel\r\n                        className=\"checkbox-label\"\r\n                        control={\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              checked\r\n                            />\r\n                        }\r\n                        label='Weekly'\r\n                    />\r\n                  </FormControl>\r\n              </Box> */}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleEditSchedule = (itemId: string) => {\r\n\r\n    }\r\n    \r\n    handleDeleteSchedule = (item: any) => {\r\n\r\n    }\r\n\r\n    handleRenderAsList = () => {\r\n      this.setState({ renderAsList: true });\r\n    };\r\n  \r\n    handleRenderAsGrid = () => {\r\n      this.setState({ renderAsList: false });\r\n    };\r\n\r\n    getSchedules(schedules: any) {\r\n        //console.log(\"schedules: \", schedules, \", schedules.length: \", schedules.length)\r\n        var schedulesArr: any = []; \r\n        var currentUnixTime = moment();\r\n        var scheduleCategory = 'upcoming';\r\n\r\n        var noScheduleTxt: string = '';\r\n        if(this.state.scheduleCategory === 'past') {\r\n          noScheduleTxt = 'No past schedules found';\r\n          scheduleCategory = 'Past';\r\n        } else if(this.state.scheduleCategory === 'upcoming') {\r\n          noScheduleTxt = 'No upcoming schedules found';\r\n          scheduleCategory = 'Upcoming';\r\n        }\r\n\r\n        //var currentUnixTime = Math.floor(Date.now() / 1000);\r\n        //console.log(\"currentUnixTime...\", currentUnixTime);\r\n        schedules.forEach((schedules: any) => {\r\n            //console.log(\"schedules.schedule.start_time...\", schedules.schedule.start_time)\r\n            \r\n            if(schedules.pipeline_logs && schedules.pipeline_logs.length > 0) {\r\n              schedules.pipeline_logs.forEach((pipelineLog: any) => {\r\n                //console.log(\"pipelineLog...\", pipelineLog);\r\n\r\n                var eventTime = new Date();\r\n                var logTimestamp = (pipelineLog.timestamp * 1000);\r\n                var logDateTime = moment(logTimestamp);\r\n                if(pipelineLog.timestamp !== \"\") {\r\n                  //var logDateTime = new Date(logTimestamp);\r\n                  //console.log(\"logDateTime...\", logDateTime);\r\n                  //var start_d = new Date(pipelineLog.timestamp);\r\n                  //var start_d = moment.unix(pipelineLog.timestamp).format();\r\n                  var logTimestamp_year = parseInt(moment(logDateTime).format('YYYY'));\r\n                  var logTimestamp_month = parseInt(moment(logDateTime).format('MM')) - 1;\r\n                  var logTimestamp_day = parseInt(moment(logDateTime).format('DD'));\r\n                  var hour = parseInt(moment(logDateTime).format('H'));\r\n                  var minutes = parseInt(moment(logDateTime).format('mm'));\r\n                  eventTime = new Date(logTimestamp_year, logTimestamp_month, logTimestamp_day, hour, minutes);\r\n                }\r\n                //console.log(\"logTimestamp...\", logTimestamp);\r\n\r\n                var isPast = moment(logDateTime).isBefore(currentUnixTime);\r\n                var isUpcoming = moment(logDateTime).isAfter(currentUnixTime);\r\n                //console.log('isPast...', isPast, \"isUpcoming...\", isUpcoming);\r\n\r\n                var schedulesRestructured: schedules = {\r\n                  title: schedules.pipeline.name + ' | ' + schedules.project.name,\r\n                  start: eventTime,\r\n                  end: eventTime,\r\n                  desc: schedules.schedule.name,\r\n                  status: pipelineLog.status,\r\n                  message: pipelineLog.message,\r\n                  project: schedules.project,\r\n                  pipeline: schedules.pipeline,\r\n                  schedule: schedules.schedule,\r\n                  category: scheduleCategory\r\n                }; \r\n\r\n                if(this.state.scheduleCategory === 'past' && isPast) {\r\n                  schedulesArr.push(schedulesRestructured);\r\n                } else if(this.state.scheduleCategory === 'upcoming' && isUpcoming) {\r\n                  schedulesArr.push(schedulesRestructured);\r\n                }\r\n              });\r\n            }\r\n        })\r\n        //console.log('schedulesArr...', schedulesArr);\r\n\r\n        if (schedulesArr && schedulesArr.length === 0) {\r\n          return (\r\n            <Fragment>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\" className=\"no-results\">\r\n                  <FindInPageIcon className=\"no-results-icon\" />\r\n                  <span className=\"no-results-txt\">{noScheduleTxt}</span>\r\n                </Box>\r\n              </Grid>\r\n            </Fragment>\r\n          );\r\n        }\r\n        return(\r\n          <Fragment>\r\n                <div className=\"rbc-calendar-holder\">\r\n                  <Calendar\r\n                    localizer={localizer}\r\n                    events={schedulesArr}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    eventPropGetter={(event: any) => ({\r\n                      style: {\r\n                          backgroundColor: event.status === ''\r\n                              ? \"rgba(63, 81, 181, 0.6)\"\r\n                              : event.status === 'SUCCESS' \r\n                                ? \"#4caf50\"\r\n                                : \"#f44336\",\r\n                      }\r\n                  })}\r\n                  onSelectEvent={event => this.calendarEventClick(event)}\r\n                  />\r\n                </div>\r\n          </Fragment>\r\n        );\r\n    }\r\n\r\n    /*eventStyleGetter = (event: any, start: any, end: any, isSelected: any) => {\r\n      console.log(event);\r\n      return null;\r\n    };*/\r\n\r\n    calendarEventClick = (event: any) => {\r\n      //console.log(\"calendarEventClick...\", event);\r\n      this.setState({\r\n        previewScheduleData: event,\r\n        previewScheduleDialogOpen: true\r\n      })\r\n    }\r\n\r\n    openNewScheduleDialog = () => {\r\n      this.setState({ newScheduleDialogOpen: true });\r\n    }\r\n\r\n    closeNewScheduleDialog = () => {\r\n      this.setState({ newScheduleDialogOpen: false });\r\n    }\r\n\r\n    submitNewSchedule = (pipelineId: any,  scheduleTime: any, scheduleName: string) => {\r\n      //console.log('submitNewSchedule...', 'pipelineId: ', pipelineId, 'scheduleTime: ', scheduleTime, 'scheduleName: ', scheduleName);\r\n      var pipelineObject: any = {};\r\n      this.state.appData.forEach((appD: any) => {\r\n        //console.log('appD...', appD);\r\n        appD.pipelines.forEach((pipeline: any) => {\r\n          //console.log('pipeline...', pipeline);\r\n          if(pipeline.pipeline_id === pipelineId.pipelineId) {\r\n            pipelineObject = pipeline;\r\n          }\r\n        })\r\n      })\r\n      //console.log('pipelineObject...', pipelineObject);\r\n      var scheduleType = scheduleTime.type;\r\n      var utcHours = new Date(scheduleTime.startTime).getUTCHours();\r\n      var utcMinutes = new Date(scheduleTime.startTime).getUTCMinutes();\r\n      var userTime = scheduleTime.startTime.format('HH:mm');\r\n      //console.log(\"ZTC-h: \" + utcHours + \", UTC-min: \" + utcMinutes + \", userTime: \" + userTime);\r\n      var userStartDate = scheduleTime.startDate.format('YYYY-MM-DD');\r\n      var userFullStartDatetime = userStartDate + \" \" + userTime + \":00\";\r\n      var userFullStartDatetimeUTC = (new Date(userFullStartDatetime).getTime() / 1000).toFixed(0);\r\n      //console.log(\"userStartDate...\", userStartDate, \"userFullStartDatetime...\", userFullStartDatetime, \"userFullStartDatetimeUTC...\", userFullStartDatetimeUTC);\r\n      var userEndTime = scheduleTime.startTime.add(2, 'hours').format('HH:mm'); \r\n      var userEndDate = scheduleTime.endDate.format('YYYY-MM-DD');\r\n      var userFullEndDatetime = userEndDate + \" \" + userEndTime + \":00\";\r\n      var userFullEndDatetimeUTC = (new Date(userFullEndDatetime).getTime() / 1000).toFixed(0);\r\n      //console.log(\"userEndDate...\", userEndDate, \"userFullEndDatetime...\", userFullEndDatetime, \"userFullEndDatetimeUTC...\", userFullEndDatetimeUTC);\r\n      var cronString: string = '';\r\n      if(scheduleType === 'once') {\r\n        cronString = convertToCronString(\r\n          { value: utcMinutes },\r\n          { value: utcHours },\r\n          null,\r\n          null,\r\n          null\r\n        );\r\n      } else if(scheduleType === 'daily') {\r\n        var days = scheduleTime.days > 0 ? scheduleTime.days : 1;\r\n        //console.log('daily...', days);\r\n        cronString = convertToCronString(\r\n          { value: utcMinutes },\r\n          { value: utcHours },\r\n          { value: days, recur: true },\r\n          null,\r\n          null\r\n        );\r\n      } else if(scheduleType === 'weekly') {\r\n        var weeks = scheduleTime.weeks > 0 ? scheduleTime.weeks : 1;\r\n        cronString = convertToCronString(\r\n          { value: utcMinutes },\r\n          { value: utcHours },\r\n          { value: weeks * 7, recur: true },\r\n          null,\r\n          scheduleTime.weekDays\r\n        );\r\n      }\r\n      if(cronString !== '') {\r\n        var scheduleObject = {\r\n          cron: cronString,\r\n          start_time: userFullStartDatetimeUTC,\r\n          end_time: userFullEndDatetimeUTC,\r\n          name: scheduleName\r\n        }\r\n        //console.log(\"cronString...\", cronString);\r\n        pipelineObject.schedule = scheduleObject;\r\n        pipelineObject.modifiedAt = getCurrentDate();\r\n\r\n        //console.log('pipelineObject...', pipelineObject);\r\n        this.props.updateFlowData(pipelineObject);\r\n        this.closeNewScheduleDialog();\r\n        setTimeout(() => {\r\n          this.setState({\r\n            snackbarMessage: (\r\n              <Fragment>\r\n                <div className=\"msg\">\r\n                  You have succesfully scheduled new event\r\n                </div>\r\n              </Fragment>\r\n            ),\r\n            snackbarType: 'success',\r\n            snackbarOpen: true,\r\n          });\r\n\r\n          var page_type: string = \"\";\r\n          var schedulePath = this.props.history.location.pathname;\r\n          var path_array = schedulePath.split(\"/\");\r\n          page_type = path_array[2];\r\n\r\n          if(page_type === 'flow-schedules') {\r\n            var flowId = this.props.match.params['id'];\r\n            getPastScheduleForPipeline(\"\", flowId, 1000, \"\").then((pastSchedules_response: any) => {\r\n                this.setState({ \r\n                    pastSchedules: pastSchedules_response.schedule_logs\r\n                })\r\n            });\r\n\r\n            getUpcomingScheduleForPipeline(\"\", flowId, 1000, \"\").then((upcomingSchedules_response: any) => {\r\n              this.setState({ \r\n                  ...this.state.schedules,\r\n                  upcomingSchedules: [upcomingSchedules_response.schedule_log]\r\n              });\r\n            });\r\n          } else if(page_type === 'project-schedules') {\r\n            var projectId = this.props.match.params['id'];\r\n            getPastScheduleForProject(projectId, \"\", 1000, \"\").then((pastSchedules_response: any) => {\r\n                this.setState({ \r\n                    pastSchedules: pastSchedules_response.schedule_logs\r\n                })\r\n            });\r\n\r\n            getUpcomingScheduleForProject(projectId, \"\", 1000, \"\").then((upcomingSchedules_response: any) => {\r\n              this.setState({ \r\n                  ...this.state.schedules,\r\n                  upcomingSchedules: upcomingSchedules_response.schedule_logs\r\n              });\r\n            });\r\n          } else {\r\n            getPastScheduleForUser(\"\", \"\", 1000, \"\").then((pastSchedules_response: any) => {\r\n              this.setState({ \r\n                  pastSchedules: pastSchedules_response.schedule_logs\r\n              })\r\n            });\r\n\r\n            getUpcomingScheduleForUser(\"\", \"\", 1000, \"\").then((upcomingSchedules_response: any) => {\r\n              this.setState({ \r\n                  ...this.state.schedules,\r\n                  upcomingSchedules: upcomingSchedules_response.schedule_logs\r\n              });\r\n            });\r\n          }\r\n        }, 1500);\r\n      } else{\r\n        setTimeout(() => {\r\n          this.setState({\r\n            snackbarMessage: (\r\n              <Fragment>\r\n                <div className=\"msg\">\r\n                  Something went wrong. Please try again\r\n                </div>\r\n              </Fragment>\r\n            ),\r\n            snackbarType: 'error',\r\n            snackbarOpen: true,\r\n          });\r\n        }, 1500);\r\n      }\r\n    }\r\n\r\n    closePreviewScheduleDialog = () => {\r\n      this.setState({ previewScheduleDialogOpen: false });\r\n    }\r\n\r\n    handleSnackbarClose = () => {\r\n      this.setState({ snackbarOpen: false });\r\n    };\r\n\r\n    render() {\r\n      //console.log('SchedulesComponent...', this.props);\r\n      let activeSchedules: any = {};\r\n      let noScheduleTxt: string = '';\r\n\r\n      /*var page_type: string = \"\";\r\n      var schedulePath = this.props.history.location.pathname;\r\n      var path_array = schedulePath.split(\"/\");\r\n      page_type = path_array[2];*/\r\n\r\n      if(this.state.scheduleCategory === 'past') {\r\n        activeSchedules = this.state.pastSchedules;\r\n        noScheduleTxt = 'No past schedules found';\r\n      } else if(this.state.scheduleCategory === 'upcoming') {\r\n        activeSchedules = this.state.upcomingSchedules;\r\n        noScheduleTxt = 'No upcoming schedules found';\r\n      }\r\n      //console.log('activeSchedules...', activeSchedules);\r\n      /*var projectId: string = \"\";\r\n      if(page_type === 'project') {\r\n        projectId = this.props.data.activeProjectId;\r\n      }*/\r\n      //this.constructBreadcrumb(projectId, this.state.subjectName, page_type);\r\n        return (\r\n            <Fragment>\r\n                <IkiLoader\r\n                    loadingTxt={this.state.loadingTxt}\r\n                    fadeOut={!this.state.loading}\r\n                    placement=\"next-to-nav\"\r\n                />\r\n                <Container className=\"main-container h_100-100\" component=\"main\" maxWidth={false}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <IkiPageHeader\r\n                                _breadcrumbLink={this.state.breadCrumbLink}\r\n                                _breadcrumbText={this.state.breadCrumbTxt + '' + this.state.subjectName}\r\n                                _breadcrumbTitle='Schedules'\r\n                                _breadcrumbBackIcon={true}\r\n                                _actionButtons={\r\n                                    <IkiButton\r\n                                    _variant='contained'\r\n                                    _color='primary'\r\n                                    _label=\"New Schedule\"\r\n                                    _type='button'\r\n                                    _fullWidth={false}\r\n                                    _loading={false}\r\n                                    _startIcon={\r\n                                        <i className=\"zmdi zmdi-plus zmdi-hc-fw\"></i>\r\n                                        //<AddIcon />\r\n                                    }\r\n                                    _onClick={() => this.openNewScheduleDialog()}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div className={activeSchedules.length > 0 ? \"with-filter-wrapper h-100\" : \"with-filter-wrapper\"}>\r\n                        <div className=\"filter-holder\">\r\n                            {this.getScheduleFilters()}\r\n                        </div>\r\n                        <div className={activeSchedules.length > 0 ? \"next-to-filter-content h-100\" : \"next-to-filter-content\"}>\r\n                            <div className=\"cardbox-holder contains-calendar\">\r\n                                {\r\n                                    activeSchedules.length > 0 ? (\r\n                                        this.getSchedules(activeSchedules)\r\n                                    ):(\r\n                                        <Fragment>\r\n                                            <Grid item xs={12}>\r\n                                                <Box display=\"flex\" alignItems=\"center\" className=\"no-results\">\r\n                                                    <FindInPageIcon className=\"no-results-icon\" />\r\n                                                    <span className=\"no-results-txt\">{noScheduleTxt}</span>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n                {this.state.newScheduleDialogOpen && (\r\n                  <NewScheduleDialog\r\n                    open={this.state.newScheduleDialogOpen}\r\n                    handleDialogClose={this.closeNewScheduleDialog}\r\n                    newScheduleDialogErrorMsg={this.state.newScheduleDialogError}\r\n                    newScheduleSubmitLoading={this.state.addingNewScheduleLoading}\r\n                    appData={this.state.appData}\r\n                    onSubmit={(pipelineId: any, scheduleTime: any, ScheduleName: string) => this.submitNewSchedule(pipelineId, scheduleTime, ScheduleName)}\r\n                  />\r\n                )}\r\n                {this.state.previewScheduleDialogOpen && (\r\n                  <PreviewScheduleDialog\r\n                    open={this.state.previewScheduleDialogOpen}\r\n                    handleDialogClose={this.closePreviewScheduleDialog}\r\n                    data={this.state.previewScheduleData}\r\n                  />\r\n                )}\r\n                <SnackbarMsg\r\n                  snackbarOpen={this.state.snackbarOpen}\r\n                  snackbarType={this.state.snackbarType}\r\n                  snackbarMsg={this.state.snackbarMessage}\r\n                  onSnackbarClose={this.handleSnackbarClose}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SchedulesComponent;","import { State } from './../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n  handleCleanSession,\r\n  handleProjectReturn,\r\n  handleFillSession,\r\n  updateFlowDataActionStart\r\n} from '../../actions';\r\nimport SchedulesComponent from './schedules-component';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  cleanSession: () => {\r\n    dispatch(handleCleanSession())\r\n  },\r\n  fireReturnToProject: (sourcePage: string) => {\r\n    dispatch(handleProjectReturn(sourcePage))\r\n  },\r\n  fillSessions: (proSess: string, projectId: string) => {\r\n    dispatch(handleFillSession(proSess, projectId))\r\n  },\r\n  updateFlowData: (flowData: any) => {\r\n    dispatch(updateFlowDataActionStart(flowData));\r\n  },\r\n});\r\nconst mapStateToProps = (state: State) => ({\r\n  data: state.flowReducerState,\r\n  email: state.userReducerState.email,\r\n  metabaseLoginId: state.flowReducerState.metabaseLoginId,\r\n  activePageType: state.flowReducerState.activePageType,\r\n  uploadProgress: state.flowReducerState.uploadProgress,\r\n});\r\n\r\nexport const SchedulesContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SchedulesComponent);\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Switch } from 'react-router-dom';\r\nimport { ProfileContainer } from '../../../routes/profile/profile-container';\r\nimport { ProjectsContainer } from '../../../routes/projects/projects-container';\r\nimport { ProjectContainer } from '../../../routes/project/project-container';\r\nimport { SchedulesContainer } from '../../../routes/schedules/schedules-container';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Content.module.scss';\r\nlet cx = classNames.bind(styles);\r\n\r\nexport default class IkigaiContent extends Component {\r\n  prepareContent = () => {\r\n    const _type = this.props._type ? this.props._type : '';\r\n    const _content = this.props._type ? this.props._content : '';\r\n    let _navMinimzed = this.props._navMinimzed ? this.props._navMinimzed : false;\r\n    var contentAreaClass = cx({\r\n      contentArea: true,\r\n      'minimized': _navMinimzed\r\n    });\r\n    //console.log('IkigaiContent...', this.props);\r\n    if(_type === 'sub-page') {\r\n      return (\r\n        <>\r\n          <div className={contentAreaClass}>\r\n            {_content}\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className={contentAreaClass}>\r\n            <Switch>\r\n              <Route\r\n                path=\"/dashboard/project/:id\"\r\n                component={ProjectContainer}\r\n              ></Route>\r\n              <Route\r\n                path=\"/dashboard/projects\"\r\n                component={ProjectsContainer}\r\n              ></Route>\r\n              <Route\r\n                path=\"/dashboard/flow-schedules/:id\"\r\n                component={SchedulesContainer}\r\n              ></Route>\r\n              <Route\r\n                path=\"/dashboard/project-schedules/:id\"\r\n                component={SchedulesContainer}\r\n              ></Route>\r\n              <Route\r\n                path=\"/dashboard/schedules\"\r\n                component={SchedulesContainer}\r\n              ></Route>\r\n              <Route\r\n                path=\"/dashboard/profile\"\r\n                component={ProfileContainer}\r\n              ></Route>\r\n              <Route \r\n                  path=\"/dashboard\" \r\n                  component={ProjectsContainer}\r\n              ></Route>\r\n            </Switch>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return this.prepareContent();\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SchedulesComponent from '../../../routes/schedules/schedules-component';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './ContentOverlay.module.scss';\r\nlet cx = classNames.bind(styles);\r\n\r\nexport default class IkiContentOverlay extends Component {\r\n  prepareContent = () => {\r\n    const _type = this.props._type ? this.props._type : '';\r\n    const _menuItem = this.props._menuItem ? this.props._menuItem : '';\r\n    let _navMinimzed = this.props._navMinimzed ? this.props._navMinimzed : false;\r\n    //console.log(\"IkiContentOverlay props...\", this.props);\r\n    var contentAreaClass = cx({\r\n      contentArea: true,\r\n      'minimized': _navMinimzed\r\n    });\r\n    return (\r\n      <>\r\n        <div className={contentAreaClass}>\r\n          {_menuItem === 'schedule' ? (\r\n            <SchedulesComponent />\r\n          ):(\r\n            <div>Something went wrong. Please reload page</div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  render() {\r\n    return this.prepareContent();\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n//import classNames from 'classnames/bind';\r\n//import styles from './Layout.module.scss';\r\nimport IkigaiNavigation from './IkiNavigation';\r\nimport IkigaiContent from './IkiContent';\r\nimport IkiContentOverlay from './IkiContentOverlay';\r\n\r\n//let cx = classNames.bind(styles);\r\n\r\nexport default class IkigaiLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navMinimized: false,\r\n      menuItem: ''\r\n    }\r\n  }\r\n  prepareLayout = () => {\r\n    let _type = this.props._type ? this.props._type : '';\r\n    let _page = this.props._page ? this.props._page : '';\r\n    let _appData = this.props._appData ? this.props._appData : null;\r\n    let _historyData = this.props._historyData ? this.props._historyData : null;\r\n    //let _matchData = this.props._matchData ? this.props._matchData : null;\r\n    const _email = this.props._email ? this.props._email : '';\r\n    const _uploadProgress = this.props._uploadProgress ? this.props._uploadProgress : '';\r\n    const _logoutHandler = this.props._logoutHandler ? this.props._logoutHandler : '';\r\n    const _leftSidebar = this.props._leftSidebar ? this.props._leftSidebar : '';\r\n    const _filterSidebar = this.props._filterSidebar ? this.props._filterSidebar : '';\r\n    const _rightSidebar = this.props._rightSidebar ? this.props._rightSidebar : '';\r\n    const _content = this.props._content ? this.props._content : '';\r\n    //const _drawer = this.props._drawer ? this.props._drawer : '';\r\n    const _handleGoBack = this.props._handleGoBack ? this.props._handleGoBack : '';\r\n    /*if(_type === 'sub-page') {\r\n      this.setState({ navMinimized: true });\r\n    }*/\r\n\r\n    var activePageType = '';\r\n    if(_appData !== null) {\r\n      activePageType = _appData.activePageType;\r\n    }\r\n\r\n    /*let isSubpage = false;\r\n    if(_type === 'sub-page' || activePageType === 'schedule') {\r\n      isSubpage = true;\r\n    }*/\r\n\r\n    /*let isProjectPage = false;\r\n    if(_historyData.location.pathname) {\r\n      let pathName = _historyData.location.pathname;\r\n      var pathName_array = pathName.split(\"/\");\r\n      if(pathName_array[2]) {\r\n        console.log('is project page... ', pathName_array[2]);\r\n        if(pathName_array[2] === 'project') {\r\n          isProjectPage = true;\r\n        }\r\n      }\r\n    }*/\r\n\r\n    //let isNavMinimized = isSubpage ? true : this.state.navMinimized;\r\n    let isNavMinimized = this.state.navMinimized;\r\n    \r\n    //console.log(\"IkigaiLayout...\", this.props);\r\n    //console.log(\"_type...\", _type, \"_page...\", _page);\r\n    //console.log('activePageType...', activePageType);\r\n\r\n    return (\r\n      <>\r\n        <IkigaiNavigation\r\n          _type={_type}\r\n          _page={_page}\r\n          _email={_email}\r\n          _logoutHandler={_logoutHandler}\r\n          _handleGoBack={_handleGoBack}\r\n          _leftSidebar={_leftSidebar}\r\n          _filterSidebar={_filterSidebar}\r\n          _uploadProgress={_uploadProgress}\r\n          _toggleNavigation={() => this.toggleNavigation()} \r\n          _navMinimzed={isNavMinimized}\r\n          _getMenuItemActive={(type) => this._getMenuItemActive(type)}\r\n          _menuItemActive={this.state.menuItem}\r\n          _appData={_appData}\r\n          //_isProjectPage={isProjectPage}\r\n        />\r\n        <IkigaiContent\r\n          _type={_type}\r\n          _content={_content}\r\n          _navMinimzed={isNavMinimized}\r\n        />\r\n        {/*this.state.menuItem === 'schedule' && (\r\n          <IkiContentOverlay\r\n            _type={_type}\r\n            _menuItem={this.state.menuItem}\r\n            _navMinimzed={this.state.navMinimized}\r\n          />\r\n        )*/}\r\n        {_rightSidebar !== '' && (\r\n          <IkigaiNavigation\r\n            _type={_type}\r\n            _page={_page}\r\n            _email={_email}\r\n            _logoutHandler={_logoutHandler}\r\n            _rightSidebar={_rightSidebar}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n  toggleNavigation = () => {\r\n    if(this.state.navMinimized) {\r\n      this.setState({ navMinimized: false })\r\n    } else {\r\n      this.setState({ navMinimized: true })\r\n    }\r\n  }\r\n  _getMenuItemActive(type) {\r\n    //console.log(\"_getMenuItemActive...\", type);\r\n    if(this.state.menuItem !== type){\r\n      this.setState({ menuItem: type });\r\n      if(type === 'schedule') {\r\n        this.setState({ navMinimized: true });\r\n      }\r\n    }\r\n    //this.setState({ menuItem: type })\r\n  }\r\n  render() {\r\n    //console.log(\"IkigaiLayout...\", this.props);\r\n    return this.prepareLayout()\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { DiagramModel, DiagramEngine } from '@projectstorm/react-diagrams';\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\nimport { CustomNodeModel } from './node/customnodemodel';\r\nimport UpdateModel from './update-model-component';\r\nimport ScheduleDialog from './schedule/schedule-dialog';\r\nimport VisualizeDialog from './visualize/visualize-dialog';\r\nimport VisualizeComponent from './visualize/visualize-component';\r\nimport PeekComponent from './peek/peek-component';\r\nimport { AddDatasetDialog } from '../../components/dialogs';\r\nimport ComponentDrawer from './components-drawer';\r\nimport InfoDrawer from './info-drawer';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\r\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Command from '../../diagram-engine/command';\r\nimport { getFriendlyLabel } from '../../util';\r\nimport {\r\n  getPipeline,\r\n  enterSession,\r\n  browseFacet,\r\n  finishBrowseFacet,\r\n  browseArrow,\r\n  finishBrowseArrow,\r\n  saveFacet,\r\n  peekArrow,\r\n  isPipelineRunning,\r\n  getPipelineLog,\r\n  browseDashboard,\r\n  getSuggesstions,\r\n  finishBrowseDashboard,\r\n  getPipelineSpecs,\r\n  exitSession as exitSessionManually\r\n} from '../../services';\r\nimport { METABASE_URL } from '../../constants';\r\nimport {\r\n  initDiagramEngine,\r\n  getDiagramModel,\r\n  getDiagramEngine,\r\n  deleteNode,\r\n  addNode,\r\n  addNodesAndArrows,\r\n  getNode,\r\n  deleteLink,\r\n  autoLayout,\r\n  zoomIn,\r\n  zoomOut,\r\n  zoomToFit,\r\n} from '../../diagram-engine';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { getCurrentDate } from '../../util';\r\nimport { CustomLinkModel } from './link';\r\nimport IkiLoader from '../../components/IkiLoader';\r\nimport SnackbarMsg from '../../components/SnackbarMsg';\r\nimport { CreateSessionDialog } from '../../components/dialogs';\r\nimport { makeCancelable } from '../../util/cancellable-promise';\r\nimport CommandManager from '../../diagram-engine/command-manager';\r\nimport { CustomPortModel } from './node/customportmodel';\r\nimport IkigaiLayout from '../../components/IkiLayout'\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\n//import '../dashboard/dashboard-style.scss';\r\n//import './flow-diagram-component.scss';\r\nimport styles from './FlowComponent.module.scss';\r\n\r\ninterface Props {\r\n  email: string;\r\n  data: any;\r\n  match: any;\r\n  classes: any;\r\n  history: any;\r\n  componentList: any;\r\n  projects: any;\r\n  facetDocLoaded: boolean;\r\n  cleanSession: () => void;\r\n  createDataset: (projectId: string, datasetName: string, file: File) => void;\r\n  editDataset: (\r\n    projectId: string,\r\n    datasetId: string,\r\n    datasetName: string,\r\n    file: File\r\n  ) => void;\r\n  updateFlowData: (flowData: object) => void;\r\n  deleteNode: (nodeId: string) => void;\r\n  sendAppData: (pipelineId: any) => void;\r\n  getFacetDoc: () => void;\r\n  getDatasets: (projectId: string) => void;\r\n  getDashboards: (projectId: string) => void;\r\n  renameProject: (projectId: string, newName: string) => void;\r\n  getSuggestions: (data: any) => void;\r\n  fireReturnToProject: (sourcePage: string) => void;\r\n  uploadProgress: any;\r\n  logout: () => void;\r\n}\r\n\r\ninterface Definition {\r\n  facets: any[];\r\n  arrows: any[];\r\n}\r\n\r\ninterface Pipeline {\r\n  schedule: any;\r\n  name: string;\r\n  createdAt: string;\r\n  modifiedAt: string;\r\n  definition: Definition;\r\n  project_id: string;\r\n}\r\n\r\ninterface vizElement {\r\n  open: boolean;\r\n  vizID: string;\r\n  vizType: string;\r\n  vizFacet: string;\r\n  vizInitiated: boolean;\r\n  vizLoading: boolean;\r\n  vizFacetInfo: any;\r\n  vizFacetId: string;\r\n  vizFacetParentId: string;\r\n  vizFacetSourceId: string;\r\n  vizFacetDestinationId: string;\r\n  iFrameURL: string;\r\n  iFrameLoadingDone: boolean;\r\n  iFrameContentLoaded: boolean;\r\n  clearIframeLoader: boolean;\r\n  isDashView: boolean;\r\n}\r\n\r\ninterface State {\r\n  drawerOpened: boolean;\r\n  pipeline: Pipeline;\r\n  editNodeModalOpened: boolean;\r\n  editArrowModalOpened: boolean;\r\n  selectedNode: any;\r\n  selectedArrow: any;\r\n  selectedArrowArgumentTypes: any;\r\n  scheduleOpened: boolean;\r\n  visualizationOpened: boolean;\r\n  pastScheduledActions: any;\r\n  upcomingScheduledActions: any;\r\n  pipelineLoaded: boolean;\r\n  editRunFlowRunning: boolean;\r\n  projectId: string;\r\n  projectName: string;\r\n  loadingDone: boolean;\r\n  mode: string;\r\n  createNewDatasetDialogOpened: boolean;\r\n  iFrameURL: string;\r\n  iFrameLoadingDone: boolean;\r\n  iFrameContentLoaded: boolean;\r\n  clearIframeLoader: boolean;\r\n  browseURLLoading: boolean;\r\n  pipelineRunning: boolean;\r\n  loadingLogs: boolean;\r\n  modeChangePending: boolean;\r\n  pipelineLogs: any[];\r\n  isMetabase: boolean;\r\n  snackbarOpen: boolean;\r\n  snackbarVariant: any;\r\n  snackbarMessage: string;\r\n  createSessionDialogOpened: boolean;\r\n  browseStatus: string;\r\n  sessionCreated: boolean;\r\n  newlyAddedDatasetName: string;\r\n  newlyAddedDatasetFileName: string;\r\n  newlyAddedDatasetNameExists: boolean;\r\n  columnNames: any;\r\n  dashboardCreateLoading: boolean;\r\n  vizInitiated: boolean;\r\n  vizLoading: boolean;\r\n  vizFacetInfo: any;\r\n  vizType: string;\r\n  vizFacetId: string;\r\n  vizFacetParentId: string;\r\n  vizFacetSourceId: string;\r\n  vizFacetDestinationId: string;\r\n  peekInitiated: boolean;\r\n  peekContent: any;\r\n  peekLoading: boolean;\r\n  isDashView: boolean;\r\n  peekMinMax: string;\r\n  selectedNodeName: string;\r\n  vizElements: any[];\r\n  pipelineSpecs: any[];\r\n  pipelineSpecsLoaded: boolean;\r\n  tableSort: string;\r\n  tableSortAsc: boolean;\r\n  tableSortProperty: any;\r\n  zoomScale: number;\r\n}\r\n\r\nclass FlowDiagramComponent extends React.Component<Props, State> {\r\n  _isMounted: boolean = false;\r\n  selectedNodeId: string = '';\r\n  _engine: DiagramEngine = initDiagramEngine();\r\n  _commandManager: CommandManager = new CommandManager();\r\n  autoLayoutApplied: boolean = false;\r\n  definition: Definition = { facets: [], arrows: [] };\r\n  pipelineCheckIntervalId: any = -1;\r\n  pipelineLogIntervalId: any = -1;\r\n  enterInteractiveModePending: boolean = false;\r\n  pipelineLogPromise: any = null;\r\n  isPipelineRunningPromise: any = null;\r\n  maxRetriesForPipelineLog: number = 20;\r\n  currentRetryForPipelineLog: number = 0;\r\n  hideAutoLayoutLoadingTimeout: any = -1;\r\n  hideAutoLayoutLoading: boolean = false;\r\n  peekLinkObject: CustomLinkModel = new CustomLinkModel();\r\n  saveFacetIntervalId: any = -1;\r\n  state = {\r\n    dashboardCreateLoading: false,\r\n    browseStatus: '',\r\n    sessionCreated: false,\r\n    createSessionDialogOpened: false,\r\n    snackbarOpen: false,\r\n    snackbarVariant: 'success',\r\n    snackbarMessage: '',\r\n    isMetabase: false,\r\n    iFrameURL: '',\r\n    iFrameLoadingDone: false,\r\n    iFrameContentLoaded: false,\r\n    clearIframeLoader: false,\r\n    browseURLLoading: true,\r\n    pipelineLoaded: false,\r\n    editRunFlowRunning: false,\r\n    drawerOpened: false,\r\n    scheduleOpened: false,\r\n    editNodeModalOpened: false,\r\n    editArrowModalOpened: false,\r\n    visualizationOpened: false,\r\n    vizInitiated: false,\r\n    vizLoading: false,\r\n    vizFacetInfo: {},\r\n    vizType: \"\",\r\n    vizFacetId: \"\",\r\n    vizFacetParentId: \"\",\r\n    vizFacetSourceId: \"\",\r\n    vizFacetDestinationId: \"\",\r\n    peekInitiated: false,\r\n    peekContent: {},\r\n    peekLoading: false,\r\n    peekMinMax: 'min',\r\n    vizElements: [],\r\n    createNewDatasetDialogOpened: false,\r\n    newlyAddedDatasetName: '',\r\n    newlyAddedDatasetFileName: '',\r\n    newlyAddedDatasetNameExists: false,\r\n    pipeline: {\r\n      schedule: {},\r\n      pipeline_id: '',\r\n      name: '',\r\n      modifiedAt: '',\r\n      createdAt: '',\r\n      project_id: '',\r\n      definition: this.definition\r\n    },\r\n    selectedNode: null,\r\n    selectedArrow: null,\r\n    selectedArrowArgumentTypes: null,\r\n    selectedNodeName: '',\r\n    projectId: '',\r\n    projectName: '',\r\n    mode: 'edit',\r\n    loadingDone: false,\r\n    pipelineRunning: false,\r\n    loadingLogs: false,\r\n    modeChangePending: false,\r\n    pipelineLogs: [],\r\n    columnNames: [],\r\n    isDashView: false,\r\n    pipelineSpecs: [],\r\n    pipelineSpecsLoaded: false,\r\n    tableSort: 'all',\r\n    tableSortAsc: true,\r\n    tableSortProperty: '',\r\n    zoomScale: 1,\r\n    /**\r\n     * Static data for past scheculed actions. These are hidden from the UI now.\r\n     */\r\n    pastScheduledActions: [\r\n      {\r\n        name: 'Action 1',\r\n        date: '24.08.2019',\r\n        execution: '15s'\r\n      },\r\n      {\r\n        name: 'Action 2',\r\n        date: '21.08.2019',\r\n        execution: '2m 12s'\r\n      },\r\n      {\r\n        name: 'Action 3',\r\n        date: '18.08.2019',\r\n        execution: '49s'\r\n      }\r\n    ],\r\n    /**\r\n     * Static data for upcoming scheduled actions. These are hidden from the UI now.\r\n     */\r\n    upcomingScheduledActions: [\r\n      {\r\n        name: 'Action 4',\r\n        date: '28.08.2019',\r\n        execution: '30s'\r\n      },\r\n      {\r\n        name: 'Action 5',\r\n        date: '29.08.2019',\r\n        execution: '1m'\r\n      },\r\n      {\r\n        name: 'Action 6',\r\n        date: '30.08.2019',\r\n        execution: '2m 5s'\r\n      }\r\n    ]\r\n  };\r\n\r\n  static getDerivedStateFromProps(props: Props, state: State) {\r\n    const projectId = state.projectId;\r\n    const matchingProjects = props.projects.filter(\r\n      (projectData: any) => projectData.project_id === projectId\r\n    );\r\n    var projectName = '';\r\n    if (matchingProjects.length > 0) {\r\n      projectName = matchingProjects[0].name;\r\n    }\r\n    // check if output dataset is created and update the datasetId.\r\n    var pipeline = state.pipeline;\r\n    if (state.pipeline.definition.facets) {\r\n      var facets = state.pipeline.definition.facets;\r\n      // console.log(\"getDerivedStateFromProps - facets: \");\r\n      // console.log(facets);\r\n      var updatedDatasetId = false;\r\n      var updatedDashboardId = false;\r\n      var updatedFacets = facets.map((facet: any) => {\r\n        //facet.name = ''\r\n        // console.log(facet);\r\n        if (\r\n          facet.chain_group === 'OUTPUT' &&\r\n          facet.facet_group === 'DATASET' &&\r\n          facet.facet_type === 'EXPORTED' &&\r\n          Object.keys(facet.arguments).length > 0\r\n        ) {\r\n          /**\r\n           * If there is a dataset name and it's dataset id is empty update the dataset id.\r\n           */\r\n\r\n          if (\r\n            facet.arguments['dataset_id'] === '' &&\r\n            facet.arguments['dataset_name'] !== ''\r\n          ) {\r\n            var matchingDataset = props.data.datasets.filter(\r\n              (datasetData: any) =>\r\n                datasetData.project_id === state.projectId &&\r\n                datasetData.name === facet.arguments['dataset_name']\r\n            );\r\n            if (matchingDataset.length > 0) {\r\n              //dataset found. set the overwrite to true and update the dataset id.\r\n              facet.arguments['dataset_id'] =\r\n                matchingDataset[0].dataset_id;\r\n              facet.arguments['overwrite'] = true;\r\n              updatedDatasetId = true;\r\n            } else {\r\n              //no matching dataset. May be it\"s got deleted by user?\r\n              facet.arguments['dataset_id'] = '';\r\n              facet.arguments['overwrite'] = false;\r\n            }\r\n          } else if (!facet.arguments['dataset_id']) {\r\n            //if there is no dataset_id property at all add an empty string to dataset_id property and set overwrite to false.\r\n            facet.arguments['dataset_id'] = '';\r\n            facet.arguments['overwrite'] = false;\r\n          }\r\n        }\r\n        if (\r\n          facet.chain_group === 'OUTPUT' &&\r\n          facet.facet_group === 'DASHBOARD' &&\r\n          facet.facet_type === 'DASH' &&\r\n          Object.keys(facet.arguments).length > 0\r\n        ) {\r\n          if (\r\n            facet.arguments['dashboard_id'] === '' &&\r\n            facet.arguments['dashboard_name'] !== ''\r\n          ) {\r\n            var matchingDashboard = props.data.dashboards.filter(\r\n              (dashboardData: any) =>\r\n                dashboardData.project_id === state.projectId &&\r\n                dashboardData.name === facet.arguments['dashboard_name']\r\n            );\r\n            if (matchingDashboard.length > 0) {\r\n              //dataset found. set the overwrite to true and update the dataset id.\r\n              facet.arguments['dashboard_id'] =\r\n                matchingDashboard[0].dashboard_id;\r\n              facet.arguments['overwrite'] = true;\r\n              updatedDashboardId = true;\r\n            } else {\r\n              //no matching dataset. May be it\"s got deleted by user?\r\n              facet.arguments['dashboard_id'] = '';\r\n              facet.arguments['overwrite'] = false;\r\n            }\r\n          } else if (!facet.arguments['dashboard_id']) {\r\n            //if there is no dataset_id property at all add an empty string to dashboard_id property and set overwrite to false.\r\n            facet.arguments['dashboard_id'] = '';\r\n            facet.arguments['overwrite'] = false;\r\n          }\r\n        }\r\n        /*if(\r\n          facet.chain_group === 'OUTPUT' &&\r\n          facet.facet_group === 'DASHBOARD' &&\r\n          facet.facet_type === 'DASH' &&\r\n          Object.keys(facet.arguments).length > 0\r\n        ){\r\n          if(state.dashboardCreateLoading){\r\n            var check = state.pipeline.definition.facets.filter((a)=>{return a['facet_type'] === 'DASH' && a['arguments']['dashboard_id']==='*'})\r\n            if(check.length === 0){\r\n              state.dashboardCreateLoading = false\r\n            }\r\n          }\r\n          if( (facet['arguments']['dashboard_id'] === '*' && !facet['arguments']['overwrite'])  && state.dashboardCreateLoading === false){\r\n            if(facet['arguments']['dashboard_id'] === '*' && !state.dashboardCreateLoading){\r\n              state.dashboardCreateLoading= true\r\n            }\r\n            // state.vizInitiated = true\r\n            \r\n            // createDashboard(facet['arguments']['dashboard_name'],facet['arguments']['project_id'],facet['arguments']['dataset_id']).then((data:any)=>{\r\n            //   facet.arguments.dashboard_id = data.dashboard_id\r\n\r\n            //   // console.log(pipeline);\r\n            //   // state.vizInitiated = false\r\n            //   props.updateFlowData(pipeline);\r\n            // })  \r\n          }\r\n        }*/\r\n        return facet;\r\n      });\r\n      //dataset id updated. Update the pipeline in server\r\n      // console.log(pipeline,updatedFacets);\r\n\r\n      if ((updatedDatasetId || updatedDashboardId) && updatedFacets.length > 0) {\r\n        pipeline.definition.facets = updatedFacets;\r\n        props.updateFlowData(pipeline);\r\n      }\r\n    }\r\n    return {\r\n      ...state,\r\n      projectName: projectName,\r\n      pipeline: pipeline\r\n    };\r\n  }\r\n  /**\r\n   * When the component mounts, it performs the following actions.\r\n   * 1) Checks if the facet doc is loaded. If not load the facet doc.\r\n   * 2) Get pipeline from the server based on the project id from the URL\r\n   * 3) When the pipeline is loaded check if the datasets are loaded. If not load datasets for the project id of the pieline.\r\n   * 4) Enter edit mode\r\n   * 5) Adds nodes and arrows to the diagram\r\n   *\r\n   */\r\n  componentDidMount() {\r\n    //console.log('FlowComponent... props: ', this.props);\r\n    this._isMounted = true;\r\n      document.body.style.overflow = 'hidden';\r\n      this.pipelineCheckIntervalId = -1;\r\n      this.pipelineLogIntervalId = -1;\r\n      this.hideAutoLayoutLoadingTimeout = -1;\r\n      this.hideAutoLayoutLoading = false;\r\n      this.currentRetryForPipelineLog = 0;\r\n      this.saveFacetIntervalId = -1;\r\n      var urlParamFlowId = this.props.match.params['id'];\r\n      if (!this.props.facetDocLoaded) {\r\n        this.props.getFacetDoc();\r\n      }\r\n      this.props.fireReturnToProject(\"pipeline\");\r\n\r\n      this.setState({\r\n        createSessionDialogOpened: false,\r\n        pipelineLogs: [],\r\n        snackbarOpen: false,\r\n        pipelineLoaded: false,\r\n        pipelineRunning: false,\r\n        sessionCreated: false,\r\n        loadingLogs: false,\r\n      });\r\n      getPipeline(urlParamFlowId).then(\r\n        (pipelineData: any) => {\r\n          pipelineData.pipeline.pipeline_id = urlParamFlowId;\r\n          //console.log(\"pipelineData> \");\r\n          //console.log(pipelineData);\r\n          const { pipeline } = pipelineData;\r\n          const projectId = pipeline.project_id;\r\n          this.setState({\r\n            ...this.state,\r\n            pipeline: pipeline,\r\n            pipelineLoaded: true,\r\n            projectId: projectId,\r\n            mode: 'edit'\r\n          });\r\n          if (!this.props.data.datasetsLoaded) {\r\n            this.props.getDatasets(projectId);\r\n          }\r\n          if (!this.props.data.dashboardsLoaded) {\r\n            this.props.getDashboards(projectId);\r\n          }\r\n          //this.enterSession(this.state.projectId);\r\n          this.getPipelineLogs(urlParamFlowId);\r\n          this.selectedNodeId = this.props.data.selectedNodeId;\r\n          var model: DiagramModel = getDiagramModel();\r\n          if (pipeline.definition.facets) {\r\n            console.log(\"pipeline: \");\r\n            console.log(pipeline);\r\n            addNodesAndArrows(\r\n              pipeline.definition.facets,\r\n              pipeline.definition.arrows\r\n            );\r\n          }\r\n          model.getModels().forEach((m: any, index: number) => {\r\n            //console.log(\"m: \");\r\n            //console.log(m.points);\r\n            m.registerListener({\r\n              editNode: (event: any) => {\r\n                this.showEditor(event.node as CustomNodeModel);\r\n              },\r\n              deleteNode: (event: any) => {\r\n                this.deleteNodeCommand(event.node as CustomNodeModel);\r\n              },\r\n              visualize: (event: any) => {\r\n                this._visualize(event.node as CustomNodeModel);\r\n              },\r\n              selectionChanged: (event: any) => {\r\n                this._selectionChangedEventHandler();\r\n              }\r\n            });\r\n          });\r\n          model.getLinks().forEach((l: any) => {\r\n            l.listenerRef = l.registerListener({\r\n              deleteLink: (event: any) => {\r\n                this.deleteLinkCommand(event.model as CustomLinkModel);\r\n              },\r\n              editLink: (event: any) => {\r\n                this._editLink(event.model as CustomLinkModel);\r\n              },\r\n              browseLink: (event: any) => {\r\n                this._browseLink(event.model as CustomLinkModel);\r\n              },\r\n              peek: (event: any) => {\r\n                this._peekArrow(event.model as CustomLinkModel);\r\n              },\r\n            });\r\n          });\r\n\r\n          model.registerListener({\r\n            linksUpdated: (event: any) => {\r\n              if (event.isCreated) {\r\n                var link: CustomLinkModel = event.link;\r\n                if (link.listenerRef) {\r\n                  link.deregisterListener(link.listenerRef);\r\n                }\r\n                link.listenerRef = link.registerListener({\r\n                  targetPortChanged: (event: any) => {\r\n                    if (!link.added) {\r\n                      link.added = true;\r\n                      this.addArrowCommand(\r\n                        event.entity.sourcePort,\r\n                        event.entity.targetPort,\r\n                        link\r\n                      );\r\n                    }\r\n                    // this.addArrow(\r\n                    //   event.entity.sourcePort,\r\n                    //   event.entity.targetPort\r\n                    // );\r\n                  },\r\n                  deleteLink: (event: any) => {\r\n                    //console.log('delete link command');\r\n                    this.deleteLinkCommand(event.model as CustomLinkModel);\r\n                    //this._deleteLink(event.model as CustomLinkModel);\r\n                  },\r\n                  editLink: (event: any) => {\r\n                    this._editLink(event.model as CustomLinkModel);\r\n                  },\r\n                  browseLink: (event: any) => {\r\n                    this._browseLink(event.model as CustomLinkModel);\r\n                  },\r\n                  peek: (event: any) => {\r\n                    this._peekArrow(event.model as CustomLinkModel);\r\n                  },\r\n                  selectionChanged: (event: any) => {\r\n                    this._selectionChangedEventHandler();\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n          getPipelineSpecs().then((pipelineSpecsResponse: any) => {\r\n            //console.log(\"pipelineSpecsResponse: \");\r\n            //console.log(pipelineSpecsResponse);\r\n            this.setState({\r\n              pipelineSpecsLoaded: true,\r\n              pipelineSpecs: pipelineSpecsResponse\r\n            })\r\n          });\r\n        },\r\n        () => {\r\n          this.handlePipelineLoadError(\r\n            `Error while loading pipeline with id ${urlParamFlowId}`\r\n          );\r\n        }\r\n      );\r\n  }\r\n  /**\r\n   * Cleans up all the intervals and promises.\r\n   */\r\n  componentWillUnmount() {\r\n    //console.log('FlowComponent... componentWillUnmount props: ', this.props);\r\n    let pathName:string = '';\r\n    if(this.props.history.location.pathname) {\r\n        pathName = this.props.history.location.pathname;\r\n        //console.log('page_type: ' + page_type + \", pathName: \" + pathName + \", pathName2: \" + pathName2);\r\n        //var pathName = pathName.substring(0, 19);\r\n        var projectId = '';\r\n        if(this.state.pipeline.project_id) {\r\n          projectId = this.state.pipeline.project_id;\r\n        }\r\n        if(pathName === '/dashboard/projects' || pathName === '/dashboard/profile') {\r\n          exitSessionManually(projectId).then((exitSessRes: any) => {\r\n            this.props.cleanSession();\r\n          }).catch((exitSessErr: any) => {\r\n            this.props.cleanSession();\r\n          });\r\n        }\r\n    }\r\n    this._isMounted = false;\r\n    if (this.state.mode === 'edit') {\r\n      //exitSession(this.state.pipeline.pipeline_id);\r\n    } else {\r\n      //exitInteractiveSession(this.state.pipeline.pipeline_id);\r\n      //exitSession(this.state.pipeline.pipeline_id);\r\n    }\r\n    if (this.pipelineCheckIntervalId !== -1) {\r\n      clearTimeout(this.pipelineCheckIntervalId);\r\n    }\r\n    if (this.pipelineLogIntervalId !== -1) {\r\n      clearTimeout(this.pipelineLogIntervalId);\r\n    }\r\n    if (this.saveFacetIntervalId !== -1) {\r\n      clearTimeout(this.saveFacetIntervalId);\r\n    }\r\n    if (this.hideAutoLayoutLoadingTimeout !== -1) {\r\n      clearTimeout(this.hideAutoLayoutLoadingTimeout);\r\n    }\r\n    if (this.pipelineLogPromise) {\r\n      this.pipelineLogPromise.cancel();\r\n    }\r\n    if (this.isPipelineRunningPromise) {\r\n      this.isPipelineRunningPromise.cancel();\r\n    }\r\n    this._commandManager.empty();\r\n    this.hideAutoLayoutLoading = false;\r\n  }\r\n  /**\r\n   * Refreshes the pipeline by getting the pipeline again from API.\r\n   * This is useful when pipeline is updated by python iframe.\r\n   */\r\n  refreshPipeline() {\r\n    getPipeline(this.state.pipeline.pipeline_id).then(\r\n      (pipelineData: any) => {\r\n        const { pipeline } = pipelineData;\r\n        //console.log(\"refreshed getpipeline: \");\r\n        //console.log(pipeline);\r\n        this.setState({\r\n          ...this.state,\r\n          pipeline: pipeline\r\n        });\r\n      },\r\n      (reason: any) => {\r\n        this.handlePipelineLoadError(reason);\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * Enters edit mode session. If there is an interative mode session pending enters interactive mode session too.\r\n   * If the API returns 501 calls the enterSession API again.\r\n   * @param pipelineId Pipeline id\r\n   */\r\n  /*enterSession(projectId: string) {\r\n    enterSession(projectId)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          //Session created successfully\r\n          this.showStatus('success', 'Edit mode session created successfully!');\r\n          this.setState({\r\n            sessionCreated: true\r\n          });\r\n          if (this.enterInteractiveModePending) {\r\n            this.enterInteractiveSession(projectId, 'interactive');\r\n          }\r\n        } else if (res.status === 501) {\r\n          //try creating a new session..\r\n          this.enterSession(this.state.projectId);\r\n        } else {\r\n          //Any other error.. Navigate to projects.\r\n          this.handleSessionError500(\r\n            'Something gone wrong while creating session. Redirecting to project.'\r\n          );\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (error.response.status === 501) {\r\n          this.enterSession(this.state.projectId);\r\n        } else {\r\n          this.handleSessionError500(\r\n            'Something gone wrong while creating session. Redirecting to project.'\r\n          );\r\n        }\r\n      });\r\n  }*/\r\n  /**\r\n   * Enters into interactive session\r\n   * @param pipelineId Pipeline id\r\n   * @param mode interactive | edit\r\n   */\r\n  enterInteractiveSession(pipelineId: string, mode: string) {\r\n    this.enterInteractiveModePending = false;\r\n    this.showStatus('success', 'Entered Interactive Mode!');\r\n    this.handleFlowDiagramModeChanged(mode);\r\n    // enterInteractiveSession(pipelineId)\r\n    //   .then((res: any) => {\r\n    //     if (res.status === 200) {\r\n    //       this.enterInteractiveModePending = false;\r\n    //       this.showStatus('success', 'Entered Interactive Mode!');\r\n    //       this.handleFlowDiagramModeChanged(mode);\r\n    //     } else {\r\n    //       this.handleInteractiveSessionError(res.status, pipelineId);\r\n    //     }\r\n    //   })\r\n    //   .catch((error: any) => {\r\n    //     this.handleInteractiveSessionError(error.response.status, pipelineId);\r\n    //   });\r\n  }\r\n  /**\r\n   * Browse Arrow API call\r\n   * @param pipeline_id\r\n   * @param sourceFacetId\r\n   * @param targetFacetId\r\n   */\r\n  // browseArrow(\r\n  // project_id:string,\r\n  /*browseArrow(\r\n    pipeline_id: string,\r\n    sourceFacetId: string,\r\n    targetFacetId: string\r\n  ) {\r\n    this.setState({\r\n      browseStatus: 'Checking session...'\r\n    });\r\n    enterSession(project_id).then(()=>{\r\n      browseArrow(project_id,pipeline_id, sourceFacetId, targetFacetId)\r\n      .then((res: any) => {\r\n        this.setState({\r\n          iFrameURL: res.url,\r\n          browseStatus: 'Session exists. Browsing Arrow...',\r\n          browseURLLoading: false,\r\n          isMetabase: true\r\n        });\r\n      })\r\n      .catch((status: any) => {\r\n        if (status === 501) {\r\n          this.setState({\r\n            browseStatus: 'Session expired. Creating session...'\r\n          });\r\n          this.recreateSessionAndBrowseArrow(\r\n            pipeline_id,\r\n            sourceFacetId,\r\n            targetFacetId\r\n          );\r\n        } else {\r\n          this.setState({\r\n            visualizationOpened: false,\r\n            browseURLLoading: false,\r\n            snackbarMessage: 'Error! Can not browse arrow.',\r\n            snackbarOpen: true,\r\n            snackbarVariant: 'error'\r\n          });\r\n        }\r\n      });\r\n    })\r\n  }*/\r\n\r\n  _browseLink(link: CustomLinkModel) {\r\n    //console.log(\"_browseLink - link: \");\r\n    //console.log(link);\r\n    /*this.setState({\r\n      vizInitiated: true,\r\n      vizLoading: true,\r\n      vizFacetInfo: {},\r\n      vizType: \"Link\",\r\n      mode: 'viz'\r\n    });*/\r\n    //this.handleMinimizeVizElement(\"Link\", link, false, \"\");\r\n\r\n    var pipelineId: string = \"\";\r\n    var projectId: string = \"\";\r\n    // eslint-disable-next-line\r\n    var sourceFacet: string = \"\";\r\n    var sourceFacetId: string = \"\";\r\n    // eslint-disable-next-line\r\n    var targetFacet: string = \"\";\r\n    var targetFacetId: string = \"\";\r\n    var linkFacetsInfo: any = {};\r\n    var linkVizID = \"\";\r\n    let browseLinkObjectNode: {} | undefined;\r\n    if (this.state.pipeline && link !== undefined) {\r\n      browseLinkObjectNode = link;\r\n      //console.log(\"_browseLink: \");\r\n      //console.log(this.state.pipeline);\r\n      pipelineId = this.state.pipeline.pipeline_id;\r\n      projectId = this.state.pipeline.project_id;\r\n      targetFacetId = browseLinkObjectNode[\"targetPort\"].parent.facet_id;\r\n      sourceFacetId = browseLinkObjectNode[\"sourcePort\"].parent.facet_id;\r\n      this.state.pipeline.definition.facets.map((facet: any) => {\r\n        //console.log(\"_browseLink facet: \");\r\n        //console.log(facet);\r\n        if (sourceFacetId === facet.facet_id) {\r\n          linkFacetsInfo[\"source\"] = facet;\r\n        }\r\n        if (targetFacetId === facet.facet_id) {\r\n          linkFacetsInfo[\"target\"] = facet;\r\n        }\r\n        linkVizID = \"link-\" + sourceFacetId + \"-\" + targetFacetId;\r\n        return linkVizID\r\n      });\r\n      this.setState({ vizFacetInfo: linkFacetsInfo });\r\n    }\r\n\r\n    /*if(this.state.pipeline){\r\n      //console.log(\"_browseLink: \");\r\n      //console.log(this.state.pipeline);\r\n      pipelineId = this.state.pipeline.pipeline_id;\r\n      projectId = this.state.pipeline.project_id;\r\n    }\r\n    var model = getDiagramModel();\r\n    if (model.getSelectedEntities().length > 0) {\r\n      const selectedModel: any = model.getSelectedEntities()[\r\n        model.getSelectedEntities().length - 1\r\n      ];\r\n      if (selectedModel.options.type === 'custom-link') {\r\n        var targetPort = selectedModel.getTargetPort();\r\n        var sourcePort = selectedModel.getSourcePort();\r\n        targetFacetId = (targetPort.getParent() as CustomNodeModel).facet_id;\r\n        sourceFacetId = (sourcePort.getParent() as CustomNodeModel).facet_id;\r\n        linkVizID = \"link-\" + sourceFacetId + \"-\" + targetFacetId;\r\n        //console.log(\"_browseLink - selectedModel: \");\r\n        //console.log(selectedModel);\r\n        if(this.state.pipeline){\r\n          this.state.pipeline.definition.facets.map((facet: any) => {\r\n              //console.log(\"_browseLink facet: \");\r\n              //console.log(facet);\r\n            if(sourceFacetId === facet.facet_id){\r\n              linkFacetsInfo[\"source\"] = facet;\r\n            }\r\n            if(targetFacetId === facet.facet_id){\r\n              linkFacetsInfo[\"target\"] = facet;\r\n            }\r\n          });\r\n          //console.log(\"linkFacetsInfo: \");\r\n          //console.log(linkFacetsInfo);\r\n          this.setState({ vizFacetInfo: linkFacetsInfo });\r\n        }\r\n      }\r\n    }*/\r\n\r\n    //console.log(\"pipelineId: \" + pipelineId + \", projectId: \" + projectId + \"sourceFacetId: \" + sourceFacetId + \", targetFacetId: \" + targetFacetId);\r\n\r\n    if (linkVizID !== \"\") {\r\n      this.handleMinimizeVizElement(\"Link\", link, false, \"\");\r\n      browseArrow(pipelineId, projectId, sourceFacetId, targetFacetId).then((browseArrowRes: any) => {\r\n        //console.log(\"browseArrowRes: \");\r\n        //console.log(browseArrowRes);\r\n        var browseArrowURL = METABASE_URL + \"\" + browseArrowRes.url;\r\n        this.setState({\r\n          iFrameURL: browseArrowURL,\r\n          iFrameLoadingDone: true,\r\n          vizFacetSourceId: sourceFacetId,\r\n          vizFacetDestinationId: targetFacetId\r\n        });\r\n        //this.getPipelineLogs(pipelineId);\r\n        //this.checkIsPipelineRunning(pipelineId);\r\n        this.handleMinimizeVizElement(\"Link\", link, false, browseArrowURL);\r\n      }).catch((browseArrowErr: any) => {\r\n        //console.log(\"browseArrowErr: \");\r\n        //console.log(browseArrowErr);\r\n        if (browseArrowErr === 501) {\r\n          enterSession(projectId).then((enterSessionRes: any) => {\r\n            browseArrow(pipelineId, projectId, sourceFacetId, targetFacetId).then((browseArrowRes: any) => {\r\n              //console.log(\"browseArrowRes: \");\r\n              //console.log(browseArrowRes);\r\n              var browseArrowURL = METABASE_URL + \"\" + browseArrowRes.url;\r\n              this.setState({\r\n                iFrameURL: browseArrowURL,\r\n                iFrameLoadingDone: true,\r\n                vizFacetSourceId: sourceFacetId,\r\n                vizFacetDestinationId: targetFacetId\r\n              });\r\n              //this.checkIsPipelineRunning(pipelineId);\r\n              //this.getPipelineLogs(pipelineId);\r\n              this.handleMinimizeVizElement(\"Link\", link, false, browseArrowURL);\r\n            }).catch((enterSessionErr: any) => {\r\n              this.setState({\r\n                snackbarMessage: 'Something went wrong. Please try again',\r\n                snackbarOpen: true,\r\n                snackbarVariant: 'error',\r\n                vizInitiated: false,\r\n                vizLoading: false,\r\n                vizFacetInfo: {},\r\n                vizType: \"\",\r\n                mode: 'edit'\r\n              });\r\n              //this.checkIsPipelineRunning(pipelineId);\r\n              //this.getPipelineLogs(pipelineId);\r\n              this.removeVizElement(this.state.vizElements[linkVizID]);\r\n            });\r\n          }).catch((enterSessionErr: any) => {\r\n            //console.log(\"ERR enterSession res: \");\r\n            //console.log(errenterSession);\r\n            this.setState({\r\n              snackbarMessage: 'Something went wrong. Please try again',\r\n              snackbarOpen: true,\r\n              snackbarVariant: 'error',\r\n              vizInitiated: false,\r\n              vizLoading: false,\r\n              vizFacetInfo: {},\r\n              vizType: \"\",\r\n              mode: 'edit'\r\n            });\r\n            //this.checkIsPipelineRunning(pipelineId);\r\n            //this.getPipelineLogs(pipelineId);\r\n          });\r\n        } else {\r\n          browseArrow(pipelineId, projectId, sourceFacetId, targetFacetId).then((browseArrowRes: any) => {\r\n            //console.log(\"browseArrowRes: \");\r\n            //console.log(browseArrowRes);\r\n            var browseArrowURL = METABASE_URL + \"\" + browseArrowRes.url;\r\n            this.setState({\r\n              iFrameURL: browseArrowURL,\r\n              iFrameLoadingDone: true,\r\n              vizFacetSourceId: sourceFacetId,\r\n              vizFacetDestinationId: targetFacetId\r\n            });\r\n            //this.getPipelineLogs(pipelineId);\r\n            //this.checkIsPipelineRunning(pipelineId);\r\n            this.handleMinimizeVizElement(\"Link\", link, false, browseArrowURL);\r\n          }).catch((enterSessionErr: any) => {\r\n            this.setState({\r\n              snackbarMessage: 'Something went wrong. Please try again',\r\n              snackbarOpen: true,\r\n              snackbarVariant: 'error',\r\n              vizInitiated: false,\r\n              vizLoading: false,\r\n              vizFacetInfo: {},\r\n              vizType: \"\",\r\n              mode: 'edit'\r\n            });\r\n            //this.checkIsPipelineRunning(pipelineId);\r\n            //this.getPipelineLogs(pipelineId);\r\n            this.removeVizElement(this.state.vizElements[linkVizID]);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        snackbarMessage: 'Something went wrong. Please try again',\r\n        snackbarOpen: true,\r\n        snackbarVariant: 'error',\r\n        vizInitiated: false,\r\n        vizLoading: false,\r\n        vizFacetInfo: {},\r\n        vizType: \"\",\r\n        mode: 'edit'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recreates the interactive session if session expires while browsing arrow.\r\n   * @param pipelineId\r\n   * @param sourceFacetId\r\n   * @param targetFacetId\r\n   */\r\n\r\n  recreateSessionAndBrowseArrow(\r\n    projectId: string,\r\n    sourceFacetId: string,\r\n    targetFacetId: string\r\n  ) {\r\n    /*enterSession(projectId).then((res: any) => {\r\n      if (res.status === 200) {\r\n        enterInteractiveSession(projectId).then((res: any) => {\r\n          if (res.status === 200) {\r\n            this.setState({\r\n              browseStatus: 'Session created. Browsing Arrow...'\r\n            });\r\n            this.browseArrow(projectId, sourceFacetId, targetFacetId);\r\n          }\r\n        });\r\n      }\r\n    });*/\r\n  }\r\n  /**\r\n   * Browse facet API call\r\n   * @param pipeline_id id of the pipeline.\r\n   * @param facet_id id of the facet that user clicked.\r\n   */\r\n  /*browseFacet(pipeline_id: string, facet_id: string) {\r\n    this.setState({\r\n      browseStatus: 'Checking session...'\r\n    });\r\n    browseFacet(pipeline_id, facet_id)\r\n      .then((res: any) => {\r\n        this.setState({\r\n          iFrameURL: res.url,\r\n          browseStatus: 'Session exists. Browsing Facet...',\r\n          browseURLLoading: false,\r\n          isMetabase: false\r\n        });\r\n      })\r\n      .catch((status: any) => {\r\n        if (status === 501) {\r\n          this.setState({\r\n            browseStatus: 'Session expired. Creating session...'\r\n          });\r\n          this.recreateSessionAndBrowseFacet(pipeline_id, facet_id);\r\n        } else {\r\n          this.setState({\r\n            visualizationOpened: false,\r\n            browseURLLoading: false,\r\n            snackbarMessage: 'Error! Can not browse facet.',\r\n            snackbarOpen: true,\r\n            snackbarVariant: 'error'\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   *  Browse dashboard Api call\r\n   * @param projectId id of project\r\n   * @param dashboardId id of dashboard\r\n   */\r\n  browseDashboard(dashboard_id: string, project_id: string) {\r\n    browseDashboard(project_id, dashboard_id)\r\n      .then((res: any) => {\r\n        this.setState({\r\n          iFrameURL: res.url,\r\n          iFrameLoadingDone: true,\r\n          isMetabase: true\r\n        });\r\n      })\r\n      .catch((status: any) => {\r\n        if (status === 501) {\r\n          enterSession(project_id).then(() => {\r\n            browseDashboard(project_id, dashboard_id)\r\n              .then((res: any) => {\r\n                this.setState({\r\n                  iFrameURL: res.url,\r\n                  iFrameLoadingDone: true,\r\n                  isMetabase: true\r\n                });\r\n              }).catch(() => {\r\n                this.setState({\r\n                  visualizationOpened: false,\r\n                  browseURLLoading: false,\r\n                  snackbarMessage: 'Error! Can not browse Dashboard.',\r\n                  snackbarOpen: true,\r\n                  snackbarVariant: 'error'\r\n                });\r\n              })\r\n          }).catch(() => {\r\n            /*this.handleSessionError500(\r\n              'Something gone wrong while entering interactive mode. Redirecting to project.'\r\n            );*/\r\n            this.setState({\r\n              visualizationOpened: false,\r\n              snackbarMessage: 'Error! Can not browse Dashboard.',\r\n              snackbarOpen: true,\r\n              snackbarVariant: 'error',\r\n              vizInitiated: false,\r\n              iFrameLoadingDone: false,\r\n              browseURLLoading: false,\r\n              iFrameURL: \"\",\r\n              mode: 'edit'\r\n            });\r\n          })\r\n        } else {\r\n          this.setState({\r\n            visualizationOpened: false,\r\n            snackbarMessage: 'Error! Can not browse Dashboard.',\r\n            snackbarOpen: true,\r\n            snackbarVariant: 'error',\r\n            vizInitiated: false,\r\n            iFrameLoadingDone: false,\r\n            browseURLLoading: false,\r\n            iFrameURL: \"\",\r\n            mode: 'edit'\r\n          });\r\n          /*this.handleSessionError500(\r\n            'Something gone wrong while entering interactive mode. Redirecting to project.'\r\n          );*/\r\n        }\r\n\r\n      });\r\n  }\r\n  // }*/\r\n  /**\r\n   * Recreates session if the session expired when browsing facet.\r\n   * @param pipeline_id\r\n   * @param facet_id\r\n   */\r\n  recreateSessionAndBrowseFacet(projectId: string, facet_id: string) {\r\n    /*enterSession(projectId).then((res: any) => {\r\n      if (res.status === 200) {\r\n        enterInteractiveSession(projectId).then((res: any) => {\r\n          if (res.status === 200) {\r\n            this.setState({\r\n              browseStatus: 'Session created. Browsing Facet...'\r\n            });\r\n            this.browseFacet(projectId, facet_id);\r\n          }\r\n        });\r\n      }\r\n    });*/\r\n  }\r\n  /*handleInteractiveSessionError(status: number, projectId: string) {\r\n    if (status === 501) {\r\n      //session expired. Try creating session again and then when session is created call enterInteractiveModeSession.\r\n      //set interactive mode pending is true. Check this variable on enter session success.\r\n      this.enterInteractiveModePending = true;\r\n      //this.enterSession(projectId);\r\n    } else {\r\n      this.handleSessionError500(\r\n        'Something gone wrong while entering interactive mode. Redirecting to project.'\r\n      );\r\n    }\r\n  }*/\r\n  /**\r\n   * Redirect to project when 500 error happens when entering interactive mode.\r\n   * @param message\r\n   */\r\n  handleSessionError500(message: string) {\r\n    this.showStatus('error', message);\r\n    setTimeout(() => {\r\n      this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n    }, 3000);\r\n  }\r\n  handlePipelineLoadError(message: string) {\r\n    this.showStatus('error', message);\r\n    setTimeout(() => {\r\n      this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n    }, 3000);\r\n  }\r\n  /*exitInteractiveSession(pipelineId: string, mode: string) {\r\n    exitInteractiveSession(pipelineId)\r\n      .then((res: any) => {\r\n        //console.log(res.status);\r\n        if (res.status === 200 || res.status === 500) {\r\n          //this.props.load\r\n          this.handleFlowDiagramModeChanged(mode);\r\n          this.refreshPipeline();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.handleFlowDiagramModeChanged(mode);\r\n        this.refreshPipeline();\r\n      });\r\n  }*/\r\n  toggleCreateSessionDialog(open: boolean) {\r\n    this.setState({\r\n      createSessionDialogOpened: open\r\n    });\r\n  }\r\n  showStatus(variant: any, message: string) {\r\n    this.setState({\r\n      snackbarOpen: true,\r\n      snackbarMessage: message,\r\n      snackbarVariant: variant\r\n    });\r\n  }\r\n  _selectionChangedEventHandler() {\r\n    if (this.state.mode === 'interactive') {\r\n      var model = getDiagramModel();\r\n      if (model.getSelectedEntities().length > 0) {\r\n        const selectedModel: any = model.getSelectedEntities()[\r\n          model.getSelectedEntities().length - 1\r\n        ];\r\n        if (selectedModel.options.type === 'custom-link') {\r\n          var targetPort = selectedModel.getTargetPort();\r\n          var sourcePort = selectedModel.getSourcePort();\r\n          // eslint-disable-next-line\r\n          var targetFacetId = (targetPort.getParent() as CustomNodeModel)\r\n            .facet_id;\r\n          // eslint-disable-next-line\r\n          var sourceFacetId = (sourcePort.getParent() as CustomNodeModel)\r\n            .facet_id;\r\n          //this._visualize(event.node as CustomNodeModel);\r\n          /*this.browseArrow(\r\n            this.state.pipeline.pipeline_id,\r\n            sourceFacetId,\r\n            targetFacetId\r\n          );*/\r\n        } else if (selectedModel.options.type === 'custom-node') {\r\n          if (selectedModel.options.facet_type === 'PYTHON_SCRIPT' || selectedModel.options.facet_type === 'API') {\r\n            selectedModel.options.selected = false;\r\n            //this._visualize();\r\n            /*this.browseFacet(\r\n              this.state.pipeline.pipeline_id,\r\n              selectedModel.facet_id\r\n            );*/\r\n          }\r\n          else if (selectedModel.options.facet_type === 'DASH') {\r\n            selectedModel.options.selected = false;\r\n          }\r\n          selectedModel.setSelected(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * gets the attrubute types for link based on the facet that it is linked to and opens the\r\n   * Update model dialog\r\n   * @param link\r\n   */\r\n  _editLink(link: CustomLinkModel) {\r\n    //console.log(link);\r\n    var pipeline = this.state.pipeline;\r\n    var targetPort = link.getTargetPort();\r\n    var sourcePort = link.getSourcePort();\r\n    if (targetPort && sourcePort) {\r\n      var targetFacetId = (targetPort.getParent() as CustomNodeModel).facet_id;\r\n      var sourceFacetId = (sourcePort.getParent() as CustomNodeModel).facet_id;\r\n      var sourceFacet = pipeline.definition.facets.filter(\r\n        (facet: any) => facet.facet_id === sourceFacetId\r\n      )[0];\r\n      var arrowArgumentTypes1: any = this.getComponentArrowArguments(\r\n        sourceFacet.chain_group,\r\n        sourceFacet.facet_group,\r\n        sourceFacet.facet_type,\r\n        'source'\r\n      );\r\n      //Add the title to display for source facet argument types.\r\n      if (Object.keys(arrowArgumentTypes1).length > 0) {\r\n        arrowArgumentTypes1 = {\r\n          title1: {\r\n            argument_type: 'title',\r\n            title1: `${getFriendlyLabel(\r\n              sourceFacet.chain_group\r\n            )}/${getFriendlyLabel(sourceFacet.facet_group)}`,\r\n            title2: `${getFriendlyLabel(sourceFacet.facet_type)}`\r\n          },\r\n          ...arrowArgumentTypes1\r\n        };\r\n      }\r\n\r\n      var targetFacet = pipeline.definition.facets.filter(\r\n        (facet: any) => facet.facet_id === targetFacetId\r\n      )[0];\r\n      var arrowArgumentTypes2 = this.getComponentArrowArguments(\r\n        targetFacet.chain_group,\r\n        targetFacet.facet_group,\r\n        targetFacet.facet_type,\r\n        'target'\r\n      );\r\n      //Add the title for destination facet type\r\n      if (Object.keys(arrowArgumentTypes2).length > 0) {\r\n        arrowArgumentTypes2 = {\r\n          title2: {\r\n            argument_type: 'title',\r\n            title1: `${getFriendlyLabel(targetFacet.chain_group)}/${\r\n              targetFacet.facet_group\r\n              }`,\r\n            title2: `${getFriendlyLabel(targetFacet.facet_type)}`\r\n          },\r\n          ...arrowArgumentTypes2\r\n        };\r\n      }\r\n\r\n      var argumentTypes = { ...arrowArgumentTypes1, ...arrowArgumentTypes2 };\r\n\r\n      // if (Object.keys(arrowArgumentTypes1).length > 0) {\r\n      //   argumentTypes.push({\r\n      //     title: `${sourceFacet.chain_group}/${sourceFacet.facet_group}/${sourceFacet.facet_type}`,\r\n      //     arguments: arrowArgumentTypes1\r\n      //   });\r\n      // }\r\n\r\n      // if (Object.keys(arrowArgumentTypes2).length > 0) {\r\n      //   argumentTypes.push({\r\n      //     title: `${targetFacet.chain_group}/${targetFacet.facet_group}/${targetFacet.facet_type}`,\r\n      //     arguments: arrowArgumentTypes2\r\n      //   });\r\n      // }\r\n\r\n      var arrow = pipeline.definition.arrows.filter(\r\n        (arrow: any) =>\r\n          arrow.source === sourceFacetId && arrow.destination === targetFacetId\r\n      )[0];\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          selectedArrow: arrow,\r\n          selectedArrowArgumentTypes: argumentTypes\r\n        },\r\n        () => {\r\n          this.toggleUpdateArrowModal(true);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utility function to get the facet based on the chain group, facet group and facet type.\r\n   * @param chainGroup\r\n   * @param facetGroup\r\n   * @param facetType\r\n   */\r\n  getComponent(chainGroup: any, facetGroup: any, facetType: any) {\r\n    //console.log(this.props.componentList);\r\n    /*console.log(chainGroup\r\n      ,facetGroup\r\n      ,facetType);*/\r\n    //console.log(\"chainGroup: \" + chainGroup + \", facetGroup: \" + facetGroup + \", facetType: \" + facetType);\r\n    //console.log(\"this.props.componentList: \");\r\n    //var matchedComponent = [this.props.componentList[chainGroup][facetGroup][facetType]]\r\n    if (chainGroup !== \"\" && facetGroup !== \"\" && facetType !== \"\") {\r\n      var matchedComponent = this.props.componentList[chainGroup][facetGroup][facetType];\r\n      //console.log(this.props.componentList);\r\n      if(facetGroup === 'CUSTOM' && (facetType === 'PYTHON_SCRIPT' || facetType === 'API')){\r\n        matchedComponent.facet_arguments['libraries'] = {\r\n          name: \"libraries\",\r\n          is_list: true,\r\n          is_required: false,\r\n          have_options: false,\r\n          argument_type: \"TEXT\"\r\n        }\r\n      }\r\n      if (Object.keys(matchedComponent).length > 0) {\r\n        return matchedComponent;\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /**\r\n   * Returns arrow arguments of a facet\r\n   * @param chainGroup chain group of the facet\r\n   * @param facetGroup facet group of the facet\r\n   * @param facetType facet type of the facet\r\n   * @param sourceOrTarget source | target\r\n   */\r\n  getComponentArrowArguments(\r\n    chainGroup: string,\r\n    facetGroup: string,\r\n    facetType: string,\r\n    sourceOrTarget: string\r\n  ) {\r\n    //console.log(\"chainGroup: \" + chainGroup + \", facetGroup: \" + facetGroup + \", facetType: \" + facetType);\r\n    //console.log(\"this.props.componentList: \");\r\n    //console.log(this.props.componentList);\r\n    /*Object.keys(this.props.componentList).map((component: any) => {\r\n      console.log(\"arr component: \");\r\n      console.log(component);\r\n    })*/\r\n    /*var matchedComponent = this.props.componentList.filter(\r\n      (component: any) =>\r\n        component.chain_group === chainGroup &&\r\n        component.facet_group === facetGroup &&\r\n        component.facet_type === facetType\r\n    );*/\r\n    var matchedComponent = this.props.componentList[chainGroup][facetGroup][facetType];\r\n    //console.log(Object.keys(matchedComponent).length);\r\n    //console.log(matchedComponent);\r\n    //console.log(matchedComponent.out_arrow_arguments);\r\n    //console.log(matchedComponent.in_arrow_arguments);\r\n    if (Object.keys(matchedComponent).length > 0) {\r\n      if (sourceOrTarget === 'source') {\r\n        return matchedComponent.out_arrow_arguments || {};\r\n      } else {\r\n        return matchedComponent.in_arrow_arguments || {};\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //Delete link from the react diagram and update the pipelin definition.\r\n\r\n  _deleteLink(link: CustomLinkModel) {\r\n    link.isConnectedToANode = false;\r\n    deleteLink(link);\r\n    var pipeline = this.state.pipeline;\r\n    var sourcePort = link.getSourcePort();\r\n    var targetPort = link.getTargetPort();\r\n    if (!sourcePort || !targetPort) {\r\n      return;\r\n    }\r\n    var sourceFacetId = (sourcePort.getParent() as CustomNodeModel).facet_id;\r\n    var targetFacetId = (targetPort.getParent() as CustomNodeModel).facet_id;\r\n\r\n    var arrows = pipeline.definition.arrows.filter((arrow: any) => {\r\n      return (\r\n        arrow.source !== sourceFacetId || arrow.destination !== targetFacetId\r\n      );\r\n    });\r\n\r\n    var matchedArrows = pipeline.definition.arrows.filter(\r\n      (arrow: any) =>\r\n        arrow.source === sourceFacetId && arrow.destination === targetFacetId\r\n    );\r\n\r\n    var arrowArguments = {};\r\n    if (matchedArrows.length > 0) {\r\n      arrowArguments = matchedArrows[0].arguments;\r\n    }\r\n\r\n    var sourceFacet: any = pipeline.definition.facets.find(\r\n      facet => facet.facet_id === sourceFacetId\r\n    );\r\n    var targetFacet: any = pipeline.definition.facets.find(\r\n      facet => facet.facet_id === targetFacetId\r\n    );\r\n    sourceFacet.children = sourceFacet.children.filter(\r\n      (child: any) => child !== targetFacetId\r\n    );\r\n    targetFacet.parents = targetFacet.parents.filter(\r\n      (parent: any) => parent !== sourceFacetId\r\n    );\r\n    var otherFacets = pipeline.definition.facets.filter(\r\n      facet =>\r\n        facet.facet_id !== sourceFacetId && facet.facet_id !== targetFacetId\r\n    );\r\n    var facets = [...otherFacets, sourceFacet, targetFacet];\r\n    pipeline.definition.facets = facets;\r\n    pipeline.definition.arrows = arrows;\r\n    pipeline.modifiedAt = getCurrentDate();\r\n    this.setState({\r\n      ...this.state,\r\n      pipeline: pipeline\r\n    });\r\n    //console.log(\"$%$1\");\r\n\r\n    this.props.updateFlowData(pipeline);\r\n    return arrowArguments;\r\n  }\r\n\r\n  /**\r\n   * Add arrow command to add arrow between a source port and a target port.\r\n   * @param sourcePort\r\n   * @param targetPort\r\n   * @param link\r\n   */\r\n\r\n  addArrowCommand(sourcePort: any, targetPort: any, link: CustomLinkModel) {\r\n    var command: Command = new Command(\r\n      (arrowArguments: any) => {\r\n        this.addArrow(sourcePort, targetPort, arrowArguments);\r\n        link.isConnectedToANode = true;\r\n        link.clearPort(sourcePort);\r\n        link.clearPort(targetPort);\r\n        link.setSourcePort(sourcePort);\r\n        link.setTargetPort(targetPort);\r\n        var model = getDiagramModel();\r\n        model.addLink(link);\r\n      },\r\n      () => {\r\n        var arrowArguments = this._deleteLink(link);\r\n        return arrowArguments;\r\n      }\r\n    );\r\n    this._commandManager.addCommand(command);\r\n  }\r\n\r\n  /**\r\n   * delete link command.\r\n   * @param link\r\n   */\r\n\r\n  deleteLinkCommand(link: CustomLinkModel) {\r\n    var command: Command = new Command(\r\n      () => {\r\n        var arrowArguments = this._deleteLink(link);\r\n        return arrowArguments;\r\n      },\r\n      (arrowArguments: any) => {\r\n        this.addArrow(\r\n          link.getSourcePort(),\r\n          link.getTargetPort(),\r\n          arrowArguments\r\n        );\r\n        //some bug in react diagrams. Had to set the targetport again when adding a removed link again.\r\n        const sourcePort: CustomPortModel = link.getSourcePort() as CustomPortModel;\r\n        const targetPort: CustomPortModel = link.getTargetPort() as CustomPortModel;\r\n\r\n        link.isConnectedToANode = true;\r\n\r\n        link.clearPort(sourcePort);\r\n        link.clearPort(targetPort);\r\n\r\n        link.setSourcePort(sourcePort);\r\n        link.setTargetPort(targetPort);\r\n        var model = getDiagramModel();\r\n        model.addLink(link);\r\n        //console.log(link, 'adding link');\r\n      }\r\n    );\r\n    this._commandManager.addCommand(command);\r\n  }\r\n  /**\r\n   * Adds arrow to the pipeline definition\r\n   * @param sourcePort\r\n   * @param targetPort\r\n   * @param existingArguments\r\n   */\r\n  addArrow(sourcePort: any, targetPort: any, existingArguments?: any) {\r\n    if (sourcePort && targetPort) {\r\n      var pipeline = this.state.pipeline;\r\n      var parent = sourcePort.parent.facet_id;\r\n      var child = targetPort.parent.facet_id;\r\n      var facets = pipeline.definition.facets;\r\n      for (var i = 0; i < facets.length; i++) {\r\n        var facet = facets[i] as any;\r\n        if (facet.facet_id === parent) {\r\n          facet.children.push(child);\r\n        }\r\n        if (facet.facet_id === child) {\r\n          facet.parents.push(parent);\r\n        }\r\n      }\r\n      pipeline.definition.facets = facets;\r\n      //this.fetchSuggestions()\r\n\r\n      var arrow: any = {\r\n        source: parent,\r\n        destination: child,\r\n        arguments: existingArguments ? existingArguments : {}\r\n      };\r\n      if (pipeline.definition.arrows) {\r\n        pipeline.definition.arrows.push(arrow);\r\n      } else {\r\n        pipeline.definition.arrows = [arrow];\r\n      }\r\n      pipeline.modifiedAt = getCurrentDate();\r\n      this.setState({\r\n        ...this.state,\r\n        pipeline: pipeline\r\n      });\r\n      //console.log(\"$%$2\");\r\n\r\n      this.props.updateFlowData(pipeline);\r\n    }\r\n  }\r\n\r\n  toggleUpdateNodeModal(open: boolean) {\r\n    this.setState({ editNodeModalOpened: open });\r\n  }\r\n\r\n  toggleUpdateArrowModal(open: boolean) {\r\n    this.setState({ editArrowModalOpened: open });\r\n  }\r\n\r\n  onRunClick = () => {\r\n    if (this.validateDiagram()) {\r\n      this.props.sendAppData(this.state.pipeline.pipeline_id);\r\n      this.setState({ pipelineRunning: true });\r\n      this.checkIsPipelineRunning(this.state.pipeline.pipeline_id);\r\n      /*var a:any = this.state.pipeline.definition.facets.filter((a)=>{ return a.facet_type === \"DASH\"; })\r\n      if(a.length>0){\r\n        this.setState({\r\n          editRunFlowRunning:true\r\n        })\r\n        const promise = new Promise<object>((resolve:any,reject:any)=>{\r\n          var check:any = []\r\n          var test:any = []\r\n          a.map((d:any,i:number)=>{\r\n            test.push(true)\r\n            if(a[i]['arguments']['dashboard_id'] !== '' && a[i]['arguments']['dashboard_id'] !='*'){\r\n              editDashboard(a[i]['arguments']['dataset_id'],\r\n              a[i]['arguments']['dashboard_name'],\r\n              a[i]['arguments']['project_id'],\r\n              a[i]['arguments']['dashboard_id'],\r\n              a[i]['arguments']['dashboard_name']+\".py\").then((data:any)=>{\r\n                check.push(true)\r\n                \r\n                if(a.length === check.length){\r\n                  resolve(check)\r\n                  this.setState({\r\n                    editRunFlowRunning:false\r\n                  })\r\n                }\r\n              }).catch(()=>{\r\n                reject(a)\r\n              })\r\n            }else{\r\n              var findDashboardId = this.props.data.dashboards.filter((d:any)=>{return d.name === a[i]['arguments']['dashboard_name']})\r\n              if(findDashboardId.length>0){\r\n                editDashboard(a[i]['arguments']['dataset_id'],\r\n                a[i]['arguments']['dashboard_name'],\r\n                a[i]['arguments']['project_id'],\r\n                findDashboardId[0].dashboard_id,\r\n                a[i]['arguments']['dashboard_name']+\".py\").then((data:any)=>{\r\n                  check.push(true)\r\n                  if(a.length === check.length){\r\n                    resolve(check)\r\n                  }\r\n                }).catch(()=>{\r\n                  reject(a)\r\n                })\r\n              }else{\r\n                reject(a)\r\n              }\r\n              \r\n            }\r\n          })\r\n        })\r\n        promise.then((a)=>{\r\n          if (this.validateDiagram()) {\r\n            this.props.sendAppData(this.state.pipeline.pipeline_id);\r\n            this.setState({ pipelineRunning: true });\r\n            this.checkIsPipelineRunning(this.state.pipeline.pipeline_id);\r\n          }\r\n        }).catch((a)=>{\r\n\r\n        })\r\n        \r\n      }else{\r\n        if (this.validateDiagram()) {\r\n          this.props.sendAppData(this.state.pipeline.pipeline_id);\r\n          this.setState({ pipelineRunning: true });\r\n          this.checkIsPipelineRunning(this.state.pipeline.pipeline_id);\r\n        }\r\n      }*/\r\n    }\r\n  };\r\n  /* checkPipelineDatasets(){\r\n      console.log(\"RUN FLOW: \");\r\n      console.log(this.state.pipeline.definition.facets);\r\n\r\n      var datasetExportExists = false;\r\n      var datasetExportName = \"\";\r\n      var facetsArr = this.state.pipeline.definition.facets;\r\n      var facetIDToUpdate: number = 0;\r\n\r\n      facetsArr.map((facet: any) => {\r\n        //console.log(\"FACET: \");\r\n        //console.log(facet);\r\n        if(facet.chain_group === 'OUTPUT' && \r\n          facet.facet_group === 'DATASET' && \r\n          facet.facet_type === 'EXPORTED' && \r\n          Object.keys(facet.arguments).length > 0\r\n        ){\r\n          if(facet.arguments['dataset_name']){\r\n            datasetExportName = facet.arguments['dataset_name'];\r\n\r\n            if(Object.keys(this.props.data.datasets).length > 0){\r\n              this.props.data.datasets.map((datasetData: any) => {\r\n                if(datasetData.project_id === this.state.projectId &&\r\n                  datasetData.name === datasetExportName\r\n                ){\r\n                  //console.log(\"datasetExportName: \" + datasetExportName);\r\n                  datasetExportExists = true;\r\n                  facetIDToUpdate = facet.facet_id;\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      if(datasetExportExists !== false){\r\n        var facet = this.state.pipeline.definition.facets.filter(\r\n          facet => facet.facet_id === facetIDToUpdate\r\n        )[0];\r\n        console.log(\"FACET ID: \");\r\n        console.log(facet.facet_id);\r\n        console.log(facet);\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            selectedNode: facet\r\n          },\r\n          () => {\r\n            this.toggleUpdateNodeModal(true);\r\n          }\r\n        );\r\n        //this.showEditor(nodeToUpdate);\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n  } */\r\n\r\n  checkIsPipelineRunning = (pipelineId: any) => {\r\n    this.isPipelineRunningPromise = makeCancelable(\r\n      isPipelineRunning(pipelineId)\r\n    );\r\n    this.isPipelineRunningPromise.promise\r\n      .then((result: any) => {\r\n        let pipelineRunning: boolean = result.data === 'true';\r\n        if (!pipelineRunning) {\r\n          //this.setState({ pipelineRunning: pipelineRunning });\r\n          this.currentRetryForPipelineLog = 0;\r\n          this.getPipelineLogs(this.state.pipeline.pipeline_id, true);\r\n          setTimeout(() => {\r\n            /**\r\n             * Get the datasets and dashboards again after the pipeline run completes. Since the pipeline run may have\r\n             * created new datasets or dashboards.\r\n             */\r\n            this.props.getDatasets(this.state.projectId);\r\n            this.props.getDashboards(this.state.projectId);\r\n          }, 2000);\r\n          /* this.pipelineLogIntervalId = setTimeout(() => {\r\n            this.getPipelineLogs(this.state.pipeline.pipeline_id);\r\n          }, 2000); */\r\n        } else {\r\n          this.pipelineCheckIntervalId = setTimeout(() => {\r\n            this.checkIsPipelineRunning(pipelineId);\r\n          }, 2000);\r\n        }\r\n      })\r\n      .catch((err: any) => {\r\n        this.setState({ pipelineRunning: false });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Get pipeline logs\r\n   * @param pipelineId\r\n   * @param justRan If this is being called after running the pipeline or when the page is loaded.\r\n   */\r\n  getPipelineLogs(pipelineId: any, justRan?: boolean) {\r\n    this.setState({\r\n      loadingLogs: true\r\n    });\r\n    this.pipelineLogPromise = makeCancelable(getPipelineLog(pipelineId));\r\n    this.pipelineLogPromise.promise\r\n      .then((result: any) => {\r\n        var pipelineLog = result.data.pipeline_log;\r\n        if (\r\n          (pipelineLog.length !== 0 &&\r\n            Object.keys(this.state.pipelineLogs).length ===\r\n            Object.keys(pipelineLog).length &&\r\n            this.currentRetryForPipelineLog < this.maxRetriesForPipelineLog) ||\r\n          (justRan &&\r\n            pipelineLog.length === 0 &&\r\n            this.currentRetryForPipelineLog < this.maxRetriesForPipelineLog)\r\n        ) {\r\n          this.currentRetryForPipelineLog++;\r\n          this.pipelineLogIntervalId = setTimeout(() => {\r\n            this.getPipelineLogs(pipelineId, justRan);\r\n          }, 2000);\r\n        } else {\r\n          this.currentRetryForPipelineLog = 0;\r\n          this.setState({\r\n            pipelineRunning: false,\r\n            loadingLogs: false,\r\n            pipelineLogs: pipelineLog\r\n          });\r\n        }\r\n        //console.log(\"2 - old arr length: \" + Object.keys(this.state.pipelineLogs).length + \", new arr length: \" + Object.keys(pipelineLog).length);\r\n      })\r\n      .catch\r\n      //err => console.log(err)\r\n      ();\r\n  }\r\n\r\n  onScheduleClick() {\r\n    //this.setState({ scheduleOpened: true });\r\n    this.props.history.push(`/dashboard/flow-schedules/${this.state.pipeline.pipeline_id}`);\r\n  }\r\n\r\n  _vizLoader(loaderInitiated: boolean, iFrameLoaded: boolean, clearLoader: boolean) {\r\n    return (\r\n      <React.Fragment>\r\n        {loaderInitiated &&\r\n          <IkiLoader\r\n            loadingTxt=\"Preparing Preview...\"\r\n            fadeOut={iFrameLoaded}\r\n            placement={this.state.mode}\r\n          />\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  handleAutoSaveFacet = (pipeline_id: string, project_id: string, selectedNodeId: string, selectedFacetParentId: string) => {\r\n    //console.log(\"autosave loop saveFacetIntervalId: \" + this.saveFacetIntervalId);\r\n    this.saveFacetIntervalId = setTimeout(() => {\r\n      saveFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId).then((saveFacetRes: any) => {\r\n        if (this.saveFacetIntervalId > 0) {\r\n          this.handleAutoSaveFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId);\r\n        }\r\n      }).catch((err: any) => {\r\n        saveFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId).then((saveFacetRes: any) => {\r\n          if (this.saveFacetIntervalId > 0) {\r\n            this.handleAutoSaveFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId);\r\n          }\r\n        });\r\n      });\r\n    }, 20000);\r\n  }\r\n\r\n  _visualize(node: CustomNodeModel) {\r\n    /*this.setState({\r\n      //vizInitiated: true,\r\n      //vizLoading: true,\r\n      //vizFacetInfo: node,\r\n      //vizType: \"Facet\",\r\n      mode: 'viz'\r\n    });*/\r\n    var selectedMinNodeId: string = \"facet-\" + node.facet_id;\r\n    var alreadyMinimized = false;\r\n    var alreadyMinVizEle: any = {};\r\n    Object.keys(this.state.vizElements).map((vizEleKey: any, index: number) => {\r\n      if (vizEleKey === selectedMinNodeId) {\r\n        alreadyMinimized = true;\r\n        alreadyMinVizEle = this.state.vizElements[vizEleKey];\r\n      }\r\n      return ''\r\n    });\r\n    if (!alreadyMinimized) {\r\n      this.handleMinimizeVizElement(\"Facet\", node, false, \"\");\r\n      var selectedNodeId: string = node.facet_id;\r\n      var pipeline_id: string = \"\";\r\n      var project_id: string = \"\";\r\n      var selectedFacet: any = [];\r\n      var selectedFacetParentId: string = \"\";\r\n      // eslint-disable-next-line\r\n      var selectedFacetChildId: string = \"\";\r\n      if (this.state.pipeline) {\r\n        pipeline_id = this.state.pipeline.pipeline_id;\r\n        project_id = this.state.pipeline.project_id;\r\n        selectedFacet = this.state.pipeline.definition.facets.filter(\r\n          (facet: any) => facet.facet_id === selectedNodeId\r\n        );\r\n        selectedFacetParentId = selectedFacet[0].parents[0];\r\n        selectedFacetChildId = selectedFacet[0].children[0];\r\n        if(node.facet_type==='PYTHON_SCRIPT' || node.facet_type==='API'){\r\n          browseFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId).then((browseFacetres: any) => {\r\n            this.setState({\r\n              isDashView: false,\r\n              iFrameURL: browseFacetres.url,\r\n              iFrameLoadingDone: true,\r\n              vizFacetId: selectedNodeId,\r\n              vizFacetParentId: selectedFacetParentId\r\n            });\r\n            this.handleAutoSaveFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId);\r\n            //this.getPipelineLogs(pipeline_id, true);\r\n            //this.checkIsPipelineRunning(pipeline_id);\r\n            this.handleMinimizeVizElement(\"Facet\", node, false, browseFacetres.url);\r\n          }).catch((browseFaceterr: any) => {\r\n            if (browseFaceterr === 501) {\r\n              enterSession(project_id).then((resenterSession: any) => {\r\n                browseFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId).then((browseFacetres: any) => {\r\n                  this.setState({\r\n                    iFrameURL: browseFacetres.url,\r\n                    iFrameLoadingDone: true,\r\n                    vizFacetId: selectedNodeId,\r\n                    vizFacetParentId: selectedFacetParentId\r\n                  });\r\n                  this.handleAutoSaveFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId);\r\n                  //this.getPipelineLogs(pipeline_id, true);\r\n                  //this.checkIsPipelineRunning(pipeline_id);\r\n                  this.handleMinimizeVizElement(\"Facet\", node, false, browseFacetres.url);\r\n                }).catch((errenterSession: any) => {\r\n                  this.setState({\r\n                    snackbarMessage: 'Something went wrong. Please try again',\r\n                    snackbarOpen: true,\r\n                    snackbarVariant: 'error',\r\n                    vizInitiated: false,\r\n                    vizLoading: false,\r\n                    vizFacetInfo: {},\r\n                    vizType: \"\",\r\n                    mode: 'edit',\r\n                    iFrameLoadingDone: false,\r\n                    browseURLLoading: false,\r\n                  });\r\n                  //this.checkIsPipelineRunning(pipeline_id);\r\n                  //this.getPipelineLogs(pipeline_id, true);\r\n                  this.removeVizElement(this.state.vizElements[selectedMinNodeId])\r\n                });\r\n              }).catch((errenterSession: any) => {\r\n                this.setState({\r\n                  snackbarMessage: 'Something went wrong. Please try again',\r\n                  snackbarOpen: true,\r\n                  snackbarVariant: 'error',\r\n                  vizInitiated: false,\r\n                  vizLoading: false,\r\n                  vizFacetInfo: {},\r\n                  vizType: \"\",\r\n                  mode: 'edit'\r\n                });\r\n                //this.checkIsPipelineRunning(pipeline_id);\r\n                //this.getPipelineLogs(pipeline_id, true);\r\n              });\r\n            } else {\r\n              browseFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId).then((browseFacetres: any) => {\r\n                this.setState({\r\n                  isDashView: false,\r\n                  iFrameURL: browseFacetres.url,\r\n                  iFrameLoadingDone: true,\r\n                  vizFacetId: selectedNodeId,\r\n                  vizFacetParentId: selectedFacetParentId\r\n                });\r\n                this.handleAutoSaveFacet(pipeline_id, project_id, selectedNodeId, selectedFacetParentId);\r\n                //this.getPipelineLogs(pipeline_id, true);\r\n                //this.checkIsPipelineRunning(pipeline_id);\r\n                this.handleMinimizeVizElement(\"Facet\", node, false, browseFacetres.url);\r\n              }).catch((browseFaceterr: any) => {\r\n                this.setState({\r\n                  snackbarMessage: 'Something went wrong. Please try again',\r\n                  snackbarOpen: true,\r\n                  snackbarVariant: 'error',\r\n                  vizInitiated: false,\r\n                  vizLoading: false,\r\n                  vizFacetInfo: {},\r\n                  vizType: \"\",\r\n                  mode: 'edit',\r\n                  iFrameLoadingDone: false,\r\n                  browseURLLoading: false,\r\n                });\r\n                //this.checkIsPipelineRunning(pipeline_id);\r\n                //this.getPipelineLogs(pipeline_id, true);\r\n                this.removeVizElement(this.state.vizElements[selectedMinNodeId])\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          //this.setState({ isDashView: true })\r\n          var _facet: any = this.state.pipeline.definition.facets.filter((_fac: any) => {\r\n            return _fac.facet_id === node.facet_id\r\n          })\r\n          /*this.browseDashboard(\r\n            _facet[0].arguments.dashboard_id,\r\n            _facet[0].arguments.project_id\r\n          );*/\r\n          browseDashboard(_facet[0].arguments.project_id, _facet[0].arguments.dashboard_id).then((res: any) => {\r\n            this.setState({\r\n              iFrameURL: res.url,\r\n              iFrameLoadingDone: true,\r\n              isMetabase: true\r\n            });\r\n            this.handleMinimizeVizElement(\"Facet\", node, true, res.url);\r\n          }).catch((status: any) => {\r\n            console.log(\"browseDash error: \");\r\n            console.log(status);\r\n            if (status === 501) {\r\n              enterSession(_facet[0].arguments.project_id).then(() => {\r\n                browseDashboard(_facet[0].arguments.project_id, _facet[0].arguments.dashboard_id).then((res: any) => {\r\n                  this.setState({\r\n                    iFrameURL: res.url,\r\n                    iFrameLoadingDone: true,\r\n                    isMetabase: true\r\n                  });\r\n                  this.handleMinimizeVizElement(\"Facet\", node, true, res.url);\r\n                }).catch(() => {\r\n                  this.setState({\r\n                    visualizationOpened: false,\r\n                    browseURLLoading: false,\r\n                    snackbarMessage: 'Error! Can not browse Dashboard.',\r\n                    snackbarOpen: true,\r\n                    snackbarVariant: 'error'\r\n                  });\r\n                })\r\n              }).catch(() => {\r\n                this.setState({\r\n                  visualizationOpened: false,\r\n                  snackbarMessage: 'Error! Can not browse Dashboard.',\r\n                  snackbarOpen: true,\r\n                  snackbarVariant: 'error',\r\n                  vizInitiated: false,\r\n                  iFrameLoadingDone: false,\r\n                  browseURLLoading: false,\r\n                  iFrameURL: \"\",\r\n                  mode: 'edit'\r\n                });\r\n              })\r\n            } else {\r\n              browseDashboard(_facet[0].arguments.project_id, _facet[0].arguments.dashboard_id).then((res: any) => {\r\n                this.setState({\r\n                  iFrameURL: res.url,\r\n                  iFrameLoadingDone: true,\r\n                  isMetabase: true\r\n                });\r\n                this.handleMinimizeVizElement(\"Facet\", node, true, res.url);\r\n              }).catch((status: any) => {\r\n                this.setState({\r\n                  visualizationOpened: false,\r\n                  snackbarMessage: 'Error! Can not browse Dashboard.',\r\n                  snackbarOpen: true,\r\n                  snackbarVariant: 'error',\r\n                  vizInitiated: false,\r\n                  iFrameLoadingDone: false,\r\n                  browseURLLoading: false,\r\n                  iFrameURL: \"\",\r\n                  mode: 'edit'\r\n                });\r\n                //this.closeVisulaize();\r\n                this.removeVizElement(this.state.vizElements[selectedMinNodeId])\r\n              });\r\n            }\r\n\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      this._visualizeMinimizedTab(alreadyMinVizEle);\r\n    }\r\n  }\r\n\r\n  _peekArrow(node: CustomLinkModel) {\r\n    //console.log(\"_peekArrow: \");\r\n    //console.log(node);\r\n\r\n    this.peekLinkObject = node;\r\n    let peekLinkObjectNode: {} | undefined;\r\n\r\n    this.setState({\r\n      mode: 'peek',\r\n      peekInitiated: true,\r\n      peekLoading: true\r\n    });\r\n\r\n    var pipelineId: string = \"\";\r\n    var projectId: string = \"\";\r\n    // eslint-disable-next-line\r\n    var sourceFacet: string = \"\";\r\n    var sourceFacetId: string = \"\";\r\n    // eslint-disable-next-line\r\n    var targetFacet: string = \"\";\r\n    var targetFacetId: string = \"\";\r\n    var linkFacetsInfo: any = {};\r\n    if (this.state.pipeline && node !== undefined) {\r\n      peekLinkObjectNode = node;\r\n      //console.log(\"_browseLink: \");\r\n      //console.log(this.state.pipeline);\r\n      pipelineId = this.state.pipeline.pipeline_id;\r\n      projectId = this.state.pipeline.project_id;\r\n      targetFacetId = peekLinkObjectNode[\"targetPort\"].parent.facet_id;\r\n      sourceFacetId = peekLinkObjectNode[\"sourcePort\"].parent.facet_id;\r\n      this.state.pipeline.definition.facets.map((facet: any) => {\r\n        //console.log(\"_browseLink facet: \");\r\n        //console.log(facet);\r\n        if (sourceFacetId === facet.facet_id) {\r\n          linkFacetsInfo[\"source\"] = facet;\r\n        }\r\n        if (targetFacetId === facet.facet_id) {\r\n          linkFacetsInfo[\"target\"] = facet;\r\n        }\r\n        return ''\r\n      });\r\n      this.setState({ vizFacetInfo: linkFacetsInfo });\r\n    }\r\n\r\n    //console.log(\"pipelineId: \" + pipelineId + \", projectId: \" + projectId + \"sourceFacetId: \" + sourceFacetId + \", targetFacetId: \" + targetFacetId);\r\n    if (pipelineId !== \"\" && projectId !== \"\" && sourceFacetId !== \"\" && targetFacetId !== \"\") {\r\n\r\n      peekArrow(pipelineId, projectId, sourceFacetId, targetFacetId).then((peekArrowRes: any) => {\r\n        //console.log(\"peekArrowRes res: \");\r\n        //console.log(peekArrowRes);\r\n        this.peekLinkObject.handleButtonsStateDisabled();\r\n        this.setState({\r\n          peekContent: peekArrowRes,\r\n          peekLoading: false\r\n        });\r\n        //this.getPipelineLogs(pipelineId);\r\n        //this.checkIsPipelineRunning(pipelineId);\r\n      }).catch((peekArrowErr: any) => {\r\n        //console.log(\"ERR peekArrowErr res: \");\r\n        //console.log(peekArrowErr);\r\n        if (peekArrowErr === 501) {\r\n          enterSession(projectId).then((enterSessionRes: any) => {\r\n            peekArrow(pipelineId, projectId, sourceFacetId, targetFacetId).then((peekArrowRes: any) => {\r\n              //console.log(\"peekArrowRes res: \");\r\n              //console.log(peekArrowRes);\r\n              this.peekLinkObject.handleButtonsStateDisabled();\r\n              this.setState({\r\n                peekContent: peekArrowRes,\r\n                peekLoading: false\r\n              });\r\n              //this.getPipelineLogs(pipelineId);\r\n            }).catch((peekArrowErr: any) => {\r\n              this.peekLinkObject.handleButtonsStateDisabled();\r\n              this.setState({\r\n                snackbarMessage: 'Something went wrong. Please try again',\r\n                snackbarOpen: true,\r\n                snackbarVariant: 'error',\r\n                mode: 'edit',\r\n                peekContent: {},\r\n                peekInitiated: false,\r\n                peekLoading: false\r\n              });\r\n              //this.checkIsPipelineRunning(pipelineId);\r\n              //this.getPipelineLogs(pipelineId);\r\n            });\r\n          }).catch((enterSessionErr: any) => {\r\n            //console.log(\"ERR enterSession res: \");\r\n            //console.log(errenterSession);\r\n            this.peekLinkObject.handleButtonsStateDisabled();\r\n            this.setState({\r\n              snackbarMessage: 'Something went wrong. Please try again',\r\n              snackbarOpen: true,\r\n              snackbarVariant: 'error',\r\n              mode: 'edit',\r\n              peekContent: {},\r\n              peekInitiated: false,\r\n              peekLoading: false\r\n            });\r\n            //this.checkIsPipelineRunning(pipelineId);\r\n            //this.getPipelineLogs(pipelineId);\r\n          });\r\n        } else {\r\n          peekArrow(pipelineId, projectId, sourceFacetId, targetFacetId).then((peekArrowRes: any) => {\r\n            //console.log(\"peekArrowRes res: \");\r\n            //console.log(peekArrowRes);\r\n            this.peekLinkObject.handleButtonsStateDisabled();\r\n            this.setState({\r\n              peekContent: peekArrowRes,\r\n              peekLoading: false\r\n            });\r\n            //this.getPipelineLogs(pipelineId);\r\n          }).catch((peekArrowErr: any) => {\r\n            this.peekLinkObject.handleButtonsStateDisabled();\r\n            this.setState({\r\n              snackbarMessage: 'Something went wrong. Please try again',\r\n              snackbarOpen: true,\r\n              snackbarVariant: 'error',\r\n              mode: 'edit',\r\n              peekContent: {},\r\n              peekInitiated: false,\r\n              peekLoading: false\r\n            });\r\n            //this.checkIsPipelineRunning(pipelineId);\r\n            //this.getPipelineLogs(pipelineId);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        snackbarMessage: 'Something went wrong. Please try again',\r\n        snackbarOpen: true,\r\n        snackbarVariant: 'error',\r\n        mode: 'edit',\r\n        peekContent: {},\r\n        peekInitiated: false,\r\n        peekLoading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  closeVisulaize = () => {\r\n    //console.log(\"this.state.pipeline BEFORE save-facet: \");\r\n    //console.log(this.state.pipeline);\r\n    /*if (this.saveFacetIntervalId !== -1) {\r\n      clearTimeout(this.saveFacetIntervalId);\r\n    }*/\r\n    clearTimeout(this.saveFacetIntervalId);\r\n    if (this.state.vizType === \"Facet\") {\r\n      if(this.state.vizFacetInfo['facet_type']===\"PYTHON_SCRIPT\" || this.state.vizFacetInfo['facet_type']===\"API\"){\r\n        finishBrowseFacet(this.state.pipeline.pipeline_id, this.state.pipeline.project_id, this.state.vizFacetId, this.state.vizFacetParentId).then((finishBrowseFacetRes: any) => {\r\n          this.setState({\r\n            vizInitiated: false,\r\n            vizLoading: false,\r\n            vizFacetInfo: {},\r\n            vizType: \"\",\r\n            vizFacetId: \"\",\r\n            vizFacetParentId: \"\",\r\n            mode: 'edit',\r\n            iFrameURL: \"\",\r\n            iFrameLoadingDone: false,\r\n            iFrameContentLoaded: false,\r\n            clearIframeLoader: false\r\n          });\r\n          getPipeline(this.state.pipeline.pipeline_id).then((pipelineData: any) => {\r\n            pipelineData.pipeline.pipeline_id = this.state.pipeline.pipeline_id;\r\n            const { pipeline } = pipelineData;\r\n            //console.log(\"refreshed getpipeline: \");\r\n            //console.log(pipeline);\r\n            this.setState({\r\n              ...this.state,\r\n              pipeline: pipeline\r\n            });\r\n          });\r\n        }).catch((finishBrowseArrowErr: any) => {\r\n          this.setState({\r\n            vizInitiated: false,\r\n            vizLoading: false,\r\n            vizFacetInfo: {},\r\n            vizType: \"\",\r\n            vizFacetId: \"\",\r\n            vizFacetParentId: \"\",\r\n            mode: 'edit',\r\n            iFrameURL: \"\",\r\n            iFrameLoadingDone: false,\r\n            iFrameContentLoaded: false,\r\n            clearIframeLoader: false\r\n          });\r\n          getPipeline(this.state.pipeline.pipeline_id).then((pipelineData: any) => {\r\n            pipelineData.pipeline.pipeline_id = this.state.pipeline.pipeline_id;\r\n            const { pipeline } = pipelineData;\r\n            //console.log(\"refreshed getpipeline: \");\r\n            //console.log(pipeline);\r\n            this.setState({\r\n              ...this.state,\r\n              pipeline: pipeline\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        var _facet: any = this.state.pipeline.definition.facets.filter((_fac: any) => {\r\n          return _fac.facet_id === this.state.vizFacetInfo['facet_id']\r\n        })\r\n\r\n        finishBrowseDashboard(_facet[0].arguments.dashboard_id, this.state.pipeline.project_id).then((data) => {\r\n        }).catch((err) => {\r\n        })\r\n        this.setState({\r\n          vizInitiated: false,\r\n          vizLoading: false,\r\n          vizFacetInfo: {},\r\n          vizType: \"\",\r\n          isDashView: false,\r\n          vizFacetId: \"\",\r\n          vizFacetParentId: \"\",\r\n          mode: 'edit',\r\n          iFrameURL: \"\",\r\n          iFrameLoadingDone: false,\r\n          iFrameContentLoaded: false,\r\n          clearIframeLoader: false\r\n        });\r\n      }\r\n    } else {\r\n      finishBrowseArrow(this.state.pipeline.pipeline_id, this.state.pipeline.project_id, this.state.vizFacetSourceId, this.state.vizFacetDestinationId).then((finishBrowseArrowRes: any) => {\r\n\r\n      }).catch((finishBrowseArrowErr: any) => {\r\n\r\n      });\r\n      this.setState({\r\n        vizInitiated: false,\r\n        vizLoading: false,\r\n        vizFacetInfo: {},\r\n        vizType: \"\",\r\n        vizFacetSourceId: \"\",\r\n        vizFacetDestinationId: \"\",\r\n        mode: 'edit',\r\n        iFrameURL: \"\",\r\n        iFrameLoadingDone: false,\r\n        iFrameContentLoaded: false,\r\n        clearIframeLoader: false\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Deletes the facet from the react diagram and then updartes the pipeline.\r\n   * @param node Node to remove\r\n   */\r\n\r\n  _deleteNode(node: CustomNodeModel) {\r\n    //deletes Node from react diagram\r\n    deleteNode(node);\r\n    //deletes node from state\r\n    var pipeline = this.state.pipeline;\r\n    var facets = pipeline.definition.facets;\r\n    //remove from\r\n    for (var i = 0; i < facets.length; i++) {\r\n      facets[i].parents = facets[i].parents.filter(\r\n        (parent: any) => parent !== node.facet_id\r\n      );\r\n      facets[i].children = facets[i].children.filter(\r\n        (child: any) => child !== node.facet_id\r\n      );\r\n    }\r\n    pipeline.definition.facets = facets.filter(\r\n      (facet: any) => facet.facet_id !== node.facet_id\r\n    );\r\n    var arrows = pipeline.definition.arrows;\r\n    if (arrows) {\r\n      pipeline.definition.arrows = arrows.filter(\r\n        arrow =>\r\n          arrow.source !== node.facet_id && arrow.destination !== node.facet_id\r\n      );\r\n    }\r\n    pipeline.modifiedAt = getCurrentDate();\r\n    this.setState({\r\n      ...this.state,\r\n      pipeline: pipeline\r\n    });\r\n    //console.log(\"$%$3\");\r\n\r\n    this.props.updateFlowData(pipeline);\r\n  }\r\n\r\n  /**\r\n   * Updates arrow attributes\r\n   * @param attributes\r\n   */\r\n\r\n  updateArrowAttributes(attributes: any) {\r\n    if (this.state.selectedArrow) {\r\n      var selectedArrow: any = this.state.selectedArrow as any;\r\n      selectedArrow.arguments = attributes;\r\n      var pipeline: Pipeline = this.state.pipeline as Pipeline;\r\n      var otherArrows = pipeline.definition.arrows.filter((arrow: any) => {\r\n        return (\r\n          arrow.source !== selectedArrow.source ||\r\n          arrow.destination !== selectedArrow.destination\r\n        );\r\n      });\r\n      pipeline.definition.arrows = [...otherArrows, selectedArrow];\r\n      pipeline.modifiedAt = getCurrentDate();\r\n      this.setState({\r\n        ...this.state,\r\n        pipeline: pipeline\r\n      });\r\n      //console.log(\"$%$4\");\r\n\r\n      this.props.updateFlowData(pipeline);\r\n      this.closeUpdateArrowAttributes();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update facet attributes.\r\n   * @param attributes\r\n   */\r\n\r\n  updateNodeAttributes(attributes: any, isAutoSave?: boolean) {\r\n    //console.log(\"Update facet - attributes.: \");\r\n    //console.log(attributes);\r\n    //console.log(this.state);\r\n    if (this.state.selectedNode !== null) {\r\n      //console.log(\"Update facet - this.state.selectedNode.: \");\r\n      //console.log(this.state.selectedNode);\r\n      var pipeline: Pipeline = this.state.pipeline as Pipeline;\r\n      var selectedNode = this.state.selectedNode as any;\r\n      var diagramModel: DiagramModel = getDiagramModel();\r\n      var node = diagramModel\r\n        .getModels()\r\n        .filter((model: any) => model.facet_id === selectedNode.facet_id)[0];\r\n      this.setValidityOfNode(node as CustomNodeModel, true, []);\r\n      this.setUpdatedNodeName(node as CustomNodeModel, this.state.selectedNodeName);\r\n      //node.options.name = this.state.selectedNodeName;\r\n      //console.log(\"CustomNodeModel on updateNodeAttributes: \");\r\n      //console.log(node.name);\r\n      selectedNode.arguments = attributes;\r\n      //selectedNode.name = \"\";\r\n      //console.log(\"this.state.selectedNodeName in updateNodeAttributes: \");\r\n      //console.log(this.state.selectedNodeName);\r\n      selectedNode.name = this.state.selectedNodeName;\r\n      var otherFacets = pipeline.definition.facets.filter(\r\n        facet => facet.facet_id !== selectedNode.facet_id\r\n      );\r\n      //console.log(\"selectedNode.name: \");\r\n      //console.log(selectedNode.name);\r\n      pipeline.definition.facets = [...otherFacets, selectedNode];\r\n      pipeline.modifiedAt = getCurrentDate();\r\n      this.setState({\r\n        ...this.state,\r\n        pipeline: pipeline\r\n      });\r\n      //console.log('PIPELINE - updateNodeAttributes: ');\r\n      //console.log(pipeline);\r\n      //console.log(\"$%$5\");\r\n\r\n      this.props.updateFlowData(pipeline);\r\n      if (!isAutoSave) {\r\n        this.closeUpdateNodeAttributes();\r\n      }\r\n    }\r\n  }\r\n  closeUpdateNodeAttributes() {\r\n    this.toggleUpdateNodeModal(false);\r\n    this.setState({\r\n      selectedNode: null\r\n    });\r\n  }\r\n\r\n  closeUpdateArrowAttributes() {\r\n    this.toggleUpdateArrowModal(false);\r\n    this.setState({\r\n      selectedArrow: null,\r\n      selectedArrowArgumentTypes: null\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validate flow diagram by checking if all conditions are met for all the facets.\r\n   * The conditions are defined in facet obect of the facet doc.\r\n   */\r\n\r\n  validateDiagram() {\r\n    if (\r\n      this.state.pipeline.definition.facets &&\r\n      this.state.pipeline.definition.facets.length > 0\r\n    ) {\r\n      //this.checkOutputDatasetOverwrite();\r\n      return this.state.pipeline.definition.facets\r\n        .map(this.validateFacet.bind(this))\r\n        .reduce((prevVal, currVal) => prevVal && currVal, true);\r\n    } else {\r\n      this.setState({\r\n        snackbarMessage: 'Error! Pipeline is empty',\r\n        snackbarOpen: true,\r\n        snackbarVariant: 'error'\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the facet is valid. The conditions are defined on facer object of the facer doc.\r\n   * Conditions are required_number_of_parents, required_number_of_children,  is_in_arrow_arguments_required, is_out_arrow_arguments_required, required_parent_facets\r\n   * @param facet \r\n   */\r\n\r\n  validateFacet(facet: any) {\r\n    //console.log(\"validateFacet: \");\r\n    //console.log(facet);\r\n    var i: number = 0, j: number = 0\r\n    var errorMessages = [];\r\n    const { chain_group, facet_group, facet_type, facet_id } = facet;\r\n    var diagramModel: DiagramModel = getDiagramModel();\r\n    var node: CustomNodeModel = diagramModel\r\n      .getModels()\r\n      .filter(\r\n        (model: any) => model.facet_id === facet_id\r\n      )[0] as CustomNodeModel;\r\n\r\n    var component = this.getComponent(chain_group, facet_group, facet_type);\r\n    //console.log(\"validateFacet - component: \", component);\r\n    var argumentTypes = component.facet_arguments;\r\n    var inArrowArgumentTypes = component.in_arrow_arguments;\r\n    var outArrowArgumentTypes = component.out_arrow_arguments;\r\n    var requiredParentFacets = component.facet_requirement.min_parent_count;\r\n    var valid: boolean = true;\r\n    //console.log(inArrowArgumentTypes, outArrowArgumentTypes, requiredParentFacets);\r\n\r\n    //Check if the number of children and number of parents condition satisfied.\r\n\r\n    var requiredNumberOfParents = component.facet_requirement.min_parent_count;\r\n    var requiredNumberOfChildren = component.facet_requirement.min_child_count;\r\n    //console.log(requiredNumberOfParents,requiredNumberOfChildren);\r\n\r\n    if (!isNaN(requiredNumberOfParents)) {\r\n      requiredNumberOfParents = parseInt(requiredNumberOfParents);\r\n      if (facet.parents.length < requiredNumberOfParents) {\r\n        valid = false;\r\n        errorMessages.push(\r\n          `Must have at least ${requiredNumberOfParents} parent facets.`\r\n        );\r\n      }\r\n    } else {\r\n      requiredNumberOfParents = parseInt(requiredNumberOfParents);\r\n      if (facet.parents.length !== requiredNumberOfParents) {\r\n        valid = false;\r\n        errorMessages.push(\r\n          `Must have ${requiredNumberOfParents} parent ${\r\n          requiredNumberOfParents === 1 ? 'facet.' : 'facets.'\r\n          }`\r\n        );\r\n      }\r\n    }\r\n\r\n    if (!isNaN(requiredNumberOfChildren)) {\r\n      requiredNumberOfChildren = parseInt(\r\n        requiredNumberOfChildren\r\n      );\r\n      if (facet.children.length < requiredNumberOfChildren) {\r\n        valid = false;\r\n        errorMessages.push(\r\n          `Must have at least ${requiredNumberOfChildren} child facets.`\r\n        );\r\n      }\r\n    } else {\r\n      requiredNumberOfChildren = parseInt(requiredNumberOfChildren);\r\n      if (facet.children.length !== requiredNumberOfChildren) {\r\n        valid = false;\r\n        errorMessages.push(\r\n          `Must have ${requiredNumberOfChildren} child ${\r\n          requiredNumberOfChildren === 1 ? 'facet.' : 'facets.'\r\n          }`\r\n        );\r\n      }\r\n    }\r\n\r\n    //Check if arrow arguments requirement satisfied.\r\n\r\n    //console.log(\"inArrowArgumentTypes: \", inArrowArgumentTypes);\r\n    var outArrows = this.state.pipeline.definition.arrows.filter(\r\n      (arrow: any) => arrow.source === facet_id\r\n    );\r\n    var inArrows = this.state.pipeline.definition.arrows.filter(\r\n      (arrow: any) => arrow.destination === facet_id\r\n    );\r\n    //console.log(\"inArrows: \", inArrows);\r\n\r\n    if (inArrowArgumentTypes.length > 0) {\r\n      for (i = 0; i < inArrows.length; i++) {\r\n        var allArgumentsPresent = false;\r\n        var inArrowArguments = inArrows[i].arguments;\r\n        //console.log(\"inArrowArguments: \", inArrowArguments);\r\n        //var inArrowArgumentKeys = Object.keys(inArrowArgumentTypes);\r\n        // eslint-disable-next-line\r\n        Object.keys(inArrowArguments).map((inArrowArgKey: any) => {\r\n          //console.log(\"inArrowArg: \", inArrowArgKey, inArrowArguments[inArrowArgKey]);\r\n          var inArrowValue = inArrowArguments[inArrowArgKey];\r\n          var matchedArgumentDefinition = inArrowArgumentTypes.filter(\r\n            (inArgDefinition: any) => inArgDefinition.name === inArrowArgKey\r\n          );\r\n          //console.log(\"matchedArgumentDefinition: \", matchedArgumentDefinition);\r\n          matchedArgumentDefinition[0].options.map((argOption: any) => {\r\n            //console.log(\"argOption: \", argOption, \"inArrowValue: \" + inArrowValue);\r\n            if (inArrowValue === argOption) {\r\n              allArgumentsPresent = true;\r\n            }\r\n            return ''\r\n          })\r\n          return ''\r\n        })\r\n        if (!allArgumentsPresent) {\r\n          //console.log(\"allArgumentsPresent: \" + allArgumentsPresent);\r\n          errorMessages.push('Missing attributes for in arrow.');\r\n        }\r\n      }\r\n    }\r\n\r\n    if (outArrowArgumentTypes.length > 0) {\r\n      for (i = 0; i < outArrows.length; i++) {\r\n        // eslint-disable-next-line\r\n        var allArgumentsPresent = false;\r\n        var outArrowArguments = outArrows[i].arguments;\r\n        //console.log(\"outArrowArguments: \", outArrowArguments);\r\n        //var inArrowArgumentKeys = Object.keys(outArrowArgumentTypes);\r\n        // eslint-disable-next-line\r\n        Object.keys(outArrowArguments).map((outArrowArgKey: any) => {\r\n          //console.log(\"outArrowArg: \", outArrowArgKey, outArrowArguments[outArrowArgKey]);\r\n          var outArrowValue = outArrowArguments[outArrowArgKey] ? outArrowArguments[outArrowArgKey] : '';\r\n          /*var matchedArgumentDefinition = outArrowArgumentTypes.filter(\r\n            (outArgDefinition: any) => outArgDefinition.name === outArrowArgKey\r\n          );*/\r\n          //console.log(\"matchedArgumentDefinition: \", matchedArgumentDefinition);\r\n          // eslint-disable-next-line\r\n          /*matchedArgumentDefinition.map((argOption: any) => {\r\n            //console.log(\"argOption: \", argOption, \"outArrowValue: \" + outArrowValue);\r\n            if (outArrowValue === argOption) {\r\n              allArgumentsPresent = true;\r\n            }\r\n          })*/\r\n          if(outArrowValue !== '') {\r\n            allArgumentsPresent = true;\r\n          }\r\n        })\r\n        if (!allArgumentsPresent) {\r\n          //console.log(\"allArgumentsPresent: \" + allArgumentsPresent);\r\n          errorMessages.push('Missing attributes for out arrow.');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Check if the required parents condition satisfied.\r\n\r\n    if (requiredParentFacets.length > 0) {\r\n      if (inArrows.length > 0) {\r\n        for (j = 0; j < requiredParentFacets.length; j++) {\r\n          var requiredParentFacet = requiredParentFacets[j];\r\n          var requiredParentFound = false;\r\n          for (i = 0; i < inArrows.length; i++) {\r\n            var arrow = inArrows[i];\r\n            var parentFacet = this.state.pipeline.definition.facets.filter(\r\n              // eslint-disable-next-line\r\n              (facet: any) => arrow.source === facet.facet_id\r\n            )[0];\r\n            if (\r\n              parentFacet.chain_group === requiredParentFacet.chain_group &&\r\n              parentFacet.facet_group === requiredParentFacet.facet_group &&\r\n              parentFacet.facet_type &&\r\n              requiredParentFacet.facet_type\r\n            ) {\r\n              requiredParentFound = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!requiredParentFound) {\r\n            valid = false;\r\n            errorMessages.push(\r\n              `Missing required parent ${requiredParentFacet.chain_group}/${requiredParentFacet.facet_group}/${requiredParentFacet.facet_type}.`\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        for (var k = 0; k < requiredParentFacets.length; k++) {\r\n          valid = false;\r\n          errorMessages.push(\r\n            `Missing required parent ${requiredParentFacets[k].chain_group}/${requiredParentFacets[k].facet_group}/${requiredParentFacets[k].facet_type}.`\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    //check if all the required arguments present.\r\n\r\n    var keys = Object.keys(argumentTypes);\r\n    for (i = 0; i < keys.length; i++) {\r\n      var key: string = keys[i];\r\n      var argumentType = argumentTypes[key];\r\n      if (argumentType.is_required) {\r\n        //For dataset id of export facet, dataset_id will be empty string when overwrite is false\r\n        if ((facet.arguments[key] === undefined || facet.arguments[key] === '') && key !== \"dataset_id\") {\r\n          errorMessages.push(\r\n            `Missing value for attribute ${getFriendlyLabel(key)}.`\r\n          );\r\n          valid = false;\r\n          //break;\r\n        }\r\n      }\r\n    }\r\n    if (errorMessages.length > 0 && valid === true) {\r\n      valid = false;\r\n    }\r\n    return this.setValidityOfNode(\r\n      node as CustomNodeModel,\r\n      valid,\r\n      errorMessages\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set if a node in flow diagram is valid. This function is used to update the UI of facet when it is valid or invalid.\r\n   * @param node Node to set the validity of\r\n   * @param valid boolean\r\n   * @param errorMessages Array of error messages \r\n   */\r\n\r\n  setValidityOfNode(\r\n    node: CustomNodeModel,\r\n    valid: boolean,\r\n    errorMessages: string[]\r\n  ) {\r\n    node.valid = valid;\r\n    node.errorMessages = errorMessages;\r\n    node.fireEvent({ node: node }, 'validatedNode');\r\n    //console.log(\"setValidityOfNode - node: \", node);\r\n    return valid;\r\n  }\r\n\r\n  setUpdatedNodeName(\r\n    node: CustomNodeModel,\r\n    facetName: string\r\n  ) {\r\n    //console.log(\"flow-component - setUpdatedNodeName: \" + facetName);\r\n    node.name = facetName;\r\n    node.fireEvent({ node: node }, 'updatedFacetName');\r\n    return facetName;\r\n  }\r\n\r\n  showEditor(node: CustomNodeModel) {\r\n    var facetId = node.facet_id;\r\n    var facet = this.state.pipeline.definition.facets.filter(\r\n      facet => facet.facet_id === facetId\r\n    )[0];\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        selectedNode: facet\r\n      },\r\n      () => {\r\n        this.toggleUpdateNodeModal(true);\r\n      }\r\n    );\r\n  }\r\n\r\n  onUpdateModel(attributes: any) {\r\n    //console.log(\"onUpdateModel - attributes: \");\r\n    //console.log(attributes);\r\n    //console.log(\"$%$6\");\r\n\r\n    this.props.updateFlowData({\r\n      attributes: attributes,\r\n      nodeId: this.selectedNodeId\r\n    });\r\n    this.toggleUpdateNodeModal(false);\r\n  }\r\n\r\n  /**\r\n   * Updates flow name and project name\r\n   * @param flowName \r\n   * @param projectName \r\n   */\r\n\r\n  updateTitle(flowName: string, projectName: string) {\r\n    var pipeline = this.state.pipeline;\r\n    pipeline.name = flowName;\r\n    pipeline.modifiedAt = getCurrentDate();\r\n\r\n    if (this.state.projectName !== projectName) {\r\n      this.props.renameProject(this.state.projectId, projectName);\r\n    }\r\n    //console.log(\"$%$7\");\r\n\r\n    this.props.updateFlowData(pipeline);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      pipeline: pipeline,\r\n      projectName: projectName\r\n    });\r\n  }\r\n\r\n  updatePipelineArgument(argName: string, argValue: any) {\r\n    var pipeline = this.state.pipeline;\r\n    pipeline.definition[\"arguments\"] = { [argName]: argValue };\r\n    //console.log(\"updatePipelineArgument: \");\r\n    //console.log(pipeline);\r\n    this.props.updateFlowData(pipeline);\r\n    this.setState({\r\n      ...this.state,\r\n      pipeline: pipeline\r\n    });\r\n  }\r\n\r\n  backClickHandler() {\r\n    this.props.history.push('/dashboard');\r\n  }\r\n\r\n  /**\r\n   * Updates the schedule object of the pipeline.\r\n   * @param scheduleObject \r\n   */\r\n\r\n  updateSchedule(scheduleObject: any) {\r\n    var pipeline = this.state.pipeline;\r\n    pipeline.schedule = scheduleObject;\r\n    pipeline.modifiedAt = getCurrentDate();\r\n    //console.log(\"$%$8\");\r\n\r\n    this.props.updateFlowData(pipeline);\r\n    this.setState({\r\n      scheduleOpened: false\r\n    });\r\n  }\r\n\r\n  closeScheduleDialog() {\r\n    this.setState({\r\n      scheduleOpened: false\r\n    });\r\n  }\r\n\r\n  getUpdateArrowComponent() {\r\n    if (this.state.selectedArrow) {\r\n      var arrowArguments = (this.state.selectedArrow as any).arguments;\r\n      //console.log(\"arrowArguments: \");\r\n      //console.log(arrowArguments);\r\n      return (\r\n        <UpdateModel\r\n          open={this.state.editArrowModalOpened}\r\n          attributes={arrowArguments}\r\n          attributesTypes={this.state.selectedArrowArgumentTypes}\r\n          facetTypeTitle=\"\"\r\n          chainGroupTitle=\"\"\r\n          facetGroupTitle=\"\"\r\n          title=\"\"\r\n          facetName=\"\"\r\n          onSubmit={(attributes: any) => {\r\n            this.updateArrowAttributes(attributes);\r\n          }}\r\n          onCancel={() => {\r\n            this.closeUpdateArrowAttributes();\r\n          }}\r\n          createNewDatasetDialogIsOpened={\r\n            this.state.createNewDatasetDialogOpened\r\n          }\r\n          newDatasetName={this.state.newlyAddedDatasetName}\r\n          facetDocumentation={this.getComponent(\"\", \"\", \"\")}\r\n          handleNamingFacet={() => this.handleSubmitFacetName(\"\")}\r\n          nodeDetails=\"\"\r\n          pipelineInfo=\"\"\r\n        ></UpdateModel>\r\n      );\r\n    }\r\n  }\r\n\r\n  getUpdateNodeComponent(datasets: any) {\r\n    if (this.state.selectedNode !== null) {\r\n      //console.log(\"selectedNode: \");\r\n      //console.log(this.state.selectedNode);\r\n      const selectedNode = this.state.selectedNode as any;\r\n      const { chain_group, facet_group, facet_type, custom_facet_type } = selectedNode;\r\n      var customFacetName = selectedNode.name;\r\n      const attribitutes = selectedNode.arguments ? selectedNode.arguments : {};\r\n      //const component = this.getComponent(chain_group, facet_group, facet_type);\r\n      var component: any;\r\n      if(custom_facet_type === 'API') {\r\n        component = this.getComponent('INPUT', 'CONNECTOR', 'API');\r\n      } else {\r\n        component = this.getComponent(chain_group, facet_group, facet_type);\r\n      }\r\n      const attributeTypes = component.facet_arguments;\r\n      //console.log(\"attributeTypes: \");\r\n      //console.log(attributeTypes);\r\n      const title = `${getFriendlyLabel(chain_group)} / ${getFriendlyLabel(\r\n        facet_group\r\n      )} / ${getFriendlyLabel(facet_type)}`;\r\n      return (\r\n        <UpdateModel\r\n          user={this.props.email}\r\n          facetType={facet_type}\r\n          customFacetType={custom_facet_type}\r\n          projectId={this.state.projectId}\r\n          datasets={datasets}\r\n          dashboards={this.props.data.dashboards}\r\n          open={this.state.editNodeModalOpened}\r\n          attributes={attribitutes}\r\n          attributesTypes={attributeTypes}\r\n          title={title}\r\n          facetName={customFacetName}\r\n          chainGroupTitle={getFriendlyLabel(chain_group)}\r\n          facetGroupTitle={getFriendlyLabel(facet_group)}\r\n          facetTypeTitle={getFriendlyLabel(facet_type)}\r\n          onSubmit={(attributes: any, isOutputDatasetCreated?: boolean, isAutoSave?: boolean) => {\r\n            if (isOutputDatasetCreated) {\r\n              this.props.getDatasets(this.state.projectId);\r\n            }\r\n            this.updateNodeAttributes(attributes, isAutoSave);\r\n          }}\r\n          onCancel={() => {\r\n            this.closeUpdateNodeAttributes();\r\n          }}\r\n          handleCreateNewDataset={() => {\r\n            this.handleCreateNewDataset();\r\n          }}\r\n          createNewDatasetDialogIsOpened={\r\n            this.state.createNewDatasetDialogOpened\r\n          }\r\n          newDatasetName={this.state.newlyAddedDatasetName}\r\n          newDatasetFileName={this.state.newlyAddedDatasetFileName}\r\n          clearNewDataset={() => {\r\n            this.setState({\r\n              newlyAddedDatasetName: '',\r\n              newlyAddedDatasetFileName: ''\r\n            });\r\n          }}\r\n          facetDocumentation={\r\n            custom_facet_type === 'API' ? (\r\n              this.getComponent('INPUT', 'CONNECTOR', 'API')\r\n            ):(\r\n              this.getComponent(chain_group, facet_group, facet_type)\r\n            )\r\n          }\r\n          getColumnNames={() => {\r\n            //this.fetchSuggestions()\r\n            return this.state.columnNames\r\n          }}\r\n          handleNamingFacet={(facetCustomName: string) => this.handleSubmitFacetName(facetCustomName)}\r\n          nodeDetails={selectedNode}\r\n          pipelineInfo={this.state.pipeline}\r\n        ></UpdateModel>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSubmitFacetName = (facetName: string) => {\r\n    //console.log(\"facetName in flow-component: \" + facetName);\r\n    this.setState({ selectedNodeName: facetName })\r\n  }\r\n\r\n  handleCreateNewDataset() {\r\n    this.setState({\r\n      createNewDatasetDialogOpened: true\r\n      //editNodeModalOpened: false\r\n    });\r\n  }\r\n\r\n  getScheduleDialog() {\r\n    if (this.state.scheduleOpened) {\r\n      return (\r\n        <ScheduleDialog\r\n          open={this.state.scheduleOpened}\r\n          settings={this.state.pipeline.schedule}\r\n          onSubmit={(scheduleObject: any) => {\r\n            this.updateSchedule(scheduleObject);\r\n          }}\r\n          onCancel={() => {\r\n            this.closeScheduleDialog();\r\n          }}\r\n          pastScheduledActions={this.state.pastScheduledActions}\r\n          upcomingScheduledActions={this.state.upcomingScheduledActions}\r\n        ></ScheduleDialog>\r\n      );\r\n    }\r\n  }\r\n\r\n  getVisualizeDialog() {\r\n    if (this.state.visualizationOpened) {\r\n      return (\r\n        <VisualizeDialog\r\n          status={this.state.browseStatus}\r\n          open={this.state.visualizationOpened}\r\n          url={this.state.iFrameURL}\r\n          loading={this.state.browseURLLoading}\r\n          isMetabase={this.state.isMetabase}\r\n          onClose={() => {\r\n            this.setState({\r\n              visualizationOpened: false\r\n            });\r\n          }}\r\n        ></VisualizeDialog>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleZoomIn() {\r\n    var updateZoomScale = this.state.zoomScale;\r\n    updateZoomScale += 0.1;\r\n    this.setState({ zoomScale: updateZoomScale });\r\n    zoomIn();\r\n  }\r\n\r\n  handleZoomOut() {\r\n    var updateZoomScale = this.state.zoomScale;\r\n    if(updateZoomScale > 1){\r\n      updateZoomScale -= 0.1;\r\n      this.setState({ zoomScale: updateZoomScale });\r\n      zoomOut();\r\n    }else{\r\n      zoomOut();\r\n    }\r\n  }\r\n\r\n  handleZoomToFit() {\r\n    this.setState({ zoomScale: 1 });\r\n    zoomToFit();\r\n  }\r\n\r\n  getCenterContent() {\r\n    return (\r\n      <div\r\n        className={styles.dropArea}\r\n        onDrop={event => {\r\n          var data = JSON.parse(event.dataTransfer.getData('node-data'));\r\n          var _engine = getDiagramEngine();\r\n          var point = _engine.getRelativeMousePoint(event);\r\n          this.addNodeCommand(data, point);\r\n          //this._addNode(data, point);\r\n        }}\r\n        onDragOver={event => {\r\n          event.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"drop-area-bg\" style={{transform: 'scale(' + this.state.zoomScale + ')'}}></div>\r\n        <div className=\"undo-buttons\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            disableRipple\r\n            disabled={!this._commandManager.canPerformUndo()}\r\n            onClick={() => {\r\n              this._commandManager.undo();\r\n            }}\r\n          >\r\n            <UndoIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"primary\"\r\n            disableRipple\r\n            disabled={!this._commandManager.canPerformRedo()}\r\n            onClick={() => this._commandManager.redo()}\r\n          >\r\n            <RedoIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <IconButton color=\"primary\" disableRipple onClick={() => this.handleZoomIn()}>\r\n            <ZoomInIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n          <IconButton color=\"primary\" disableRipple onClick={() => this.handleZoomOut()}>\r\n            <ZoomOutIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"primary\"\r\n            disableRipple\r\n            onClick={() => this.handleZoomToFit()}\r\n          >\r\n            <FilterCenterFocusIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        </div>\r\n        <CanvasWidget className={styles.rootCanvas} engine={this._engine} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Command to add node.\r\n   * @param data Facet definition\r\n   * @param point position the facet jeed to be added to in the react diagram\r\n   */\r\n\r\n  addNodeCommand(data: any, point: any) {\r\n    var command: Command = new Command(\r\n      (props: any) => {\r\n        var node: CustomNodeModel;\r\n        //console.log(props);\r\n        if (props) {\r\n          node = this._addNode(\r\n            null,\r\n            null,\r\n            props.attributes,\r\n            props.parents,\r\n            props.children,\r\n            props.node,\r\n            props.arrows\r\n          );\r\n        } else {\r\n          node = this._addNode(data, point);\r\n        }\r\n        return node;\r\n      },\r\n      (node: CustomNodeModel) => {\r\n        var attributes = [];\r\n        var parents = [];\r\n        var children = [];\r\n        var facets = this.state.pipeline.definition.facets.filter(\r\n          (facet: any) => facet.facet_id === node.facet_id\r\n        );\r\n        var arrows = this.state.pipeline.definition.arrows.filter(\r\n          (arrow: any) =>\r\n            arrow.source === node.facet_id ||\r\n            arrow.destination === node.facet_id\r\n        );\r\n        if (facets.length > 0) {\r\n          attributes = facets[0].arguments;\r\n          parents = facets[0].parents;\r\n          children = facets[0].children;\r\n        }\r\n        this._deleteNode(node);\r\n        return { attributes, node, children, parents, arrows };\r\n      }\r\n    );\r\n    //console.log('add node command', this._commandManager);\r\n    this._commandManager.addCommand(command);\r\n  }\r\n\r\n  /**\r\n   * delete node command\r\n   * @param node \r\n   */\r\n\r\n  deleteNodeCommand(node: CustomNodeModel) {\r\n    var command: Command = new Command(\r\n      () => {\r\n        var attributes = [];\r\n        var parents = [];\r\n        var children = [];\r\n        var facets = this.state.pipeline.definition.facets.filter(\r\n          (facet: any) => facet.facet_id === node.facet_id\r\n        );\r\n        var arrows = this.state.pipeline.definition.arrows.filter(\r\n          (arrow: any) =>\r\n            arrow.source === node.facet_id ||\r\n            arrow.destination === node.facet_id\r\n        );\r\n        if (facets.length > 0) {\r\n          attributes = facets[0].arguments;\r\n          parents = facets[0].parents;\r\n          children = facets[0].children;\r\n        }\r\n        this._deleteNode(node);\r\n        return { attributes, node, children, parents, arrows };\r\n      },\r\n      (props: any) => {\r\n        const node: CustomNodeModel = this._addNode(\r\n          null,\r\n          null,\r\n          props.attributes,\r\n          props.parents,\r\n          props.children,\r\n          props.node,\r\n          props.arrows\r\n        );\r\n        return node;\r\n      }\r\n    );\r\n    this._commandManager.addCommand(command);\r\n    //console.log('delete command', this._commandManager);\r\n  }\r\n  /**\r\n   * Adds node to the flow diagram\r\n   * @param data data fo the node\r\n   * @param point position of the facet\r\n   * @param attributes facet attributes\r\n   * @param parents array of parent facet ids\r\n   * @param children array of children faceer ids\r\n   * @param existingNode in case when we are adding node back from an undo of delete action\r\n   * @param existingArrows existing links attached to facet. These links were deleted when the facet deleted. This is the reference of those\r\n   * arrows so that we can add them back when an undo action performed by the user.\r\n   */\r\n  _addNode(\r\n    data: any,\r\n    point: any,\r\n    attributes?: any,\r\n    parents?: any[],\r\n    children?: any[],\r\n    existingNode?: CustomNodeModel,\r\n    existingArrows?: any[]\r\n  ) {\r\n    var i = 0, j = 0\r\n    var nodeData: any = addNode(data, point, existingNode);\r\n    var node: CustomNodeModel;\r\n    if (existingNode) {\r\n      node = existingNode;\r\n    } else {\r\n      node = getNode(nodeData.facet_id);\r\n      node.registerListener({\r\n        editNode: (event: any) => {\r\n          this.showEditor(event.node as CustomNodeModel);\r\n        },\r\n        deleteNode: (event: any) => {\r\n          this.deleteNodeCommand(event.node as CustomNodeModel);\r\n        },\r\n        visualize: (event: any) => {\r\n          this._visualize(event.node as CustomNodeModel);\r\n        },\r\n        selectionChanged: (event: any) => {\r\n          this._selectionChangedEventHandler();\r\n        }\r\n      });\r\n    }\r\n    var arrows = [];\r\n    if (existingArrows) {\r\n      arrows = existingArrows;\r\n    }\r\n    var pipeline = this.state.pipeline;\r\n    if (parents) {\r\n      nodeData.parents = parents;\r\n      var facets = pipeline.definition.facets;\r\n      for (i = 0; i < parents.length; i++) {\r\n        for (j = 0; j < facets.length; j++) {\r\n          if (facets[j].facet_id === parents[i]) {\r\n            facets[j].children.push(nodeData.facet_id);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      nodeData.parents = [];\r\n    }\r\n    if (children) {\r\n      nodeData.children = children;\r\n      // eslint-disable-next-line\r\n      var facets = pipeline.definition.facets;\r\n      for (i = 0; i < children.length; i++) {\r\n        for (j = 0; j < facets.length; j++) {\r\n          if (facets[j].facet_id === children[i]) {\r\n            facets[j].parents.push(nodeData.facet_id);\r\n          }\r\n        }\r\n        // arrows.push({\r\n        //   source: nodeData.facet_id,\r\n        //   destination: children[i]\r\n        // });\r\n      }\r\n    } else {\r\n      nodeData.children = [];\r\n    }\r\n    //attributes might exist when undo a deleted node.\r\n    if (attributes) {\r\n      nodeData.arguments = attributes;\r\n    }\r\n    // eslint-disable-next-line\r\n    var facets = pipeline.definition.facets;\r\n    if (!facets) {\r\n      facets = [nodeData];\r\n      pipeline.definition.facets = facets;\r\n    } else {\r\n      facets.push(nodeData);\r\n    }\r\n    if (pipeline.definition.arrows) {\r\n      pipeline.definition.arrows = [...pipeline.definition.arrows, ...arrows];\r\n    } else {\r\n      pipeline.definition.arrows = arrows;\r\n    }\r\n\r\n    this._engine.repaintCanvas();\r\n\r\n    //pipeline.modifiedAt = getCurrentDate();\r\n    this.setState({\r\n      ...this.state,\r\n      pipeline: pipeline\r\n    });\r\n    pipeline.pipeline_id = this.state.pipeline.pipeline_id;\r\n    pipeline.name = this.state.pipeline.name;\r\n    //console.log(\"Add node: \");\r\n    //console.log(pipeline);\r\n    //console.log(\"$%$9\");\r\n\r\n    this.props.updateFlowData(pipeline);\r\n    this.forceUpdate();\r\n    //console.log(node);\r\n    return node;\r\n  }\r\n\r\n  getInfoContent() {\r\n    return (\r\n      <InfoDrawer\r\n        onFlowDiagramModeChanged={(mode: string) => {\r\n          // eslint-disable-next-line\r\n          const pipelineId = this.state.pipeline.pipeline_id;\r\n          if (mode === 'interactive' && !this.validateDiagram()) {\r\n            return;\r\n          }\r\n          this.setState({\r\n            modeChangePending: true\r\n          });\r\n          if (mode === 'interactive') {\r\n          } else {\r\n            // this.exitInteractiveSession(pipelineId, mode);\r\n            this.setState({\r\n              modeChangePending: false\r\n            });\r\n          }\r\n        }}\r\n        validateDiagram={this.validateDiagram.bind(this)}\r\n        modeChangePending={this.state.modeChangePending}\r\n        response={this.props.data.response}\r\n        onRun={() => this.onRunClick()}\r\n        onSchedule={() => this.onScheduleClick()}\r\n        title={this.state.pipeline.name}\r\n        flowDiagramMode={this.state.mode}\r\n        projectName={this.state.projectName}\r\n        pipelineRunning={this.state.pipelineRunning || this.state.loadingLogs}\r\n        pipelineLogs={this.state.pipelineLogs}\r\n        pipelineLoaded={this.state.pipelineLoaded && this.state.sessionCreated}\r\n        facetDocLoaded={this.props.facetDocLoaded}\r\n        editRunFlowRunning={this.state.editRunFlowRunning}\r\n        onSaveTitle={(flowName: string, projectName: string) =>\r\n          this.updateTitle(flowName, projectName)\r\n        }\r\n        pipelineSpecs={this.state.pipelineSpecs}\r\n        pipelineInfo={this.state.pipeline}\r\n        updatePipelineArg={(pipeArgName: string, pipeArgValue: any) => {\r\n          this.updatePipelineArgument(pipeArgName, pipeArgValue)\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleFlowDiagramModeChanged(mode: string) {\r\n    var model = getDiagramModel();\r\n    model.setLocked(mode === 'interactive');\r\n    this.setState({\r\n      mode: mode,\r\n      modeChangePending: false\r\n    });\r\n  }\r\n\r\n  getCreateNewDatasetDialog() {\r\n    return (\r\n      <AddDatasetDialog\r\n        open={\r\n          this.state.createNewDatasetDialogOpened\r\n        }\r\n        uploadStatus={this.props.data.uploadStatus}\r\n        projectId={this.state.projectId}\r\n        projectName={this.state.projectName}\r\n        handleDialogClose={() => this.handleCreateNewDatasetDialogClose()}\r\n        handleSubmit={(name: string, file: File) =>\r\n          this.handleCreateNewDatasetDialogSubmit(name, file)\r\n        }\r\n        handleSubmitOverwrite={(name: string, file: File) =>\r\n          this.handleCreateNewDatasetDialogSubmitOverwrite(name, file)\r\n        }\r\n        handleCancel={() => this.handleCreateNewDatasetDialogClose()}\r\n        newDatasetNameExists={this.state.newlyAddedDatasetNameExists}\r\n        dismissAlert={() => this.handleDismissDatasetNameExists()}\r\n      />\r\n    );\r\n  }\r\n\r\n  getCreateSessionDialog() {\r\n    return (\r\n      <CreateSessionDialog\r\n        open={this.state.createSessionDialogOpened}\r\n        handleCreate={() => {\r\n          //this.enterSession(this.state.projectId);\r\n          this.toggleCreateSessionDialog(false);\r\n        }}\r\n      ></CreateSessionDialog>\r\n    );\r\n  }\r\n\r\n  getStatusSnackbar() {\r\n    return (\r\n      <SnackbarMsg\r\n        snackbarOpen={this.state.snackbarOpen}\r\n        snackbarType={this.state.snackbarVariant}\r\n        snackbarMsg={this.state.snackbarMessage}\r\n        onSnackbarClose={() => this.handleSessionSnackbarClose()}\r\n      />\r\n    );\r\n  }\r\n\r\n  handleSessionSnackbarClose() {\r\n    this.setState({\r\n      snackbarOpen: false\r\n    });\r\n  }\r\n\r\n  handleCreateNewDatasetDialogSubmit(name: string, file: File) {\r\n    var checkDatasetNameOverlap = false;\r\n    // eslint-disable-next-line\r\n    {\r\n      this.props.data.datasets.map((datasetData: any) => {\r\n        //console.log(\"NAME: \" + name + \", datasetData.name: \" + datasetData.name);\r\n        if (\r\n          datasetData.name === name &&\r\n          datasetData.project_id === this.state.projectId\r\n        ) {\r\n          //console.log(\"HITHITHIT!!! - NAME: \" + name + \", name: \" + datasetData.name);\r\n          //this.setState({ newlyAddedDatasetNameExists: true });\r\n          checkDatasetNameOverlap = true;\r\n        }\r\n        return ''\r\n      });\r\n    }\r\n    //console.log(\"checkDatasetNameOverlap: \" + checkDatasetNameOverlap);\r\n    if (checkDatasetNameOverlap !== false) {\r\n      this.setState({ newlyAddedDatasetNameExists: true });\r\n    } else {\r\n      this.props.createDataset(this.state.projectId, name, file);\r\n      this.setState({\r\n        newlyAddedDatasetName: name,\r\n        newlyAddedDatasetFileName: file.name,\r\n        newlyAddedDatasetNameExists: false\r\n      });\r\n      this.handleCreateNewDatasetDialogClose();\r\n    }\r\n  }\r\n\r\n  handleCreateNewDatasetDialogClose() {\r\n    this.setState({\r\n      createNewDatasetDialogOpened: false\r\n      //newlyAddedDatasetName: ''\r\n    });\r\n  }\r\n\r\n  handleDismissDatasetNameExists() {\r\n    this.setState({\r\n      newlyAddedDatasetNameExists: false\r\n    });\r\n  }\r\n\r\n  handleCreateNewDatasetDialogSubmitOverwrite(name: string, file: File) {\r\n    // CALL TO API TO OVERWRITE DATASET\r\n    //console.log('OVERWRITE dataset: ' + name);\r\n    //this.props.createDataset(this.state.projectId, name, file);\r\n    var existingDatasetId = '';\r\n    var existingDatasetName = '';\r\n    // eslint-disable-next-line\r\n    {\r\n      this.props.data.datasets.map((datasetData: any) => {\r\n        //console.log(\"NAME: \" + name + \", datasetData.name: \" + datasetData.name);\r\n        if (\r\n          datasetData.name === name &&\r\n          datasetData.project_id === this.state.projectId\r\n        ) {\r\n          //console.log(\"HITHITHIT!!! - NAME: \" + name + \", name: \" + datasetData.name);\r\n          //this.setState({ newlyAddedDatasetNameExists: true });\r\n          existingDatasetId = datasetData.dataset_id;\r\n          existingDatasetName = datasetData.name;\r\n        }\r\n        return ''\r\n      });\r\n    }\r\n    if (existingDatasetId !== '') {\r\n      this.props.editDataset(\r\n        this.state.projectId,\r\n        existingDatasetId,\r\n        existingDatasetName,\r\n        file\r\n      );\r\n      this.setState({\r\n        newlyAddedDatasetName: existingDatasetName,\r\n        newlyAddedDatasetFileName: file.name,\r\n        newlyAddedDatasetNameExists: false\r\n      });\r\n      this.handleCreateNewDatasetDialogClose();\r\n    }\r\n  }\r\n\r\n  fetchSuggestions() {\r\n    if (this.state.pipeline.definition.arrows.length > 0) {\r\n      getSuggesstions({\r\n        project_id: this.state.projectId,\r\n        pipeline_id: this.state.pipeline.pipeline_id,\r\n        source_facet_id: this.state.pipeline.definition.arrows[0].source,\r\n        destination_facet_id: this.state.pipeline.definition.arrows[0].destination\r\n      }).then((a: any) => {\r\n        var p: any = []\r\n        a.column_names.forEach((v: string) => {\r\n          p.push({ name: v })\r\n        })\r\n        this.setState({ columnNames: p })\r\n      }).catch((err: any) => {\r\n        if (err === 501) {\r\n          enterSession(this.state.projectId).then((data: any) => {\r\n            getSuggesstions({\r\n              project_id: this.state.projectId,\r\n              pipeline_id: this.state.pipeline.pipeline_id,\r\n              source_facet_id: this.state.pipeline.definition.arrows[0].source,\r\n              destination_facet_id: this.state.pipeline.definition.arrows[0].destination\r\n            }).then((a: any) => {\r\n              var p: any = []\r\n              a.column_names.forEach((v: string) => {\r\n                p.push({ name: v })\r\n              })\r\n              this.setState({ columnNames: p })\r\n            });\r\n          }).catch((err: any) => {\r\n            this.setState({\r\n              snackbarMessage: 'Something went wrong. Please try again',\r\n              snackbarOpen: true,\r\n              snackbarVariant: 'error',\r\n              mode: 'edit'\r\n            });\r\n          });\r\n        } else {\r\n          getSuggesstions({\r\n            project_id: this.state.projectId,\r\n            pipeline_id: this.state.pipeline.pipeline_id,\r\n            source_facet_id: this.state.pipeline.definition.arrows[0].source,\r\n            destination_facet_id: this.state.pipeline.definition.arrows[0].destination\r\n          }).then((a: any) => {\r\n            var p: any = []\r\n            a.column_names.forEach((v: string) => {\r\n              p.push({ name: v })\r\n            })\r\n            this.setState({ columnNames: p })\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  closePeekArrow = () => {\r\n    //console.log(\"this.peekLinkObject: \");\r\n    //console.log(this.peekLinkObject);\r\n\r\n    var link = this.peekLinkObject;\r\n    link.handleButtonsStateDisabled();\r\n    this.setState({\r\n      mode: 'edit',\r\n      peekInitiated: false,\r\n      peekContent: {},\r\n      peekMinMax: 'min'\r\n    });\r\n\r\n  }\r\n\r\n  minmaxPeekArrow = (minmax: string) => {\r\n    this.setState({ peekMinMax: minmax });\r\n  }\r\n\r\n  handleMinimizeVizElement = (vizType: string, vizFacetInfo: any, isDashView: boolean, iFrameURL: string) => {\r\n    // console.log(\"vizType: \");\r\n    // console.log(vizType);\r\n    // console.log(\"vizFacetInfo: \");\r\n    // console.log(vizFacetInfo);\r\n    // console.log(\"isDashView: \");\r\n    // console.log(isDashView);\r\n    // console.log(\"iFrameURL: \");\r\n    // console.log(iFrameURL);\r\n    //var minVizElementID = iFrameURL;\r\n    /*this.setState({\r\n      vizInitiated: false,\r\n      vizLoading: false,\r\n      mode: 'edit',\r\n      iFrameLoadingDone: false,\r\n      iFrameContentLoaded: false,\r\n      clearIframeLoader: false\r\n    });*/\r\n    //this.handleMinimizeVizElement(\"facet\", node, false, browseFacetres.url);\r\n    var vizInitiated: boolean;\r\n    var vizLoading: boolean;\r\n    if (iFrameURL !== \"\") {\r\n      vizInitiated = true;\r\n      vizLoading = true;\r\n    } else {\r\n      vizInitiated = false;\r\n      vizLoading = false;\r\n    }\r\n    var vizID = \"\";\r\n    if (vizType === \"Facet\") {\r\n      vizID = \"facet-\" + vizFacetInfo.facet_id;\r\n    } else if (vizType === \"Link\") {\r\n      vizID = \"link-\" + vizFacetInfo.sourcePort.parent.facet_id + \"-\" + vizFacetInfo.targetPort.parent.facet_id;\r\n    }\r\n    var newMinVizElement: vizElement = {\r\n      open: true,\r\n      vizID: vizID,\r\n      vizType: vizType,\r\n      vizFacetInfo: vizFacetInfo,\r\n      isDashView: isDashView,\r\n      iFrameURL: iFrameURL,\r\n      vizFacet: vizFacetInfo.facet_type,\r\n      vizInitiated: vizInitiated,\r\n      vizLoading: vizLoading,\r\n      vizFacetId: vizFacetInfo.facet_id,\r\n      vizFacetParentId: this.state.vizFacetParentId,\r\n      vizFacetSourceId: this.state.vizFacetSourceId,\r\n      vizFacetDestinationId: this.state.vizFacetDestinationId,\r\n      iFrameLoadingDone: false,\r\n      iFrameContentLoaded: false,\r\n      clearIframeLoader: false\r\n    }\r\n    this.setState({\r\n      //vizElements: this.state.vizElements.vizElement\r\n      vizElements: {\r\n        ...this.state.vizElements,\r\n        [vizID]: newMinVizElement\r\n      }\r\n    },\r\n      () => {\r\n        //console.log(\"this.state.vizElements: \")\r\n        //console.log(this.state.vizElements)\r\n      }\r\n    );\r\n  }\r\n\r\n  handleMinimizeVisualization = (vizEle: any) => {\r\n    //console.log(\"handleMinimizeVisualization: \");\r\n    //console.log(vizEle);\r\n    if (vizEle) {\r\n      var minVizElementID = vizEle.vizID;\r\n      var minVizIFrame = vizEle.iFrameURL;\r\n      // eslint-disable-next-line\r\n      var vizInitiated: boolean;\r\n      // eslint-disable-next-line\r\n      var vizLoading: boolean;\r\n      if (minVizIFrame !== \"\") {\r\n        vizInitiated = true;\r\n        vizLoading = true;\r\n      } else {\r\n        vizInitiated = false;\r\n        vizLoading = false;\r\n      }\r\n      // eslint-disable-next-line\r\n      let filteredVizElementsArray = Object.keys(this.state.vizElements).filter(\r\n        (vizEleDataKey: any) => {\r\n          //console.log(\"vizEleData: \" + vizEleData + \", vizEleData.iFrameURL: \" + vizEleData.iFrameURL + \", vizEle.iFrameURL: \" + vizEle.iFrameURL);\r\n          //console.log(\"vizEleData: \" + vizEleData);\r\n          return this.state.vizElements[vizEleDataKey][\"iFrameURL\"] !== vizEle.iFrameURL\r\n        }\r\n      );\r\n      var minVizElement: vizElement = vizEle;\r\n      minVizElement.open = false;\r\n      this.setState({\r\n        //vizElements: this.state.vizElements.vizElement\r\n        vizElements: {\r\n          ...this.state.vizElements,\r\n          //...filteredVizElementsArray,\r\n          [minVizElementID]: minVizElement\r\n        }\r\n      },\r\n        () => {\r\n          //console.log(\"after minimize open false, this.state.vizElements: \")\r\n          //console.log(this.state.vizElements)\r\n        }\r\n      );\r\n    }\r\n    this.setState({\r\n      mode: 'edit',\r\n    });\r\n  }\r\n\r\n  removeVizElement = (vizEle: any) => {\r\n    //console.log(\"removeVizElement: \");\r\n    //console.log(vizEle);\r\n    //this.state.vizElements.splice(x, 1);\r\n    /*let filteredVizElementsArray = Object.keys(this.state.vizElements).filter(\r\n      (vizEleDataKey: any) => { \r\n        //console.log(\"vizEleData: \" + vizEleData + \", vizEleData.iFrameURL: \" + vizEleData.iFrameURL + \", vizEle.iFrameURL: \" + vizEle.iFrameURL);\r\n        //console.log(\"vizEleData: \" + vizEleData);\r\n        return vizEleDataKey !== vizEle.vizID && this.state.vizElements[vizEleDataKey][\"iFrameURL\"] !== vizEle.iFrameURL \r\n      }\r\n    );*/\r\n    if (vizEle !== \"\" && vizEle !== undefined) {\r\n      let filteredVizElementsArray: any = {};\r\n      // var arrIndexToRemove = 0;\r\n      Object.keys(this.state.vizElements).map((vizEleKey: any, index: number) => {\r\n        if (vizEleKey === vizEle.vizID && this.state.vizElements[vizEleKey][\"iFrameURL\"] === vizEle.iFrameURL) {\r\n          //arrIndexToRemove = index;\r\n        } else {\r\n          filteredVizElementsArray[vizEleKey] = this.state.vizElements[vizEleKey];\r\n        }\r\n        return ''\r\n      });\r\n      //let filteredVizElementsArray: any = [Object.keys(this.state.vizElements).splice(arrIndexToRemove, 1)];\r\n      //console.log(\"filteredVizElementsArray: \");\r\n      //console.log(filteredVizElementsArray);\r\n      this.setState({\r\n        //vizElements: this.state.vizElements.vizElement\r\n        vizElements: filteredVizElementsArray\r\n      },\r\n        () => {\r\n          //console.log(\"after cleared array, this.state.vizElements: \")\r\n          //console.log(this.state.vizElements)\r\n        }\r\n      );\r\n      if (vizEle.vizType === \"Facet\") {\r\n        if (!vizEle.isDashView) {\r\n          /*if (this.saveFacetIntervalId !== -1) {\r\n            clearTimeout(this.saveFacetIntervalId);\r\n          }*/\r\n          clearTimeout(this.saveFacetIntervalId);\r\n          finishBrowseFacet(this.state.pipeline.pipeline_id, this.state.pipeline.project_id, this.state.vizFacetId, this.state.vizFacetParentId).then((finishBrowseFacetRes: any) => {\r\n            getPipeline(this.state.pipeline.pipeline_id).then((pipelineData: any) => {\r\n              pipelineData.pipeline.pipeline_id = this.state.pipeline.pipeline_id;\r\n              const { pipeline } = pipelineData;\r\n              this.setState({\r\n                ...this.state,\r\n                pipeline: pipeline\r\n              });\r\n            });\r\n          }).catch((finishBrowseArrowErr: any) => {\r\n            getPipeline(this.state.pipeline.pipeline_id).then((pipelineData: any) => {\r\n              pipelineData.pipeline.pipeline_id = this.state.pipeline.pipeline_id;\r\n              const { pipeline } = pipelineData;\r\n              this.setState({\r\n                ...this.state,\r\n                pipeline: pipeline\r\n              });\r\n            });\r\n          });\r\n        } else {\r\n          var _facet: any = this.state.pipeline.definition.facets.filter((_fac: any) => {\r\n            return _fac.facet_id === vizEle.vizFacetId\r\n          })\r\n\r\n          finishBrowseDashboard(_facet[0].arguments.dashboard_id, this.state.pipeline.project_id).then((data) => {\r\n          }).catch((err) => {\r\n          })\r\n        }\r\n      } else {\r\n        finishBrowseArrow(this.state.pipeline.pipeline_id, this.state.pipeline.project_id, this.state.vizFacetSourceId, this.state.vizFacetDestinationId).then((finishBrowseArrowRes: any) => {\r\n\r\n        }).catch((finishBrowseArrowErr: any) => {\r\n\r\n        });\r\n      }\r\n      this.setState({\r\n        mode: 'edit',\r\n      });\r\n    }\r\n  }\r\n\r\n  _visualizeMinimizedTab = (vizEle: any) => {\r\n    //console.log(\"_visualizeMinimizedTab: \");\r\n    //console.log(vizEle);\r\n    if (vizEle) {\r\n      var minVizElementID = vizEle.vizID;\r\n      var minVizIFrame = vizEle.iFrameURL;\r\n      // eslint-disable-next-line\r\n      var vizInitiated: boolean;\r\n      // eslint-disable-next-line\r\n      var vizLoading: boolean;\r\n      if (minVizIFrame !== \"\") {\r\n        vizInitiated = true;\r\n        vizLoading = true;\r\n      } else {\r\n        vizInitiated = false;\r\n        vizLoading = false;\r\n      }\r\n      // eslint-disable-next-line\r\n      let filteredVizElementsArray = Object.keys(this.state.vizElements).filter(\r\n        (vizEleDataKey: any) => {\r\n          //console.log(\"vizEleData: \" + vizEleData + \", vizEleData.iFrameURL: \" + vizEleData.iFrameURL + \", vizEle.iFrameURL: \" + vizEle.iFrameURL);\r\n          //console.log(\"vizEleData: \" + vizEleData);\r\n          return this.state.vizElements[vizEleDataKey][\"iFrameURL\"] !== vizEle.iFrameURL\r\n        }\r\n      );\r\n      var openVizElement: vizElement = vizEle;\r\n      openVizElement.open = true;\r\n      this.setState({\r\n        //vizElements: this.state.vizElements.vizElement\r\n        vizElements: {\r\n          //...filteredVizElementsArray,\r\n          ...this.state.vizElements,\r\n          [minVizElementID]: openVizElement\r\n        }\r\n      },\r\n        () => {\r\n          //console.log(\"after minimize open true, this.state.vizElements: \")\r\n          //console.log(this.state.vizElements)\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  visualizationElementRender = () => {\r\n    return (\r\n      <div className={styles.interactiveFrame}>\r\n        {Object.keys(this.state.vizElements).length > 0 &&\r\n          <div className=\"interactive-frame-tabs\">\r\n            <div className=\"tabs-title\">\r\n              <span className=\"title\">Minimized</span>\r\n            </div>\r\n            {Object.keys(this.state.vizElements).map((vElementKey: any) => (\r\n              <div className=\"interactive-frame-tab\" key={'ift-' + vElementKey}>\r\n                <div\r\n                  className=\"inner-tab-div\"\r\n                  onClick={() => this._visualizeMinimizedTab(this.state.vizElements[vElementKey])}\r\n                >\r\n                  {this.state.vizElements[vElementKey][\"vizType\"] === \"Link\" ? (\r\n                    <React.Fragment>\r\n                      <i className=\"zmdi zmdi-arrow-right-top zmdi-hc-fw\" />\r\n                      <span className=\"tab-txt\">\r\n                        {this.state.vizElements[vElementKey]['vizFacetInfo']['sourcePort']['parent']['name'] && this.state.vizElements[vElementKey]['vizFacetInfo']['sourcePort']['parent']['name'] !== '' ? (\r\n                          this.state.vizElements[vElementKey]['vizFacetInfo']['sourcePort']['parent']['name']\r\n                        ) : (\r\n                            'Link'\r\n                          )}\r\n                      </span>\r\n                    </React.Fragment>\r\n                  ) : (\r\n                      this.state.vizElements[vElementKey][\"isDashView\"] === true ? (\r\n                        <React.Fragment>\r\n                          <i className=\"zmdi zmdi-view-dashboard zmdi-hc-fw\" />\r\n                          <span className=\"tab-txt\">Dash</span>\r\n                        </React.Fragment>\r\n                      ) : (\r\n                          <React.Fragment>\r\n                            <i className=\"zmdi zmdi-code zmdi-hc-fw\" />\r\n                            <span className=\"tab-txt\">\r\n                              {this.state.vizElements[vElementKey]['vizFacetInfo']['name'] && this.state.vizElements[vElementKey]['vizFacetInfo']['name'] !== '' ? (\r\n                                this.state.vizElements[vElementKey]['vizFacetInfo']['name']\r\n                              ) : (\r\n                                  'Script'\r\n                                )}\r\n                            </span>\r\n                          </React.Fragment>\r\n                        )\r\n                    )}\r\n                </div>\r\n                <IconButton\r\n                  className=\"close-interactive-tab\"\r\n                  onClick={() => this.removeVizElement(this.state.vizElements[vElementKey])}\r\n                  size=\"small\"\r\n                  color=\"default\"\r\n                >\r\n                  <CloseIcon fontSize=\"small\" className=\"close-interactive-tab-icon\" />\r\n                </IconButton>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        }\r\n        {this.state.vizElements && Object.keys(this.state.vizElements).length > 0 && (\r\n          Object.keys(this.state.vizElements).map((vElementKey: any) => (\r\n            <VisualizeComponent\r\n              key={'vc-' + vElementKey}\r\n              open={this.state.vizElements[vElementKey][\"open\"]}\r\n              minimized={true}\r\n              inFocus={true}\r\n              url=\"\"\r\n              isMetabase={true}\r\n              status=\"\"\r\n              loading={this.state.vizElements[vElementKey][\"vizLoading\"]}\r\n              projectName={this.state.projectName}\r\n              pipeline={this.state.pipeline}\r\n              vizElement={this.state.vizElements[vElementKey]}\r\n              onClose={(vizEle: any) => this.removeVizElement(vizEle)}\r\n              onMinimize={(vizEle: any) => this.handleMinimizeVisualization(vizEle)}\r\n            ></VisualizeComponent>\r\n          ))\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleGoBack = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    //this.props.history.goBack();\r\n    //this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n    this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n  };\r\n\r\n  peekElementRender = () => {\r\n    return(\r\n      <PeekComponent\r\n        peekInitiated={this.state.peekInitiated}\r\n        peekMinMax={this.state.peekMinMax}\r\n        peekLoading={this.state.peekLoading}\r\n        peekContent={this.state.peekContent}\r\n        handleClosePeekArrow={() => this.closePeekArrow()}\r\n        handleMinMaxPeekArrow={(minmax: string) => this.minmaxPeekArrow(minmax)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state) return;\r\n    let loadingTxt = \"Loading...\";\r\n    let loadingDone = false;\r\n    // eslint-disable-next-line\r\n    let loadingDoneWithTimeout = false;\r\n    if (this.state.pipelineLoaded) {\r\n      if (this.props.data.datasetsLoaded) {\r\n        if (this.props.facetDocLoaded) {\r\n          loadingTxt = \"Getting pipeline ready...\";\r\n          // eslint-disable-next-line\r\n          if (this.autoLayoutApplied = true) {\r\n            loadingDone = true\r\n            /*setTimeout(() => {\r\n              loadingDone = true;\r\n              this.hideAutoLayoutLoading = true;\r\n            }, 3500);*/\r\n          }\r\n        } else {\r\n          loadingTxt = \"Loading Facets documentation...\";\r\n        }\r\n      } else {\r\n        loadingTxt = \"Loading Datasets...\";\r\n      }\r\n    } else {\r\n      loadingTxt = \"Loading Pipeline nodes...\";\r\n    }\r\n    if (loadingDone === true) {\r\n      setTimeout(() => {\r\n        //console.log(\"loadingDoneWithTimeout\");\r\n        loadingDoneWithTimeout = true;\r\n        if(this._isMounted) {\r\n          this.setState({ loadingDone: true });\r\n        }\r\n      }, 2000);\r\n    }\r\n    //console.log(\"loadingDone: \" + loadingDone + \", loadingDoneWithTimeout: \" + loadingDoneWithTimeout);\r\n    if (\r\n      !this.autoLayoutApplied &&\r\n      this.props.facetDocLoaded &&\r\n      this.props.data.datasetsLoaded &&\r\n      this.state.pipelineLoaded &&\r\n      this.state.sessionCreated &&\r\n      this.state.pipeline.definition.facets &&\r\n      this.state.pipeline.definition.facets.length > 0\r\n    ) {\r\n      this.autoLayoutApplied = true;\r\n      //setTimeout(autoLayout, 100);\r\n      autoLayout();\r\n    }\r\n    //console.log(\"DATA - this.props.data: \");\r\n    //console.log(this.props.data);\r\n    let datasets = this.props.data.datasets.filter(\r\n      (datasetData: any) =>\r\n        datasetData.project_id === this.state.projectId\r\n    );\r\n    if (this.state.pipeline.definition.facets && this.state.pipeline.definition.facets.length > 1) {\r\n      //console.log(this.state.pipeline);\r\n\r\n      // getSuggesstions({project_id:this.state.projectId,\r\n      // pipeline_id:this.state.pipeline.pipeline_id,\r\n      // source_facet_id:this.state.pipeline.definition.arrows[0].source,\r\n      // destination_facet_id:this.state.pipeline.definition.arrows[0].destination}).then((a)=>{\r\n      //   console.log(a)\r\n      // })\r\n    }\r\n    if (this.state.iFrameLoadingDone === true && this.state.iFrameContentLoaded === true) {\r\n      setTimeout(() => {\r\n        this.setState({ clearIframeLoader: true });\r\n      }, 1500);\r\n    }\r\n    // eslint-disable-next-line\r\n    var peekContentRows: any = [];\r\n    if (Object.keys(this.state.peekContent).length > 0) {\r\n      peekContentRows = this.sortPeek(this.state.peekContent[\"rows\"]);\r\n    }\r\n    return (\r\n      <IkigaiLayout\r\n        _type='sub-page'\r\n        _page='Flow'\r\n        _uploadProgress={this.props.uploadProgress}\r\n        _handleGoBack={(event: any) => this.handleGoBack(event)}\r\n        _filterSidebar={\r\n          <>\r\n            <ComponentDrawer\r\n                components={this.props.componentList}\r\n                facetDocLoaded={\r\n                  this.props.facetDocLoaded && this.state.sessionCreated\r\n                }\r\n                uploadProgress={this.props.uploadProgress}\r\n                backLink={`/dashboard/project/${this.state.pipeline.project_id}`}\r\n            />\r\n          </>\r\n        }\r\n        _content={\r\n          <>\r\n            {!this.hideAutoLayoutLoading &&\r\n              <IkiLoader\r\n                loadingTxt={loadingTxt}\r\n                fadeOut={this.state.loadingDone}\r\n                history={this.props.history}\r\n                backLink={`/dashboard/project/${this.state.projectId}`}\r\n              />\r\n            }\r\n            <div className={this.state.mode}>\r\n              {this.getCenterContent()}\r\n              {this.getUpdateNodeComponent(datasets)}\r\n              {this.getUpdateArrowComponent()}\r\n              {this.getScheduleDialog()}\r\n              {this.getVisualizeDialog()}\r\n              {this.getCreateNewDatasetDialog()}\r\n              {this.getStatusSnackbar()}\r\n              {this.visualizationElementRender()}\r\n              {this.peekElementRender()}\r\n            </div>\r\n          </>\r\n        }\r\n        _rightSidebar={\r\n          <>\r\n            {this.getInfoContent()}\r\n          </>\r\n        }\r\n        _logoutHandler={this.props.logout}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Sort peekArrow\r\n\r\n  sortPeek = (peekTable: any) => {\r\n    if (this.state.tableSortProperty !== '') {\r\n      return this.sortOn(peekTable, this.state.tableSortProperty);\r\n    } else {\r\n      return peekTable;\r\n    }\r\n  };\r\n\r\n  sortOn = (arr: any, property: string) => {\r\n    //console.log(this.state.tableSortAsc);\r\n    var sortedArray = arr.sort((a: any, b: any) => {\r\n      if (b[property] < a[property]) {\r\n        return this.state.tableSortAsc ? 1 : -1;\r\n      }\r\n      if (b[property] > a[property]) {\r\n        return this.state.tableSortAsc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n    return sortedArray;\r\n  };\r\n\r\n  onRequestSort = (event: any, property: string) => {\r\n    this.setState({\r\n      tableSortAsc: !this.state.tableSortAsc,\r\n      tableSortProperty: property\r\n    });\r\n  };\r\n}\r\n\r\nexport default FlowDiagramComponent;\r\n\r\nexport const getAttributes = (selectedNode: any): any => {\r\n  if (selectedNode) {\r\n    if (selectedNode.arguments) {\r\n      return Object.keys(selectedNode.arguments).map(key => {\r\n        return (\r\n          <div>\r\n            <div>{key}</div>\r\n            <div>{selectedNode.arguments[key]}</div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { State } from '../../reducers';\r\nimport {\r\n  deleteNodeAction,\r\n  sendAppDataAction,\r\n  updateFlowDataActionStart,\r\n  getFacetDocActionStart,\r\n  renameProjectActionStart,\r\n  createDatasetActionStart,\r\n  editDatasetActionStart,\r\n  getDatasetActionStart,\r\n  getSuggestionsActionStart,\r\n  getDashboardActionStart,\r\n  handleProjectReturn,\r\n  handleCleanSession,\r\n  logoutAction\r\n} from '../../actions';\r\n\r\nimport FlowDiagramComponent from './flow-diagram-component';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  logout: () => {\r\n    dispatch(logoutAction());\r\n  },\r\n  deleteNode: (nodeId: string) => {\r\n    dispatch(deleteNodeAction(nodeId));\r\n  },\r\n  sendAppData: (pipelineId: any) => {\r\n    dispatch(sendAppDataAction(pipelineId));\r\n  },\r\n  getFacetDoc: () => {\r\n    dispatch(getFacetDocActionStart());\r\n  },\r\n  fireReturnToProject: (sourcePage: string) => {\r\n    dispatch(handleProjectReturn(sourcePage))\r\n  },\r\n  cleanSession: () => {\r\n    dispatch(handleCleanSession())\r\n  },\r\n  updateFlowData: (flowData: any) => {\r\n    dispatch(updateFlowDataActionStart(flowData));\r\n  },\r\n  renameProject: (projectId: string, newName: string) =>\r\n    dispatch(renameProjectActionStart(projectId, newName)),\r\n  createDataset: (projectId: string, datasetName: string, file: File) =>\r\n    dispatch(createDatasetActionStart(projectId, datasetName, file)),\r\n  getDatasets: (projectId: string) =>\r\n    dispatch(getDatasetActionStart(projectId)),\r\n  getDashboards: (projectId: string) =>\r\n    dispatch(getDashboardActionStart(projectId)),\r\n  editDataset: (\r\n    projectId: string,\r\n    datasetId: string,\r\n    datasetName: string,\r\n    file: File\r\n  ) => dispatch(editDatasetActionStart(projectId, datasetId, datasetName, file)),\r\n  getSuggestions: (data:any) => dispatch(getSuggestionsActionStart(data))\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  email: state.userReducerState.email,\r\n  data: state.flowReducerState,\r\n  facetDocLoaded: state.facetReducerState.facetDocLoaded,\r\n  componentList: state.facetReducerState.componentList,\r\n  projects: state.flowReducerState.projects,\r\n  uploadProgress: state.flowReducerState.uploadProgress,\r\n});\r\n\r\nexport const FlowDiagramContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FlowDiagramComponent);\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core';\r\n//import ErrorIcon from '@material-ui/icons/Error';\r\nimport AlertMsg from '../../components/AlertMsg';\r\nimport IkiDialog from '../../components/IkiDialog';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport IkiInput from '../../components/IkiFormElements/IkiInput';\r\n\r\nexport function SaveDatasetDialog(props: any) {\r\n  const {\r\n    handleSubmit,\r\n    handleSubmitOverwrite,\r\n    handleCancel,\r\n    open,\r\n    isSaveInProgress,\r\n    datasetId,\r\n    datasetName,\r\n    newDatasetNameExists,\r\n    dismissOverwriteAlert\r\n  } = props;\r\n  \r\n  const [datasetOverwrite, setDatasetOverwrite] = React.useState(\"overwrite\");\r\n  const [newDatasetName, setNewDatasetName] = React.useState(\"\");\r\n  const [newDatasetNameError, setNewDatasetNameError] = React.useState(\"\");\r\n  const [newDatasetId, setNewDatasetId] = React.useState(\"\");\r\n  const [overwriteSubmitInProgress, setOverwriteSubmitInProgress] = React.useState(false);\r\n\r\n  const handleSaveDatasetSubmit = () => {\r\n    if(datasetOverwrite === \"create-new\" && newDatasetName === \"\"){\r\n        setNewDatasetNameError(\"When creating new dataset, Name of new Dataset is required!\");\r\n    } else{\r\n        setNewDatasetNameError(\"\");\r\n        var overwrite: boolean = false;\r\n        if(datasetOverwrite === \"overwrite\"){\r\n            overwrite = true\r\n        }\r\n        handleSubmit(datasetId, overwrite, newDatasetName, newDatasetId);\r\n    }\r\n  }\r\n\r\n  const handleSetDatasetOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDatasetOverwrite((event.target as HTMLInputElement).value);\r\n    setNewDatasetName(\"\");\r\n    setNewDatasetId(\"\");\r\n    setNewDatasetNameError(\"\");\r\n  };\r\n\r\n  const handleOverwriteSubmit = () => {\r\n    setOverwriteSubmitInProgress(true);\r\n    var overwrite: boolean = false;\r\n    if(datasetOverwrite === \"overwrite\"){\r\n      overwrite = true\r\n    }\r\n    handleSubmitOverwrite(datasetId, overwrite, newDatasetName, newDatasetId);\r\n  }\r\n\r\n  const handelExitDialog = () => {\r\n    setDatasetOverwrite(\"overwrite\");\r\n    setNewDatasetName(\"\");\r\n    setNewDatasetId(\"\");\r\n    setNewDatasetNameError(\"\");\r\n    handleCancel();\r\n  }\r\n\r\n  var subtitle: string = \"\";\r\n  if(newDatasetNameExists === true) {\r\n    subtitle = '' + datasetName + ' => ' + newDatasetName;\r\n  } else {\r\n    subtitle = datasetName;\r\n  }\r\n\r\n  return (\r\n    <IkiDialog\r\n                _open={open}\r\n                _onClose={() => handelExitDialog()}\r\n                _type='share'\r\n                _icon={false}\r\n                _title='Save Dataset'\r\n                _subtitle={subtitle}\r\n                _size='xs'\r\n                _align='left'\r\n                _content={\r\n                    <>\r\n                        {newDatasetNameExists === true ? (\r\n                          <Fragment>\r\n                            <AlertMsg\r\n                              alertType=\"warning\"\r\n                              alertContent={\r\n                                <Fragment>\r\n                                    <Box>\r\n                                      <span>Dataset with same name already exists.</span>\r\n                                      <br />\r\n                                      <strong>{newDatasetName}</strong>\r\n                                    </Box>\r\n                                    <Box mt={3}>Please note:<br /> All flows which contain this dataset will be reflected by this change.</Box>\r\n                                    <Box mt={3}>\r\n                                      <strong>Are you sure you want to continue and overwrite dataset?</strong>\r\n                                    </Box>\r\n                                </Fragment>\r\n                              }\r\n                              alertButtons={\r\n                                <Fragment>\r\n                                  <Button\r\n                                    onClick={() => dismissOverwriteAlert()}\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    className=\"button\"\r\n                                    disabled={overwriteSubmitInProgress}\r\n                                  >\r\n                                    No, go back\r\n                                  </Button>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className=\"button\"\r\n                                    onClick={() => handleOverwriteSubmit}\r\n                                    disabled={overwriteSubmitInProgress}\r\n                                  >\r\n                                    {overwriteSubmitInProgress && (\r\n                                      <span className=\"btn-spinner alternate\"></span>\r\n                                    )}\r\n                                    {overwriteSubmitInProgress ? 'Overwriting...' : 'Yes, overwrite'}\r\n                                  </Button>\r\n                                </Fragment>\r\n                              }\r\n                            />\r\n                          </Fragment>\r\n                        ):(\r\n                          <Box my={2}>\r\n                            <FormControl \r\n                                className=\"radio-btn-holder with-label\" \r\n                                component=\"fieldset\" \r\n                            >\r\n                                <FormLabel component=\"div\">Choose one of following options:</FormLabel>\r\n                                <RadioGroup \r\n                                    aria-label=\"clone-type\" \r\n                                    name=\"clone-type\"\r\n                                    value={datasetOverwrite} \r\n                                    onChange={handleSetDatasetOverwrite} \r\n                                >\r\n                                  <FormControlLabel \r\n                                      value=\"overwrite\"\r\n                                      control={\r\n                                      <Radio \r\n                                          color=\"primary\"\r\n                                          size=\"small\"\r\n                                      />\r\n                                      } \r\n                                      label=\"Overwrite current Dataset\" \r\n                                  />\r\n                                  <FormControlLabel \r\n                                      value=\"create-new\"\r\n                                      control={\r\n                                      <Radio \r\n                                          color=\"primary\"\r\n                                          size=\"small\"\r\n                                      />\r\n                                      } \r\n                                      label=\"Create new Dataset\" \r\n                                  />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                          </Box>\r\n                          )}\r\n                          {newDatasetNameExists === false && datasetOverwrite === \"create-new\" && (\r\n                              <Box mb={2}>\r\n                                  <IkiInput \r\n                                        _label=\"Name of new Dataset\"\r\n                                        _placeholder=\"Enter name for new Dataset\"\r\n                                        _type='text'\r\n                                        _autoComplete=\"new-password\"\r\n                                        _value={newDatasetName}\r\n                                        _onChange={(e: any) => {\r\n                                          setNewDatasetName(e.target.value);\r\n                                        }}\r\n                                        _characterCounter={40}\r\n                                        _autoFocus={true}\r\n                                        _fullWidth={true}\r\n                                        _error={newDatasetNameError}\r\n                                  />\r\n                              </Box>\r\n                          )}\r\n                    </>\r\n                }\r\n                _actions={\r\n                    <Fragment>\r\n                        <IkiButton\r\n                        _variant='text'\r\n                        _color='default'\r\n                        _label=\"Cancel\"\r\n                        _type='button'\r\n                        _fullWidth={false}\r\n                        _loading={false}\r\n                        _onClick={() => handleCancel()}\r\n                        />\r\n                        <IkiButton\r\n                        _variant='contained'\r\n                        _color='primary'\r\n                        _label=\"Save\"\r\n                        _type='button'\r\n                        _fullWidth={false}\r\n                        _loading={isSaveInProgress}\r\n                        _disabled={isSaveInProgress}\r\n                        _onClick={() => handleSaveDatasetSubmit()}\r\n                        />\r\n                    </Fragment>\r\n                }\r\n        />\r\n  );\r\n\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  DialogTitle,\r\n  FormControl,\r\n  Box,\r\n  Grid,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  FormLabel\r\n} from '@material-ui/core';\r\n//import Autocomplete from '@material-ui/lab/Autocomplete';\r\n//import ErrorIcon from '@material-ui/icons/Error';\r\nimport IkiDialog from '../../components/IkiDialog';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\n//import IkiInput from '../../components/IkiFormElements/IkiInput';\r\nimport IkiAutocomplete from '../../components/IkiFormElements/IkiAutocomplete';\r\nimport { getFriendlyLabel } from '../../util';\r\n\r\n//import { createDataset, editDataset } from '../../services/app-data.service';\r\n\r\n  type DataprepDialogState = {\r\n    hasError: boolean;\r\n    title: string;\r\n    columnNames: any[];\r\n    columnNameSelected: any;\r\n    uTypeSelected: string;\r\n    uFormatSelected: string;\r\n    isLoading: boolean;\r\n    colNameError: string;\r\n    friendlyLabel: string;\r\n  };\r\n  \r\n  type DataprepDialogProps = {\r\n    open: boolean;\r\n    title: string;\r\n    columnNames: any[];\r\n    uniformizationPreferences: {};\r\n    onSubmit: (columnNameSelected: string, uTypeSelected: string, uFormatSelected: string) => void;\r\n    onCancel: () => void;\r\n  };\r\n\r\n  /*const customColumns = [\r\n    { title: \"CC_ACTUAL_AMOUNT\" },\r\n    { title: \"CREDIT_CARD_ID\" },\r\n    { title: \"DOCUMENT_DATE\" },\r\n    { title: \"COLUMN THAT DOESN'T EXIST\" }\r\n  ]*/\r\n\r\n  class DataprepDialog extends Component<DataprepDialogProps, DataprepDialogState> {\r\n    state = {\r\n        hasError: false,\r\n        title: \"\",\r\n        columnNames: [],\r\n        columnNameSelected: \"\",\r\n        uTypeSelected: \"\",\r\n        uFormatSelected: \"\",\r\n        isLoading: false,\r\n        colNameError: \"\",\r\n        friendlyLabel: \"\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log(\"props columnNames: \");\r\n        //console.log(this.props.columnNames);\r\n        //const columnNames_Arr = Object.keys(this.props.columnNames).map((key) => this.props.columnNames[key]);\r\n        var columnNames_Arr: any = [];\r\n        Object.keys(this.props.columnNames).sort().map((key: any) => {\r\n            var colVal = this.props.columnNames[key];\r\n            var colValBeautified = getFriendlyLabel(colVal);\r\n            columnNames_Arr.push({ \"colKey\": colVal, \"colVal\": colValBeautified });\r\n            return { \"colKey\": colVal, \"colVal\": colValBeautified }\r\n        })\r\n        //console.log(\"columnNames_Arr: \");\r\n        //console.log(columnNames_Arr);\r\n        var friendlyLabel = getFriendlyLabel(this.props.title);\r\n        this.setState({\r\n            title: this.props.title,\r\n            friendlyLabel: friendlyLabel,\r\n            //columnNames: this.props.columnNames.sort()\r\n            columnNames: columnNames_Arr\r\n        })\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({\r\n            title: \"\",\r\n            uTypeSelected: \"\",\r\n            isLoading: false\r\n        })\r\n        this.props.onCancel();\r\n    }\r\n\r\n    handleSubmit(){\r\n        if(this.state.title !== \"DEDUPLICATION\" && this.state.columnNameSelected === \"\"){\r\n            this.setState({ colNameError: \"Column Name is required\" })\r\n        }else{\r\n            this.setState({ \r\n                isLoading: true ,\r\n                colNameError: \"\"\r\n            });\r\n            // var dataPrepTitle = this.props.title;\r\n            var columnNameSelected = this.state.columnNameSelected;\r\n            var uTypeSelected = this.state.uTypeSelected;\r\n            var uFormatSelected = this.state.uFormatSelected;\r\n            var selectedValCleaned: string = \"\";\r\n                Object.keys(this.state.columnNames).map((key: any) => {\r\n                    //console.log(\"key: \" + key);\r\n                    //console.log(this.state.columnNames[key]);\r\n                    if(columnNameSelected === this.state.columnNames[key][\"colVal\"]){\r\n                        selectedValCleaned = this.state.columnNames[key][\"colKey\"]\r\n                        return selectedValCleaned\r\n                    }\r\n                    return ''\r\n                });\r\n            //console.log(\"dataPrepTitle: \" + dataPrepTitle + \", columnNameSelected: \" + columnNameSelected + \", uTypeSelected: \" + uTypeSelected + \", uFormatSelected: \" + uFormatSelected)\r\n            this.props.onSubmit(selectedValCleaned, uTypeSelected, uFormatSelected);\r\n        }\r\n    }\r\n\r\n    handleColumnNameSelect = (selectedVal: any) =>{\r\n        //console.log(\"handleColumnNameSelect - selectedVal: \", selectedVal);\r\n        if(selectedVal !== null && selectedVal !== undefined && selectedVal !== \"\"){\r\n            //var selectedValCleaned = getFriendlyLabel(selectedVal);\r\n            var selectedValCleaned = selectedVal;\r\n            //console.log(\"handleColumnNameSelect: \");\r\n            //console.log(selectedValCleaned);\r\n            this.setState({ \r\n                columnNameSelected: selectedValCleaned,\r\n                colNameError: \"\"\r\n            })\r\n        }else{\r\n            this.setState({ columnNameSelected: \"\" })\r\n        }\r\n    }\r\n\r\n    prepareUniformizationOption(){\r\n        return(\r\n            <Box mb={2}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <IkiAutocomplete \r\n                                    _required={true}\r\n                                    _error={this.state.colNameError}\r\n                                    _label='Select Column Name'\r\n                                    _placeholder='Type to search columns...'\r\n                                    _value={this.state.columnNameSelected}\r\n                                    _isMultiple={false}\r\n                                    //_selectOptions={this.props.columnNames.sort()}\r\n                                    _selectOptions={this.state.columnNames.sort()}\r\n                                    _fullWidth={true}\r\n                                    _keyValue='colKey'\r\n                                    _nameValue='colVal'\r\n                                    _onChange={(event: any, option: any) => this.handleColumnNameSelect(option)}\r\n                                />\r\n                                <FormControl \r\n                                    className=\"radio-btn-holder with-label\" \r\n                                    component=\"fieldset\" \r\n                                    margin=\"normal\"\r\n                                >\r\n                                    <RadioGroup \r\n                                        aria-label=\"clone-type\" \r\n                                        name=\"clone-type\" \r\n                                    >\r\n                                        <FormLabel component=\"div\">Type:</FormLabel>\r\n                                        {\r\n                                            Object.keys(this.props.uniformizationPreferences).length > 0 &&\r\n                                                Object.keys(this.props.uniformizationPreferences[\"uniformization_types\"]).map((uniformizationType: any) => {\r\n                                                    var uType = this.props.uniformizationPreferences[\"uniformization_types\"][uniformizationType];\r\n                                                    //console.log(\"uniformizationType: \");\r\n                                                    //console.log(this.props.uniformizationPreferences[\"uniformization_types\"][uniformizationType]);\r\n                                                    return (\r\n                                                        <FormControlLabel \r\n                                                            value={uType}\r\n                                                            key={uniformizationType}\r\n                                                            control={\r\n                                                            <Radio \r\n                                                                color=\"primary\"\r\n                                                                size=\"small\"\r\n                                                                onClick={(e: any) => this.setState({ uTypeSelected: e.target.value })}\r\n                                                            />\r\n                                                            } \r\n                                                            label={getFriendlyLabel(uType)} \r\n                                                        />\r\n                                                    )\r\n                                                })\r\n                                        }\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl \r\n                                    className=\"radio-btn-holder with-label\" \r\n                                    component=\"fieldset\" \r\n                                >\r\n                                    <RadioGroup \r\n                                        aria-label=\"clone-type\" \r\n                                        name=\"clone-type\" \r\n                                    >\r\n                                        <FormLabel component=\"div\">Format:</FormLabel>\r\n                                        { this.state.uTypeSelected !== \"\" ? (\r\n                                            Object.keys(this.props.uniformizationPreferences).length > 0 &&\r\n                                                Object.keys(this.props.uniformizationPreferences[\"uniformization_formats\"][this.state.uTypeSelected.toLowerCase()]).map((textFormat: any) => {\r\n                                                    var textFormatVal = this.props.uniformizationPreferences[\"uniformization_formats\"][this.state.uTypeSelected.toLowerCase()][textFormat];\r\n                                                    //console.log(\"textFormat: \" + this.props.uniformizationPreferences[\"uniformization_formats\"][\"text\"][textFormat]);\r\n                                                    return (\r\n                                                        <FormControlLabel \r\n                                                            value={textFormatVal}\r\n                                                            key={textFormat}\r\n                                                            control={\r\n                                                                <Radio \r\n                                                                    color=\"primary\"\r\n                                                                    size=\"small\"\r\n                                                                    onClick={(e: any) => this.setState({ uFormatSelected: e.target.value })}\r\n                                                                />\r\n                                                            } \r\n                                                            label={getFriendlyLabel(textFormatVal)} \r\n                                                        />\r\n                                                    )\r\n                                                })\r\n                                        ):(\r\n                                            <div className=\"default-color\">Choose Uniformization Type first.</div>\r\n                                        )\r\n                                        }\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n        )\r\n    }\r\n\r\n    prepareOptionContent(optionName: string){\r\n        if(optionName === 'DEDUPLICATION'){\r\n            return(\r\n                <Box mb={2}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <span className=\"default-color\">Deduplication doesn't require any parameter. You are free to proceed, submit.</span>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )\r\n        }else{\r\n            return(\r\n                <Box mb={2}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <IkiAutocomplete \r\n                                _required={true}\r\n                                _error={this.state.colNameError}\r\n                                _label='Select Column Name'\r\n                                _placeholder='Type to search columns...'\r\n                                _value={this.state.columnNameSelected}\r\n                                _isMultiple={false}\r\n                                _selectOptions={this.state.columnNames.sort()}\r\n                                _fullWidth={true}\r\n                                _keyValue='colKey'\r\n                                _nameValue='colVal'\r\n                                _onChange={(event: any, option: any) => this.handleColumnNameSelect(option)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n\r\n    /*prepareDialogHeader(title: string){\r\n        return (\r\n                <DialogTitle className=\"dialog-title default-color\" disableTypography={true}>\r\n                    <Box mt={1}>\r\n                        <div className=\"chain-and-group\">\r\n                            <span className=\"chain-group-title\">Data Prep</span>\r\n                        </div>\r\n                        <div className=\"facet-title\">{getFriendlyLabel(title)}</div>\r\n                    </Box>\r\n                </DialogTitle>\r\n        )\r\n    }*/\r\n\r\n    render(){\r\n        //console.log(\"this.props.uniformizationPreferences: \");\r\n        //console.log(this.props.uniformizationPreferences);\r\n        //console.log(\"uTypeSelected: \" + this.state.uTypeSelected);\r\n        const {\r\n            title,\r\n            isLoading\r\n        } = this.state;\r\n        return(\r\n            <IkiDialog\r\n                _open={this.props.open}\r\n                _onClose={() => this.handleClose()}\r\n                _type='share'\r\n                _icon={false}\r\n                _title={this.state.friendlyLabel}\r\n                _subtitle='Data Prep'\r\n                _size='xs'\r\n                _align='left'\r\n                _content={\r\n                    <>\r\n                        {\r\n                            this.props.title === 'UNIFORMIZATION' ? (\r\n                                this.prepareUniformizationOption()\r\n                            ):(\r\n                                this.prepareOptionContent(title)\r\n                            )\r\n                        }\r\n                    </>\r\n                }\r\n                _actions={\r\n                    <Fragment>\r\n                        <IkiButton\r\n                        _variant='text'\r\n                        _color='default'\r\n                        _label=\"Cancel\"\r\n                        _type='button'\r\n                        _fullWidth={false}\r\n                        _loading={false}\r\n                        _onClick={() => this.handleClose()}\r\n                        />\r\n                        <IkiButton\r\n                        _variant='contained'\r\n                        _color='primary'\r\n                        _label=\"Submit\"\r\n                        _type='button'\r\n                        _fullWidth={false}\r\n                        _loading={isLoading}\r\n                        _disabled={isLoading}\r\n                        _onClick={() => this.handleSubmit()}\r\n                        />\r\n                    </Fragment>\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataprepDialog;","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    FormControl,\r\n    Box,\r\n    Popover\r\n} from '@material-ui/core';\r\nimport IkiLoader from '../../components/IkiLoader';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport SnackbarMsg from '../../components/SnackbarMsg';\r\nimport { SaveDatasetDialog } from './save-dataset';\r\nimport { METABASE_URL } from '../../constants';\r\nimport IkigaiLayout from '../../components/IkiLayout';\r\nimport IkiButton from '../../components/IkiFormElements/IkiButton';\r\nimport DataprepDialog from './dialog-dataprep';\r\nimport { getFriendlyLabel, getCurrentDate } from '../../util';\r\nimport {\r\n    getDataset,\r\n    getProject,\r\n    browseDataset,\r\n    finishBrowseDataset,\r\n    getDatasetCleanFunctions,\r\n    cleanDataset,\r\n    enterSession as enterSessionManually,\r\n    getDatasetHeader,\r\n    saveDataset,\r\n    getDatasetsForProject,\r\n    exitSession as exitSessionManually\r\n} from '../../services';\r\nimport styles from './DatasetComponent.module.scss';\r\n\r\ninterface Props {\r\n    data: any;\r\n    match: any;\r\n    classes: any;\r\n    history: any;\r\n    metabaseLogin: boolean;\r\n    metabaseLoginId: string;\r\n    uploadProgress: any;\r\n    enterSession: (projectId: string) => void;\r\n    fireReturnToProject: (sourcePage: string) => void;\r\n    cleanSession: () => void;\r\n    logout: () => void;\r\n}\r\n\r\ninterface State {\r\n    isLoaded: boolean;\r\n    metabaseSessionActive: boolean;\r\n    projectId: string;\r\n    projectName: string;\r\n    datasetId: string;\r\n    datasetName: string;\r\n    datasetHeader: any[];\r\n    iFrameURL: string;\r\n    iFrameContentLoaded: boolean;\r\n    iframeKey: number;\r\n    metabaseContent: any;\r\n    tabValue: number;\r\n    dataPrepOptions: any[];\r\n    isDataprepDialogOpen: boolean;\r\n    uniformizationPreferences: {};\r\n    selectedDataprepName: string;\r\n    snackbarOpen: boolean;\r\n    snackbarMessage: any;\r\n    snackbarType: string;\r\n    hideAutoLayoutLoading: boolean;\r\n    loadingDone: boolean;\r\n    loadingTxt: string;\r\n    statusState: string;\r\n    statusTxt: string;\r\n    statusDatetime: string;\r\n    saveDialogOpen: boolean;\r\n    isSaveInProgress: boolean;\r\n    newDatasetNameExists: boolean;\r\n    goBackAnchor: any;\r\n    updateOrSave: string;\r\n}\r\n\r\n//   const predictiveOptions = [\r\n//       \"Build Model\",\r\n//       \"Auto Fill\",\r\n//       \"Predict\",\r\n//       \"Predictive Score\",\r\n//       \"Detect Anomally\",\r\n//       \"Anomally Score\"\r\n//   ];\r\n\r\nclass DatasetComponent extends Component<Props, State> {\r\n    hideAutoLayoutLoadingTimeout: any = -1;\r\n    datasetName: string = \"\";\r\n    loadingRetryCounter: number = 0;\r\n    state = {\r\n        isLoaded: false,\r\n        metabaseSessionActive: false,\r\n        projectId: \"\",\r\n        projectName: \"\",\r\n        datasetId: \"\",\r\n        datasetName: \"\",\r\n        datasetHeader: [],\r\n        iFrameURL: \"\",\r\n        iFrameContentLoaded: false,\r\n        iframeKey: 0,\r\n        metabaseContent: \"\",\r\n        tabValue: 0,\r\n        dataPrepOptions: [],\r\n        isDataprepDialogOpen: false,\r\n        uniformizationPreferences: {},\r\n        selectedDataprepName: \"\",\r\n        snackbarOpen: false,\r\n        snackbarMessage: null,\r\n        snackbarType: '',\r\n        hideAutoLayoutLoading: false,\r\n        loadingDone: false,\r\n        loadingTxt: \"\",\r\n        statusState: \"\",\r\n        statusTxt: \"\",\r\n        statusDatetime: \"\",\r\n        saveDialogOpen: false,\r\n        isSaveInProgress: false,\r\n        newDatasetNameExists: false,\r\n        goBackAnchor: null,\r\n        updateOrSave: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //console.log(\"componentDidMount metabaseLoginId: \" + this.props.metabaseLogin + \" - \" + this.props.metabaseLoginId + \", metabaseSessionActive: \" + this.state.metabaseSessionActive);\r\n        var urlParamDatasetId = this.props.match.params['id'];\r\n        var findProjectId: string = \"\";\r\n        // eslint-disable-next-line\r\n        var findProjectName: string = \"\";\r\n        var findDatasetName: string = \"\";\r\n        // eslint-disable-next-line\r\n        var metabaseUrl: string = \"\";\r\n        this.setState({ loadingTxt: \"Loading Dataset info...\" })\r\n        this.props.fireReturnToProject(\"dataset\");\r\n\r\n        getDataset(urlParamDatasetId).then((response: any) => {\r\n            //console.log(\"getDataset data: \");\r\n            //console.log(response);\r\n\r\n            // Get Dataset name\r\n            findDatasetName = response.dataset.name;\r\n            this.datasetName = findDatasetName;\r\n\r\n            // Get Project ID\r\n            findProjectId = response.dataset.project_id;\r\n            //console.log(\"findProjectId: \" + findProjectId);\r\n\r\n            this.initialLoading(urlParamDatasetId, findProjectId, this.props.metabaseLoginId);\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        finishBrowseDataset(this.state.datasetId, this.state.projectId).then((response: any) => {\r\n            let pathName:string = '';\r\n            if(this.props.history.location.pathname) {\r\n                pathName = this.props.history.location.pathname;\r\n                //console.log('page_type: ' + page_type + \", pathName: \" + pathName + \", pathName2: \" + pathName2);\r\n                //var pathName = pathName.substring(0, 19);\r\n                var projectId = '';\r\n                if(this.state.projectId) {\r\n                    projectId = this.state.projectId;\r\n                }\r\n                if(pathName === '/dashboard/projects' || pathName === '/dashboard/profile') {\r\n                    exitSessionManually(projectId).then((exitSessRes: any) => {\r\n                        this.props.cleanSession();\r\n                    }).catch((exitSessErr: any) => {\r\n                        this.props.cleanSession();\r\n                    });\r\n                }\r\n            }\r\n        }).catch((err: any) => {\r\n            let pathName:string = '';\r\n            if(this.props.history.location.pathname) {\r\n                pathName = this.props.history.location.pathname;\r\n                //console.log('page_type: ' + page_type + \", pathName: \" + pathName + \", pathName2: \" + pathName2);\r\n                //var pathName = pathName.substring(0, 19);\r\n                var projectId = '';\r\n                if(this.state.projectId) {\r\n                    projectId = this.state.projectId;\r\n                }\r\n                if(pathName === '/dashboard/projects' || pathName === '/dashboard/profile') {\r\n                    exitSessionManually(projectId).then((exitSessRes: any) => {\r\n                        this.props.cleanSession();\r\n                    }).catch((exitSessErr: any) => {\r\n                        this.props.cleanSession();\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    checkMetabaseSession = async (datasetId: string, projectId: string) => {\r\n        //await exitSession(projectId);\r\n        this.setState({ loadingTxt: \"Session expired. Re-connecting...\" })\r\n        await enterSessionManually(projectId).then((enterSessionNewID: any) => {\r\n            //console.log(\"enterSessionNewID: \" + enterSessionNewID);\r\n            this.initialLoading(datasetId, projectId, enterSessionNewID);\r\n        });\r\n        //this.initialLoading(datasetId, projectId);\r\n    }\r\n\r\n    async initialLoading(datasetId: string, projectId: string, metabaseSessId: string) {\r\n        var urlParamDatasetId = datasetId;\r\n        var findProjectId = projectId;\r\n        var metabaseSessionId = metabaseSessId;\r\n        var findProjectName: string = \"\";\r\n        var findDatasetName: string = \"\";\r\n        var metabaseUrl: string = \"\";\r\n        // eslint-disable-next-line\r\n        var columnNames: any = {};\r\n        // Get Project name\r\n        this.setState({ loadingTxt: \"Fetching Dataset content...\" })\r\n        if (metabaseSessionId !== \"\" || metabaseSessionId !== undefined) {\r\n            getProject(findProjectId).then((response: any) => {\r\n                //console.log(\"getProject data: \");\r\n                //console.log(response);\r\n                findProjectName = response.project.name;\r\n                //console.log(\"findProjectName: \" + findProjectName);\r\n\r\n                this.setState({ loadingTxt: \"Building Dataset component...\" })\r\n\r\n                browseDataset(urlParamDatasetId, findProjectId).then((res: any) => {\r\n                    //console.log(\"browseDataset: \");\r\n                    //console.log(res);\r\n                    metabaseUrl = res;\r\n\r\n                    var metabaseUrlArr = metabaseUrl.split(\"--\");\r\n                    var metabaseUrlCleaned = metabaseUrlArr[0];\r\n\r\n                    var metabaseUrlCleanedArr = (metabaseUrlCleaned).split(\"/\");\r\n                    // eslint-disable-next-line\r\n                    var metabaseUrlCleaned2 = metabaseUrlCleanedArr[metabaseUrlCleanedArr.length - 1];\r\n\r\n                    var metabaseUrlSlashPartArr = (metabaseUrlArr[1]).split(\"/\");\r\n                    // eslint-disable-next-line\r\n                    var metabaseDbId = metabaseUrlSlashPartArr[metabaseUrlSlashPartArr.length - 1];\r\n\r\n                    this.setState({\r\n                        loadingTxt: \"Working on details...\",\r\n                        iFrameURL: METABASE_URL + \"\" + metabaseUrl\r\n                    })\r\n\r\n                    var colNameObject: any = [];\r\n                    getDatasetHeader(urlParamDatasetId).then((getDatasetHeader_Res: any) => {\r\n                        //console.log(\"getDatasetHeader res: \");\r\n                        //console.log(getDatasetHeader_Res);\r\n                        if (getDatasetHeader_Res.column_names) {\r\n                            Object.keys(getDatasetHeader_Res.column_names).map((colName: any) => {\r\n                                //console.log(\"colName: \" + getDatasetHeader_Res.column_names[colName]);\r\n                                colNameObject.push(getDatasetHeader_Res.column_names[colName])\r\n                                return ''\r\n                            })\r\n                        }\r\n                        //console.log(\"colNameObject: \");\r\n                        //console.log(colNameObject);\r\n                        //columnNames = Object.values(getDatasetHeader_Res.column_names);\r\n                    }).catch((err: any) => {\r\n                        //console.log(\"err getDatasetHeader res: \");\r\n                        //console.log(err);\r\n                        getDatasetHeader(urlParamDatasetId).then((getDatasetHeader_Res: any) => {\r\n                            if (getDatasetHeader_Res.column_names) {\r\n                                Object.keys(getDatasetHeader_Res.column_names).map((colName: any) => {\r\n                                    //console.log(\"colName: \" + getDatasetHeader_Res.column_names[colName]);\r\n                                    colNameObject.push(getDatasetHeader_Res.column_names[colName])\r\n                                    return ''\r\n                                })\r\n                            }\r\n                        }).catch((err: any) => { })\r\n                    })\r\n\r\n                    this.setState({ loadingTxt: \"Preparing Dataset view...\" })\r\n\r\n                    getDatasetCleanFunctions().then((getDatasetCleanFunctionsRes: any) => {\r\n                        //console.log(\"getDatasetCleanFunctionsRes: \");\r\n                        //console.log(getDatasetCleanFunctionsRes.data.options);\r\n                        var uniformizationPreferencesArr = {};\r\n                        //uniformizationPreferencesArr.push({\"uniformization_types\": getDatasetCleanFunctionsRes.data.uniformization_types});\r\n                        //uniformizationPreferencesArr.push({\"uniformization_formats\": getDatasetCleanFunctionsRes.data.uniformization_formats});\r\n                        uniformizationPreferencesArr[\"uniformization_types\"] = getDatasetCleanFunctionsRes.data.uniformization_types;\r\n                        uniformizationPreferencesArr[\"uniformization_formats\"] = getDatasetCleanFunctionsRes.data.uniformization_formats;\r\n\r\n                        this.setState({\r\n                            projectId: findProjectId,\r\n                            projectName: findProjectName,\r\n                            datasetId: urlParamDatasetId,\r\n                            datasetName: findDatasetName,\r\n                            datasetHeader: colNameObject,\r\n                            //iFrameURL: \"https://dev-ui.ikigailabs.io/metabase-login/navigate?url=\" + metabaseUrl,\r\n                            dataPrepOptions: getDatasetCleanFunctionsRes.data.options,\r\n                            uniformizationPreferences: uniformizationPreferencesArr,\r\n                            //metabaseContent: metabaseResponse\r\n                            loadingTxt: \"Finalizing view...\",\r\n                            loadingDone: true\r\n                        });\r\n                    }).catch((err: any) => {\r\n                        getDatasetCleanFunctions().then((getDatasetCleanFunctionsRes: any) => {\r\n                            var uniformizationPreferencesArr = {};\r\n                            uniformizationPreferencesArr[\"uniformization_types\"] = getDatasetCleanFunctionsRes.data.uniformization_types;\r\n                            uniformizationPreferencesArr[\"uniformization_formats\"] = getDatasetCleanFunctionsRes.data.uniformization_formats;\r\n\r\n                            this.setState({\r\n                                projectId: findProjectId,\r\n                                projectName: findProjectName,\r\n                                datasetId: urlParamDatasetId,\r\n                                datasetName: findDatasetName,\r\n                                datasetHeader: colNameObject,\r\n                                //iFrameURL: \"https://dev-ui.ikigailabs.io/metabase-login/navigate?url=\" + metabaseUrl,\r\n                                dataPrepOptions: getDatasetCleanFunctionsRes.data.options,\r\n                                uniformizationPreferences: uniformizationPreferencesArr,\r\n                                //metabaseContent: metabaseResponse\r\n                                loadingTxt: \"Finalizing view...\",\r\n                                loadingDone: true\r\n                            });\r\n                        }).catch((err: any) => { })\r\n                    })\r\n\r\n                }).catch((errResponse: any) => {\r\n                    //console.log(\"browse-dataset errResponse: \");\r\n                    //console.log(errResponse.response.status);\r\n                    // IF errResponse.response EXISTS CONTINUE, IF NOT THAT COULD BE 504 ERROR WHICH DOESNT RETURN ANY STATUS OF API CALL\r\n                    if (errResponse.response) {\r\n                        // IF BROWSE-DATASET FAILED WITH RESPONSE 501 TRY ENTER-SESSION AND BROWSE-DATASET ONE MORE TIME\r\n                        if (errResponse.response.status === 501) {\r\n                            if (this.loadingRetryCounter < 2) {\r\n                                this.loadingRetryCounter++;\r\n                                this.checkMetabaseSession(urlParamDatasetId, findProjectId);\r\n                            } else {\r\n                                this.setState({\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Something went wrong. Redirecting back to Datasets...</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'error',\r\n                                    snackbarOpen: true,\r\n                                    statusState: \"error\",\r\n                                    loadingDone: true,\r\n                                    iFrameContentLoaded: true\r\n                                    //hideAutoLayoutLoading: true\r\n                                });\r\n                                setTimeout(() => {\r\n                                    this.props.history.push(`/dashboard/project/${findProjectId}`);\r\n                                }, 3000)\r\n                            }\r\n                        } else {\r\n                            // IF BROWSE-DATASET FAILED WITH RESPONSE OTHER THAN 501 (E.G. 500) TRY BROWSE-DATASET ONE MORE TIME\r\n                            //console.log(\"browseDataset: \");\r\n                            //console.log(res);\r\n                            browseDataset(urlParamDatasetId, findProjectId).then((res: any) => {\r\n                                metabaseUrl = res;\r\n\r\n                                var metabaseUrlArr = metabaseUrl.split(\"--\");\r\n                                var metabaseUrlCleaned = metabaseUrlArr[0];\r\n\r\n                                var metabaseUrlCleanedArr = (metabaseUrlCleaned).split(\"/\");\r\n                                // eslint-disable-next-line\r\n                                var metabaseUrlCleaned2 = metabaseUrlCleanedArr[metabaseUrlCleanedArr.length - 1];\r\n\r\n                                var metabaseUrlSlashPartArr = (metabaseUrlArr[1]).split(\"/\");\r\n                                // eslint-disable-next-line\r\n                                var metabaseDbId = metabaseUrlSlashPartArr[metabaseUrlSlashPartArr.length - 1];\r\n\r\n                                this.setState({\r\n                                    loadingTxt: \"Working on details...\",\r\n                                    iFrameURL: METABASE_URL + \"\" + metabaseUrl\r\n                                })\r\n\r\n                                var colNameObject: any = [];\r\n                                getDatasetHeader(urlParamDatasetId).then((getDatasetHeader_Res: any) => {\r\n                                    if (getDatasetHeader_Res.column_names) {\r\n                                        Object.keys(getDatasetHeader_Res.column_names).map((colName: any) => {\r\n                                            //console.log(\"colName: \" + getDatasetHeader_Res.column_names[colName]);\r\n                                            colNameObject.push(getDatasetHeader_Res.column_names[colName])\r\n                                            return ''\r\n                                        })\r\n                                    }\r\n                                }).catch((err: any) => {\r\n                                    getDatasetHeader(urlParamDatasetId).then((getDatasetHeader_Res: any) => {\r\n                                        if (getDatasetHeader_Res.column_names) {\r\n                                            Object.keys(getDatasetHeader_Res.column_names).map((colName: any) => {\r\n                                                //console.log(\"colName: \" + getDatasetHeader_Res.column_names[colName]);\r\n                                                colNameObject.push(getDatasetHeader_Res.column_names[colName])\r\n                                                return ''\r\n                                            })\r\n                                        }\r\n                                    }).catch((err: any) => { })\r\n                                })\r\n\r\n                                this.setState({ loadingTxt: \"Preparing Dataset view...\" })\r\n\r\n                                getDatasetCleanFunctions().then((getDatasetCleanFunctionsRes: any) => {\r\n                                    //console.log(\"getDatasetCleanFunctionsRes: \");\r\n                                    //console.log(getDatasetCleanFunctionsRes.data.options);\r\n                                    var uniformizationPreferencesArr = {};\r\n                                    //uniformizationPreferencesArr.push({\"uniformization_types\": getDatasetCleanFunctionsRes.data.uniformization_types});\r\n                                    //uniformizationPreferencesArr.push({\"uniformization_formats\": getDatasetCleanFunctionsRes.data.uniformization_formats});\r\n                                    uniformizationPreferencesArr[\"uniformization_types\"] = getDatasetCleanFunctionsRes.data.uniformization_types;\r\n                                    uniformizationPreferencesArr[\"uniformization_formats\"] = getDatasetCleanFunctionsRes.data.uniformization_formats;\r\n\r\n                                    this.setState({\r\n                                        projectId: findProjectId,\r\n                                        projectName: findProjectName,\r\n                                        datasetId: urlParamDatasetId,\r\n                                        datasetName: findDatasetName,\r\n                                        datasetHeader: colNameObject,\r\n                                        //iFrameURL: \"https://dev-ui.ikigailabs.io/metabase-login/navigate?url=\" + metabaseUrl,\r\n                                        dataPrepOptions: getDatasetCleanFunctionsRes.data.options,\r\n                                        uniformizationPreferences: uniformizationPreferencesArr,\r\n                                        //metabaseContent: metabaseResponse\r\n                                        loadingTxt: \"Finalizing view...\",\r\n                                        loadingDone: true\r\n                                    });\r\n                                }).catch((err: any) => {\r\n                                    getDatasetCleanFunctions().then((getDatasetCleanFunctionsRes: any) => {\r\n                                        var uniformizationPreferencesArr = {};\r\n                                        uniformizationPreferencesArr[\"uniformization_types\"] = getDatasetCleanFunctionsRes.data.uniformization_types;\r\n                                        uniformizationPreferencesArr[\"uniformization_formats\"] = getDatasetCleanFunctionsRes.data.uniformization_formats;\r\n\r\n                                        this.setState({\r\n                                            projectId: findProjectId,\r\n                                            projectName: findProjectName,\r\n                                            datasetId: urlParamDatasetId,\r\n                                            datasetName: findDatasetName,\r\n                                            datasetHeader: colNameObject,\r\n                                            //iFrameURL: \"https://dev-ui.ikigailabs.io/metabase-login/navigate?url=\" + metabaseUrl,\r\n                                            dataPrepOptions: getDatasetCleanFunctionsRes.data.options,\r\n                                            uniformizationPreferences: uniformizationPreferencesArr,\r\n                                            //metabaseContent: metabaseResponse\r\n                                            loadingTxt: \"Finalizing view...\",\r\n                                            loadingDone: true\r\n                                        });\r\n                                    }).catch((err: any) => { })\r\n                                })\r\n                            }).catch((err: any) => {\r\n                                this.setState({\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Something went wrong. Redirecting back to Datasets...</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'error',\r\n                                    snackbarOpen: true,\r\n                                    statusState: \"error\",\r\n                                    loadingDone: true,\r\n                                    iFrameContentLoaded: true\r\n                                    //hideAutoLayoutLoading: true\r\n                                });\r\n                                setTimeout(() => {\r\n                                    this.props.history.push(`/dashboard/project/${findProjectId}`);\r\n                                }, 3000)\r\n                            });\r\n                        }\r\n                    } else {\r\n                        // IF 504 GATEWAY TIMEOUT\r\n                        browseDataset(urlParamDatasetId, findProjectId).then((res: any) => {\r\n                            metabaseUrl = res;\r\n\r\n                            var metabaseUrlArr = metabaseUrl.split(\"--\");\r\n                            var metabaseUrlCleaned = metabaseUrlArr[0];\r\n\r\n                            var metabaseUrlCleanedArr = (metabaseUrlCleaned).split(\"/\");\r\n                            // eslint-disable-next-line\r\n                            var metabaseUrlCleaned2 = metabaseUrlCleanedArr[metabaseUrlCleanedArr.length - 1];\r\n\r\n                            var metabaseUrlSlashPartArr = (metabaseUrlArr[1]).split(\"/\");\r\n                            // eslint-disable-next-line\r\n                            var metabaseDbId = metabaseUrlSlashPartArr[metabaseUrlSlashPartArr.length - 1];\r\n\r\n                            this.setState({\r\n                                loadingTxt: \"Working on details...\",\r\n                                iFrameURL: METABASE_URL + \"\" + metabaseUrl\r\n                            })\r\n\r\n                            var colNameObject: any = [];\r\n                            getDatasetHeader(urlParamDatasetId).then((getDatasetHeader_Res: any) => {\r\n                                if (getDatasetHeader_Res.column_names) {\r\n                                    Object.keys(getDatasetHeader_Res.column_names).map((colName: any) => {\r\n                                        //console.log(\"colName: \" + getDatasetHeader_Res.column_names[colName]);\r\n                                        colNameObject.push(getDatasetHeader_Res.column_names[colName])\r\n                                        return ''\r\n                                    })\r\n                                }\r\n                            }).catch((err: any) => {\r\n                                getDatasetHeader(urlParamDatasetId).then((getDatasetHeader_Res: any) => {\r\n                                    if (getDatasetHeader_Res.column_names) {\r\n                                        Object.keys(getDatasetHeader_Res.column_names).map((colName: any) => {\r\n                                            //console.log(\"colName: \" + getDatasetHeader_Res.column_names[colName]);\r\n                                            colNameObject.push(getDatasetHeader_Res.column_names[colName])\r\n                                            return ''\r\n                                        })\r\n                                    }\r\n                                }).catch((err: any) => { })\r\n                            })\r\n\r\n                            this.setState({ loadingTxt: \"Preparing Dataset view...\" })\r\n\r\n                            getDatasetCleanFunctions().then((getDatasetCleanFunctionsRes: any) => {\r\n                                //console.log(\"getDatasetCleanFunctionsRes: \");\r\n                                //console.log(getDatasetCleanFunctionsRes.data.options);\r\n                                var uniformizationPreferencesArr = {};\r\n                                //uniformizationPreferencesArr.push({\"uniformization_types\": getDatasetCleanFunctionsRes.data.uniformization_types});\r\n                                //uniformizationPreferencesArr.push({\"uniformization_formats\": getDatasetCleanFunctionsRes.data.uniformization_formats});\r\n                                uniformizationPreferencesArr[\"uniformization_types\"] = getDatasetCleanFunctionsRes.data.uniformization_types;\r\n                                uniformizationPreferencesArr[\"uniformization_formats\"] = getDatasetCleanFunctionsRes.data.uniformization_formats;\r\n\r\n                                this.setState({\r\n                                    projectId: findProjectId,\r\n                                    projectName: findProjectName,\r\n                                    datasetId: urlParamDatasetId,\r\n                                    datasetName: findDatasetName,\r\n                                    datasetHeader: colNameObject,\r\n                                    //iFrameURL: \"https://dev-ui.ikigailabs.io/metabase-login/navigate?url=\" + metabaseUrl,\r\n                                    dataPrepOptions: getDatasetCleanFunctionsRes.data.options,\r\n                                    uniformizationPreferences: uniformizationPreferencesArr,\r\n                                    //metabaseContent: metabaseResponse\r\n                                    loadingTxt: \"Finalizing view...\",\r\n                                    loadingDone: true\r\n                                });\r\n                            }).catch((err: any) => {\r\n                                getDatasetCleanFunctions().then((getDatasetCleanFunctionsRes: any) => {\r\n                                    var uniformizationPreferencesArr = {};\r\n                                    uniformizationPreferencesArr[\"uniformization_types\"] = getDatasetCleanFunctionsRes.data.uniformization_types;\r\n                                    uniformizationPreferencesArr[\"uniformization_formats\"] = getDatasetCleanFunctionsRes.data.uniformization_formats;\r\n\r\n                                    this.setState({\r\n                                        projectId: findProjectId,\r\n                                        projectName: findProjectName,\r\n                                        datasetId: urlParamDatasetId,\r\n                                        datasetName: findDatasetName,\r\n                                        datasetHeader: colNameObject,\r\n                                        //iFrameURL: \"https://dev-ui.ikigailabs.io/metabase-login/navigate?url=\" + metabaseUrl,\r\n                                        dataPrepOptions: getDatasetCleanFunctionsRes.data.options,\r\n                                        uniformizationPreferences: uniformizationPreferencesArr,\r\n                                        //metabaseContent: metabaseResponse\r\n                                        loadingTxt: \"Finalizing view...\",\r\n                                        loadingDone: true\r\n                                    });\r\n                                }).catch((err: any) => { })\r\n                            })\r\n                        }).catch((err: any) => {\r\n                            this.setState({\r\n                                snackbarMessage: (\r\n                                    <Fragment>\r\n                                        <div className=\"msg\">Something went wrong. Redirecting back to Datasets...</div>\r\n                                    </Fragment>\r\n                                ),\r\n                                snackbarType: 'error',\r\n                                snackbarOpen: true,\r\n                                statusState: \"error\",\r\n                                loadingDone: true,\r\n                                iFrameContentLoaded: true\r\n                                //hideAutoLayoutLoading: true\r\n                            });\r\n                            setTimeout(() => {\r\n                                this.props.history.push(`/dashboard/project/${findProjectId}`);\r\n                            }, 3000)\r\n                        });\r\n                    }\r\n                });\r\n                //}\r\n            });\r\n        } else {\r\n            if (this.loadingRetryCounter < 3) {\r\n                this.loadingRetryCounter++;\r\n                this.checkMetabaseSession(urlParamDatasetId, findProjectId);\r\n            } else {\r\n                this.setState({\r\n                    snackbarMessage: (\r\n                        <Fragment>\r\n                            <div className=\"msg\">Something went wrong. Redirecting back to Datasets...</div>\r\n                        </Fragment>\r\n                    ),\r\n                    snackbarType: 'error',\r\n                    snackbarOpen: true,\r\n                    statusState: \"error\",\r\n                    loadingDone: true,\r\n                    iFrameContentLoaded: true\r\n                    //hideAutoLayoutLoading: true\r\n                });\r\n                setTimeout(() => {\r\n                    this.props.history.push(`/dashboard/project/${findProjectId}`);\r\n                }, 3000)\r\n            }\r\n        }\r\n    }\r\n\r\n    /*iFrameLoaded = () => {\r\n        console.log(\"iFrame Loaded\");\r\n        this.setState({ \r\n            iFrameContentLoaded: true\r\n        });\r\n    }*/\r\n\r\n    handleReloadIFrame = () => {\r\n        setTimeout(() => {\r\n            //console.log(\"iFrame re Loaded\");\r\n            this.setState({\r\n                loadingTxt: \"Finalizing view...\",\r\n                loadingDone: true,\r\n                //iFrameContentLoaded: true\r\n            })\r\n            /*setTimeout(() => {\r\n                console.log(\"iFrame re Loaded and hidden\");\r\n                this.setState({ hideAutoLayoutLoading: true })\r\n            }, 1500);*/\r\n        }, 4500);\r\n    }\r\n\r\n    handleGoBack = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        //console.log(\"CLICKED GO BACK...\", \"this.state.updateOrSave: \", this.state.updateOrSave);\r\n        //this.props.history.goBack();\r\n        //this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n        if (this.state.updateOrSave === 'update') {\r\n            this.setGoBackAnchorEl(event.currentTarget);\r\n        } else {\r\n            this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n        }\r\n    };\r\n\r\n    setGoBackAnchorEl(anchorEle: any) {\r\n        this.setState({\r\n            goBackAnchor: anchorEle\r\n        })\r\n    }\r\n\r\n    handleGoBackPopupClose = () => {\r\n        this.setState({\r\n            goBackAnchor: null\r\n        })\r\n    }\r\n\r\n    handleGoBackPopupCloseAndExit = () => {\r\n        this.setState({\r\n            goBackAnchor: null\r\n        });\r\n        this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n    }\r\n\r\n    handleGoBackPopupSaveAndExit = () => {\r\n        saveDataset(this.state.datasetId, true, this.datasetName, \"\").then((saveDatasetRes: any) => {\r\n            this.setState({\r\n                saveDialogOpen: false,\r\n                newDatasetNameExists: false,\r\n                isSaveInProgress: false,\r\n                snackbarMessage: (\r\n                    <Fragment>\r\n                        <div className=\"msg\">Saved Dataset succesfully</div>\r\n                    </Fragment>\r\n                ),\r\n                snackbarType: 'success',\r\n                snackbarOpen: true\r\n            });\r\n            this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n        }).catch((err: any) => {\r\n            if (err === 501) {\r\n                enterSessionManually(this.state.projectId).then((enterSessionNewID: any) => {\r\n                    saveDataset(this.state.datasetId, true, this.datasetName, \"\").then((saveDatasetRes: any) => {\r\n                        this.setState({\r\n                            saveDialogOpen: false,\r\n                            newDatasetNameExists: false,\r\n                            isSaveInProgress: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'success',\r\n                            snackbarOpen: true\r\n                        });\r\n                        this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n                    }).catch((err: any) => {\r\n                        this.setState({\r\n                            saveDialogOpen: false,\r\n                            newDatasetNameExists: false,\r\n                            isSaveInProgress: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'error',\r\n                            snackbarOpen: true\r\n                        });\r\n                        this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n                    });\r\n                }).catch((err: any) => {\r\n                    this.setState({\r\n                        saveDialogOpen: false,\r\n                        newDatasetNameExists: false,\r\n                        isSaveInProgress: false,\r\n                        snackbarMessage: (\r\n                            <Fragment>\r\n                                <div className=\"msg\">Something went wrong. Please try again</div>\r\n                            </Fragment>\r\n                        ),\r\n                        snackbarType: 'error',\r\n                        snackbarOpen: true\r\n                    });\r\n                    this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n                });\r\n            } else {\r\n                saveDataset(this.state.datasetId, true, this.datasetName, \"\").then((saveDatasetRes: any) => {\r\n                    this.setState({\r\n                        saveDialogOpen: false,\r\n                        newDatasetNameExists: false,\r\n                        isSaveInProgress: false,\r\n                        snackbarMessage: (\r\n                            <Fragment>\r\n                                <div className=\"msg\">Saved Dataset succesfully</div>\r\n                            </Fragment>\r\n                        ),\r\n                        snackbarType: 'success',\r\n                        snackbarOpen: true\r\n                    });\r\n                    this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n                }).catch((err: any) => {\r\n                    this.setState({\r\n                        saveDialogOpen: false,\r\n                        newDatasetNameExists: false,\r\n                        isSaveInProgress: false,\r\n                        snackbarMessage: (\r\n                            <Fragment>\r\n                                <div className=\"msg\">Something went wrong. Please try again</div>\r\n                            </Fragment>\r\n                        ),\r\n                        snackbarType: 'error',\r\n                        snackbarOpen: true\r\n                    });\r\n                    this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onChangeTabs(newValue: any) {\r\n        //console.log(\"newValue: \" + newValue.currentTar);\r\n        //console.log(newValue);\r\n        this.setState({ tabValue: newValue });\r\n    }\r\n\r\n    handleDataPrepDialogOpen = (dataprepTitle: string) => {\r\n        this.setState({\r\n            selectedDataprepName: dataprepTitle,\r\n            isDataprepDialogOpen: true\r\n        });\r\n    }\r\n\r\n    handleDataprepDialogSubmit = (columnNameSelected: string, uTypeSelected: string, uFormatSelected: string) => {\r\n        var datasetID = this.state.datasetId;\r\n        var projectID = this.state.projectId;\r\n        var selectedDataprepName = this.state.selectedDataprepName;\r\n        //var colNameSelected = getCodeString(columnNameSelected);\r\n        //console.log(\"columnNameSelected: \" + columnNameSelected + \", colNameSelected: \" + colNameSelected);\r\n        //console.log(\"clicked dataprep option: \" + option + \", datasetID: \" + datasetID + \", projectID: \" + projectID);\r\n        var eventAt = getCurrentDate();\r\n        cleanDataset(datasetID, projectID, selectedDataprepName, columnNameSelected, uTypeSelected, uFormatSelected).then((cleanDatasetRes: any) => {\r\n            //console.log(\"cleanDatasetRes: \");\r\n            //console.log(cleanDatasetRes);\r\n            //this.handleDataprepDialogCancel();\r\n            this.setState({\r\n                isDataprepDialogOpen: false,\r\n                snackbarMessage: (\r\n                    <Fragment>\r\n                        <div className=\"msg\">Dataset has been updated succesfully</div>\r\n                    </Fragment>\r\n                ),\r\n                snackbarType: 'success',\r\n                snackbarOpen: true,\r\n                loadingTxt: \"Re-loading dataset...\",\r\n                hideAutoLayoutLoading: false,\r\n                loadingDone: true,\r\n                iFrameContentLoaded: false,\r\n                iframeKey: this.state.iframeKey + 1,\r\n                statusState: \"success\",\r\n                statusTxt: this.state.selectedDataprepName,\r\n                statusDatetime: eventAt,\r\n                updateOrSave: 'update'\r\n            });\r\n            //this.handleReloadIFrame();\r\n        }).catch((err: any) => {\r\n            //console.log(\"cleanDataset has error!\");\r\n            //console.log(err);\r\n            if (err === 501) {\r\n                enterSessionManually(projectID).then((enterSessionNewID: any) => {\r\n                    cleanDataset(datasetID, projectID, selectedDataprepName, columnNameSelected, uTypeSelected, uFormatSelected).then((cleanDatasetRes: any) => {\r\n                        //console.log(\"cleanDatasetRes: \");\r\n                        //console.log(cleanDatasetRes);\r\n                        //this.handleDataprepDialogCancel();\r\n                        this.setState({\r\n                            isDataprepDialogOpen: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Dataset has been updated succesfully</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'success',\r\n                            snackbarOpen: true,\r\n                            loadingTxt: \"Re-loading dataset...\",\r\n                            hideAutoLayoutLoading: false,\r\n                            loadingDone: true,\r\n                            iFrameContentLoaded: false,\r\n                            iframeKey: this.state.iframeKey + 1,\r\n                            statusState: \"success\",\r\n                            statusTxt: this.state.selectedDataprepName,\r\n                            statusDatetime: eventAt,\r\n                            updateOrSave: 'update'\r\n                        });\r\n                        //this.handleReloadIFrame();\r\n                    }).catch((err: any) => {\r\n                        this.setState({\r\n                            isDataprepDialogOpen: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'error',\r\n                            snackbarOpen: true,\r\n                            statusState: \"error\",\r\n                            statusTxt: this.state.selectedDataprepName,\r\n                            statusDatetime: eventAt\r\n                        });\r\n                    });\r\n                }).catch((err: any) => {\r\n                    this.setState({\r\n                        isDataprepDialogOpen: false,\r\n                        snackbarMessage: (\r\n                            <Fragment>\r\n                                <div className=\"msg\">Something went wrong. Please try again</div>\r\n                            </Fragment>\r\n                        ),\r\n                        snackbarType: 'error',\r\n                        snackbarOpen: true,\r\n                        statusState: \"error\",\r\n                        statusTxt: this.state.selectedDataprepName,\r\n                        statusDatetime: eventAt\r\n                    });\r\n                });\r\n            } else {\r\n                cleanDataset(datasetID, projectID, selectedDataprepName, columnNameSelected, uTypeSelected, uFormatSelected).then((cleanDatasetRes: any) => {\r\n                    //console.log(\"cleanDatasetRes: \");\r\n                    //console.log(cleanDatasetRes);\r\n                    //this.handleDataprepDialogCancel();\r\n                    this.setState({\r\n                        isDataprepDialogOpen: false,\r\n                        snackbarMessage: (\r\n                            <Fragment>\r\n                                <div className=\"msg\">Dataset has been updated succesfully</div>\r\n                            </Fragment>\r\n                        ),\r\n                        snackbarType: 'success',\r\n                        snackbarOpen: true,\r\n                        loadingTxt: \"Re-loading dataset...\",\r\n                        hideAutoLayoutLoading: false,\r\n                        loadingDone: true,\r\n                        iFrameContentLoaded: false,\r\n                        iframeKey: this.state.iframeKey + 1,\r\n                        statusState: \"success\",\r\n                        statusTxt: this.state.selectedDataprepName,\r\n                        statusDatetime: eventAt,\r\n                        updateOrSave: 'update'\r\n                    });\r\n                    //this.handleReloadIFrame();\r\n                }).catch((err: any) => {\r\n                    this.setState({\r\n                        isDataprepDialogOpen: false,\r\n                        snackbarMessage: (\r\n                            <Fragment>\r\n                                <div className=\"msg\">Something went wrong. Please try again</div>\r\n                            </Fragment>\r\n                        ),\r\n                        snackbarType: 'error',\r\n                        snackbarOpen: true,\r\n                        statusState: \"error\",\r\n                        statusTxt: this.state.selectedDataprepName,\r\n                        statusDatetime: eventAt\r\n                    });\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDataprepDialogCancel = () => {\r\n        this.setState({ isDataprepDialogOpen: false });\r\n    }\r\n\r\n    handleSnackbarClose = () => {\r\n        this.setState({ snackbarOpen: false });\r\n    };\r\n\r\n    // Save Dataset\r\n\r\n    handleSaveDialogOpen = () => {\r\n        this.setState({ saveDialogOpen: true });\r\n    }\r\n\r\n    handleSaveDialogClose = () => {\r\n        this.setState({ saveDialogOpen: false });\r\n    }\r\n\r\n    handleSaveDataset = (datasetId: string, overwrite: boolean, newDatasetName: string, newDatasetId: string) => {\r\n        this.setState({\r\n            isSaveInProgress: true\r\n        })\r\n        //console.log(\"handleSaveDataset: \");\r\n        //console.log(this.props.data);\r\n        //console.log(\"datasetId: \" + datasetId + \", overwrite: \" + overwrite + \", newDatasetName: \" + newDatasetName + \", newDatasetId: \" + newDatasetId);\r\n        var datasets: any = [];\r\n        var checkDatasetNameOverlap = false;\r\n        var overlapedDatasetId: string = \"\";\r\n        if (overwrite === false) {\r\n            getDatasetsForProject(this.state.projectId).then((getDatasetsForProjectRes: any) => {\r\n                datasets = getDatasetsForProjectRes;\r\n                //console.log(\"getDatasetsForProjectRes: \");\r\n                //console.log(getDatasetsForProjectRes);\r\n                datasets.map((datasetData: any) => {\r\n                    //console.log(\"datasetData: \");\r\n                    //console.log(datasetData);\r\n                    if (datasetData.name === newDatasetName && datasetData.project_id === this.state.projectId) {\r\n                        //console.log(\"HITHITHIT!!! - NAME: \" + newDatasetName + \", name: \" + datasetData.name);\r\n                        this.setState({ newDatasetNameExists: true });\r\n                        checkDatasetNameOverlap = true;\r\n                        overlapedDatasetId = datasetData.dataset_id\r\n                    }\r\n                    return ''\r\n                });\r\n                //console.log(\"checkDatasetNameOverlap: \");\r\n                //console.log(checkDatasetNameOverlap);\r\n                if (checkDatasetNameOverlap === false) {\r\n                    saveDataset(datasetId, overwrite, newDatasetName, overlapedDatasetId).then((saveDatasetRes: any) => {\r\n                        this.setState({\r\n                            saveDialogOpen: false,\r\n                            newDatasetNameExists: false,\r\n                            isSaveInProgress: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'success',\r\n                            snackbarOpen: true,\r\n                            updateOrSave: 'save'\r\n                        });\r\n                    }).catch((err: any) => {\r\n                        if (err === 501) {\r\n                            enterSessionManually(this.state.projectId).then((enterSessionNewID: any) => {\r\n                                saveDataset(datasetId, overwrite, newDatasetName, overlapedDatasetId).then((saveDatasetRes: any) => {\r\n                                    this.setState({\r\n                                        saveDialogOpen: false,\r\n                                        newDatasetNameExists: false,\r\n                                        isSaveInProgress: false,\r\n                                        snackbarMessage: (\r\n                                            <Fragment>\r\n                                                <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                            </Fragment>\r\n                                        ),\r\n                                        snackbarType: 'success',\r\n                                        snackbarOpen: true,\r\n                                        updateOrSave: 'save'\r\n                                    });\r\n                                }).catch((err: any) => {\r\n                                    this.setState({\r\n                                        saveDialogOpen: false,\r\n                                        newDatasetNameExists: false,\r\n                                        isSaveInProgress: false,\r\n                                        snackbarMessage: (\r\n                                            <Fragment>\r\n                                                <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                            </Fragment>\r\n                                        ),\r\n                                        snackbarType: 'error',\r\n                                        snackbarOpen: true\r\n                                    });\r\n                                });\r\n                            }).catch((err: any) => {\r\n                                this.setState({\r\n                                    saveDialogOpen: false,\r\n                                    newDatasetNameExists: false,\r\n                                    isSaveInProgress: false,\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'error',\r\n                                    snackbarOpen: true\r\n                                });\r\n                            });\r\n                        } else {\r\n                            saveDataset(datasetId, overwrite, newDatasetName, overlapedDatasetId).then((saveDatasetRes: any) => {\r\n                                this.setState({\r\n                                    saveDialogOpen: false,\r\n                                    newDatasetNameExists: false,\r\n                                    isSaveInProgress: false,\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'success',\r\n                                    snackbarOpen: true,\r\n                                    updateOrSave: 'save'\r\n                                });\r\n                            }).catch((err: any) => {\r\n                                this.setState({\r\n                                    saveDialogOpen: false,\r\n                                    newDatasetNameExists: false,\r\n                                    isSaveInProgress: false,\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'error',\r\n                                    snackbarOpen: true\r\n                                });\r\n                            });\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        isSaveInProgress: false\r\n                    })\r\n                }\r\n            }).catch((err: any) => {\r\n                this.setState({\r\n                    saveDialogOpen: false,\r\n                    newDatasetNameExists: false,\r\n                    isSaveInProgress: false,\r\n                    snackbarMessage: (\r\n                        <Fragment>\r\n                            <div className=\"msg\">Something went wrong. Please try again</div>\r\n                        </Fragment>\r\n                    ),\r\n                    snackbarType: 'error',\r\n                    snackbarOpen: true\r\n                });\r\n            });\r\n        } else {\r\n            var existingDatasetName = this.datasetName;\r\n            saveDataset(datasetId, overwrite, existingDatasetName, newDatasetId).then((saveDatasetRes: any) => {\r\n                this.setState({\r\n                    saveDialogOpen: false,\r\n                    newDatasetNameExists: false,\r\n                    isSaveInProgress: false,\r\n                    snackbarMessage: (\r\n                        <Fragment>\r\n                            <div className=\"msg\">Saved Dataset succesfully</div>\r\n                        </Fragment>\r\n                    ),\r\n                    snackbarType: 'success',\r\n                    snackbarOpen: true,\r\n                    updateOrSave: 'save'\r\n                });\r\n            }).catch((err: any) => {\r\n                if (err === 501) {\r\n                    enterSessionManually(this.state.projectId).then((enterSessionNewID: any) => {\r\n                        saveDataset(datasetId, overwrite, existingDatasetName, newDatasetId).then((saveDatasetRes: any) => {\r\n                            this.setState({\r\n                                saveDialogOpen: false,\r\n                                newDatasetNameExists: false,\r\n                                isSaveInProgress: false,\r\n                                snackbarMessage: (\r\n                                    <Fragment>\r\n                                        <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                    </Fragment>\r\n                                ),\r\n                                snackbarType: 'success',\r\n                                snackbarOpen: true,\r\n                                updateOrSave: 'save'\r\n                            });\r\n                        }).catch((err: any) => {\r\n                            this.setState({\r\n                                saveDialogOpen: false,\r\n                                newDatasetNameExists: false,\r\n                                isSaveInProgress: false,\r\n                                snackbarMessage: (\r\n                                    <Fragment>\r\n                                        <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                    </Fragment>\r\n                                ),\r\n                                snackbarType: 'error',\r\n                                snackbarOpen: true\r\n                            });\r\n                        });\r\n                    }).catch((err: any) => {\r\n                        this.setState({\r\n                            saveDialogOpen: false,\r\n                            newDatasetNameExists: false,\r\n                            isSaveInProgress: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'error',\r\n                            snackbarOpen: true\r\n                        });\r\n                    });\r\n                } else {\r\n                    saveDataset(datasetId, overwrite, existingDatasetName, newDatasetId).then((saveDatasetRes: any) => {\r\n                        this.setState({\r\n                            saveDialogOpen: false,\r\n                            newDatasetNameExists: false,\r\n                            isSaveInProgress: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'success',\r\n                            snackbarOpen: true,\r\n                            updateOrSave: 'save'\r\n                        });\r\n                    }).catch((err: any) => {\r\n                        this.setState({\r\n                            saveDialogOpen: false,\r\n                            newDatasetNameExists: false,\r\n                            isSaveInProgress: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'error',\r\n                            snackbarOpen: true\r\n                        });\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDismissOverwriteDataset = () => {\r\n        this.setState({ newDatasetNameExists: false });\r\n    }\r\n\r\n    handleSaveOverwriteDataset = (datasetId: string, overwrite: boolean, newDatasetName: string, newDatasetId: string) => {\r\n        this.setState({\r\n            isSaveInProgress: true\r\n        })\r\n        //console.log(\"handleSaveDataset: \");\r\n        //console.log(this.props.data);\r\n        //console.log(\"datasetId: \" + datasetId + \", overwrite: \" + overwrite + \", newDatasetName: \" + newDatasetName + \", newDatasetId: \" + newDatasetId);\r\n        var datasets: any = [];\r\n        var checkDatasetNameOverlap = false;\r\n        var overlapedDatasetId: string = \"\";\r\n        if (overwrite === false) {\r\n            getDatasetsForProject(this.state.projectId).then((getDatasetsForProjectRes: any) => {\r\n                datasets = getDatasetsForProjectRes;\r\n                //console.log(\"getDatasetsForProjectRes: \");\r\n                //console.log(getDatasetsForProjectRes);\r\n                datasets.map((datasetData: any) => {\r\n                    //console.log(\"datasetData: \");\r\n                    //console.log(datasetData);\r\n                    if (datasetData.name === newDatasetName && datasetData.project_id === this.state.projectId) {\r\n                        //console.log(\"HITHITHIT!!! - NAME: \" + newDatasetName + \", name: \" + datasetData.name);\r\n                        this.setState({ newDatasetNameExists: true });\r\n                        checkDatasetNameOverlap = true;\r\n                        overlapedDatasetId = datasetData.dataset_id\r\n                    }\r\n                    return ''\r\n                });\r\n                //console.log(\"checkDatasetNameOverlap: \");\r\n                //console.log(checkDatasetNameOverlap);\r\n                if (checkDatasetNameOverlap === true) {\r\n                    saveDataset(datasetId, overwrite, newDatasetName, overlapedDatasetId).then((saveDatasetRes: any) => {\r\n                        this.setState({\r\n                            saveDialogOpen: false,\r\n                            newDatasetNameExists: false,\r\n                            isSaveInProgress: false,\r\n                            snackbarMessage: (\r\n                                <Fragment>\r\n                                    <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                </Fragment>\r\n                            ),\r\n                            snackbarType: 'success',\r\n                            snackbarOpen: true,\r\n                            updateOrSave: 'save'\r\n                        });\r\n                    }).catch((err: any) => {\r\n                        if (err === 501) {\r\n                            enterSessionManually(this.state.projectId).then((enterSessionNewID: any) => {\r\n                                saveDataset(datasetId, overwrite, newDatasetName, overlapedDatasetId).then((saveDatasetRes: any) => {\r\n                                    this.setState({\r\n                                        saveDialogOpen: false,\r\n                                        newDatasetNameExists: false,\r\n                                        isSaveInProgress: false,\r\n                                        snackbarMessage: (\r\n                                            <Fragment>\r\n                                                <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                            </Fragment>\r\n                                        ),\r\n                                        snackbarType: 'success',\r\n                                        snackbarOpen: true,\r\n                                        updateOrSave: 'save'\r\n                                    });\r\n                                }).catch((err: any) => {\r\n                                    this.setState({\r\n                                        saveDialogOpen: false,\r\n                                        newDatasetNameExists: false,\r\n                                        isSaveInProgress: false,\r\n                                        snackbarMessage: (\r\n                                            <Fragment>\r\n                                                <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                            </Fragment>\r\n                                        ),\r\n                                        snackbarType: 'error',\r\n                                        snackbarOpen: true\r\n                                    });\r\n                                });\r\n                            }).catch((err: any) => {\r\n                                this.setState({\r\n                                    saveDialogOpen: false,\r\n                                    newDatasetNameExists: false,\r\n                                    isSaveInProgress: false,\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'error',\r\n                                    snackbarOpen: true\r\n                                });\r\n                            });\r\n                        } else {\r\n                            saveDataset(datasetId, overwrite, newDatasetName, overlapedDatasetId).then((saveDatasetRes: any) => {\r\n                                this.setState({\r\n                                    saveDialogOpen: false,\r\n                                    newDatasetNameExists: false,\r\n                                    isSaveInProgress: false,\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Saved Dataset succesfully</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'success',\r\n                                    snackbarOpen: true,\r\n                                    updateOrSave: 'save'\r\n                                });\r\n                            }).catch((err: any) => {\r\n                                this.setState({\r\n                                    saveDialogOpen: false,\r\n                                    newDatasetNameExists: false,\r\n                                    isSaveInProgress: false,\r\n                                    snackbarMessage: (\r\n                                        <Fragment>\r\n                                            <div className=\"msg\">Something went wrong. Please try again</div>\r\n                                        </Fragment>\r\n                                    ),\r\n                                    snackbarType: 'error',\r\n                                    snackbarOpen: true\r\n                                });\r\n                            });\r\n                        }\r\n                    })\r\n                }\r\n            }).catch((err: any) => {\r\n                this.setState({\r\n                    saveDialogOpen: false,\r\n                    newDatasetNameExists: false,\r\n                    isSaveInProgress: false,\r\n                    snackbarMessage: (\r\n                        <Fragment>\r\n                            <div className=\"msg\">Something went wrong. Please try again</div>\r\n                        </Fragment>\r\n                    ),\r\n                    snackbarType: 'error',\r\n                    snackbarOpen: true\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // Save Dataset - END\r\n\r\n    render() {\r\n        const {\r\n            projectId,\r\n            projectName,\r\n            iFrameURL,\r\n            iFrameContentLoaded,\r\n            dataPrepOptions,\r\n            tabValue,\r\n            iframeKey,\r\n            loadingTxt,\r\n            hideAutoLayoutLoading,\r\n            loadingDone,\r\n            statusState,\r\n            statusTxt,\r\n            statusDatetime\r\n        } = this.state;\r\n\r\n        //console.log(\"render metabaseLoginId: \" + this.props.metabaseLogin + \" - \" + this.props.metabaseLoginId + \", metabaseSessionActive: \" + this.state.metabaseSessionActive);\r\n        var loadingFinished = false;\r\n        if (iFrameContentLoaded && loadingDone) {\r\n            loadingFinished = true;\r\n        }\r\n        //console.log(\"iFrameContentLoaded: \" + iFrameContentLoaded + \", loadingDone: \" + loadingDone + \", loadingFinished: \" + loadingFinished);\r\n        return (\r\n          <Fragment>\r\n            <IkigaiLayout\r\n                _type='sub-page'\r\n                _page='Dataset'\r\n                _uploadProgress={this.props.uploadProgress}\r\n                _handleGoBack={(event: any) => this.handleGoBack(event)}\r\n                _content={\r\n                    <>\r\n                        {!hideAutoLayoutLoading &&\r\n                            <IkiLoader\r\n                                loadingTxt={loadingTxt}\r\n                                fadeOut={loadingFinished}\r\n                                history={this.props.history}\r\n                                backLink={`/dashboard/project/${projectId}`}\r\n                            />\r\n                        }\r\n                        <div className={styles.centralPanel}>\r\n                            <iframe\r\n                                title={\"iKigai\"}\r\n                                key={iframeKey}\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                className={styles.metabaseIframe}\r\n                                onLoad={() => {\r\n                                    loadingDone &&\r\n                                        this.setState({ iFrameContentLoaded: true })\r\n                                    //this.iFrameLoaded\r\n                                }}\r\n                                src={iFrameURL}\r\n                                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\r\n                            ></iframe>\r\n                        </div>\r\n                    </>\r\n                }\r\n                _rightSidebar={\r\n                    <>\r\n                        <div className=\"info-drawer-root\">\r\n                            <div className=\"info-drawer-section\">\r\n                                <div className=\"info-drawer-title\">\r\n                                    <span className=\"title\">Info</span>\r\n                                </div>\r\n                                <div className=\"info-drawer-title-group\">\r\n                                    <div className=\"info-drawer-title-title\">Dataset name:</div>\r\n                                    <div className=\"info-drawer-title-subtitle clip-txt\">{this.datasetName}</div>\r\n                                </div>\r\n                                <div className=\"info-drawer-title-group\">\r\n                                    <div className=\"info-drawer-title-title\">Project name:</div>\r\n                                    <div className=\"info-drawer-title-subtitle clip-txt\">{projectName}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"info-drawer-section\">\r\n                                <div className=\"info-drawer-title\">\r\n                                    <span className=\"title\">Actions</span>\r\n                                        {/* <Badge badgeContent=\"\">\r\n                                            <span className=\"title\">Actions</span>\r\n                                            <Tooltip\r\n                                                title={\r\n                                                    <div>\r\n                                                        <div>Action buttons work only as Preview.</div>\r\n                                                        <div>In order to save dataset updates, click on \"Save changes\" button</div>\r\n                                                    </div>\r\n                                                }\r\n                                                interactive\r\n                                                arrow\r\n                                                leaveDelay={500}\r\n                                            >\r\n                                                <span className=\"tooltip-icon\">?</span>\r\n                                            </Tooltip>\r\n                                        </Badge> */}\r\n                                </div>\r\n                                <div className=\"prexel-act-h\">\r\n                                    <div hidden={tabValue !== 0}>\r\n                                        <Box my={2}>\r\n                                            {dataPrepOptions.map((option: string) => (\r\n                                                <FormControl margin=\"dense\" key={option} fullWidth>\r\n                                                    <IkiButton\r\n                                                        _variant='contained'\r\n                                                        _color='default'\r\n                                                        _label={getFriendlyLabel(option)}\r\n                                                        _type='button'\r\n                                                        _align='left'\r\n                                                        _fullWidth={true}\r\n                                                        _loading={false}\r\n                                                        _onClick={() => this.handleDataPrepDialogOpen(option)}\r\n                                                    />\r\n                                                </FormControl>\r\n                                            ))}\r\n                                        </Box>\r\n                                    </div>\r\n                                </div>\r\n                                <Box>\r\n                                    <IkiButton\r\n                                        _variant='contained'\r\n                                        _color='primary'\r\n                                        _label=\"Save changes\"\r\n                                        _type='button'\r\n                                        _align='left'\r\n                                        _fullWidth={true}\r\n                                        _loading={false}\r\n                                        _startIcon={\r\n                                            <SaveIcon />\r\n                                        }\r\n                                        _onClick={() => this.handleSaveDialogOpen()}\r\n                                    />\r\n                                </Box>\r\n                            </div>\r\n                            <div className=\"info-drawer-section status-section-dataset\">\r\n                                <div className=\"info-drawer-title\">\r\n                                    <span className=\"title\">Status</span>\r\n                                </div>\r\n                                {statusTxt !== \"\" &&\r\n                                    <Box mt={2} className=\"status-holder\">\r\n                                        <div\r\n                                            className={statusState === 'success'\r\n                                                ? 'status-row fade-in success'\r\n                                                : 'status-row fade-in failed'\r\n                                            }\r\n                                        >\r\n                                            <div className=\"status-icon\">\r\n                                                {statusState === 'success' ? (\r\n                                                    <CheckIcon fontSize=\"small\" />\r\n                                                ) : (\r\n                                                        <PriorityHighIcon fontSize=\"small\" />\r\n                                                    )}\r\n                                            </div>\r\n                                            <div className=\"status-data\">\r\n                                                <div className=\"status-timestamp clip-txt\">{statusDatetime}</div>\r\n                                                <div className=\"status-user clip-txt\">{getFriendlyLabel(statusTxt)}</div>\r\n                                                <div className=\"status-run_type clip-txt\"></div>\r\n                                                <div className=\"status-message clip-txt\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Box>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                _logoutHandler={this.props.logout}\r\n            />\r\n                {\r\n                    this.state.isDataprepDialogOpen && this.state.selectedDataprepName !== \"\" && this.state.datasetHeader && (\r\n                        <DataprepDialog\r\n                            open={this.state.isDataprepDialogOpen}\r\n                            title={this.state.selectedDataprepName}\r\n                            columnNames={this.state.datasetHeader}\r\n                            uniformizationPreferences={this.state.uniformizationPreferences}\r\n                            onSubmit={\r\n                                (columnNameSelected: string, uTypeSelected: string, uFormatSelected: string) => this.handleDataprepDialogSubmit(columnNameSelected, uTypeSelected, uFormatSelected)\r\n                            }\r\n                            onCancel={this.handleDataprepDialogCancel}\r\n                        />\r\n                    )\r\n                }\r\n                <SnackbarMsg\r\n                    snackbarOpen={this.state.snackbarOpen}\r\n                    snackbarType={this.state.snackbarType}\r\n                    snackbarMsg={this.state.snackbarMessage}\r\n                    onSnackbarClose={this.handleSnackbarClose}\r\n                />\r\n                <SaveDatasetDialog\r\n                    open={this.state.saveDialogOpen}\r\n                    isSaveInProgress={this.state.isSaveInProgress}\r\n                    datasetId={this.state.datasetId}\r\n                    datasetName={this.datasetName}\r\n                    handleCancel={this.handleSaveDialogClose}\r\n                    handleSubmit={\r\n                        (datasetId: string, overwrite: boolean, newDatasetName: string, newDatasetId: string) => this.handleSaveDataset(\r\n                            datasetId, overwrite, newDatasetName, newDatasetId\r\n                        )\r\n                    }\r\n                    newDatasetNameExists={this.state.newDatasetNameExists}\r\n                    dismissOverwriteAlert={() => this.handleDismissOverwriteDataset()}\r\n                    handleSubmitOverwrite={\r\n                        (datasetId: string, overwrite: boolean, newDatasetName: string, newDatasetId: string) => this.handleSaveOverwriteDataset(\r\n                            datasetId, overwrite, newDatasetName, newDatasetId\r\n                        )\r\n                    }\r\n                />\r\n                <Popover\r\n                        open={this.state.goBackAnchor !== null}\r\n                        anchorEl={this.state.goBackAnchor}\r\n                        onClose={() => this.handleGoBackPopupClose()}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <div className={styles.gobackPopupContainer}>\r\n                            <div className=\"goback-popup-title\">Are you sure?</div>\r\n                            <div className=\"goback-popup-content-txt\">\r\n                                <div>It seems you made some changes to this dataset.</div>\r\n                                <div>Do you want to save changes before leaving?</div>\r\n                            </div>\r\n                            <div className=\"goback-popup-buttons\">\r\n                                <IkiButton\r\n                                    _variant='contained'\r\n                                    _color='default'\r\n                                    _label='No, just Exit'\r\n                                    _type='button'\r\n                                    _fullWidth={false}\r\n                                    _loading={false}\r\n                                    _onClick={() => this.handleGoBackPopupCloseAndExit()}\r\n                                />\r\n                                <IkiButton\r\n                                    _variant='contained'\r\n                                    _color='primary'\r\n                                    _label='Yes, Save and Exit'\r\n                                    _type='button'\r\n                                    _fullWidth={false}\r\n                                    _loading={false}\r\n                                    _onClick={() => this.handleGoBackPopupSaveAndExit()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                </Popover>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatasetComponent;","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { State } from '../../reducers';\r\nimport {\r\n  loginMetabaseActionStart,\r\n  handleProjectReturn,\r\n  handleCleanSession,\r\n  logoutAction\r\n} from '../../actions';\r\nimport DatasetComponent from './dataset-component';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  logout: () => {\r\n    dispatch(logoutAction());\r\n  },\r\n  enterSession: (projectId: string) => {\r\n    dispatch(loginMetabaseActionStart(projectId))\r\n  },\r\n  fireReturnToProject: (sourcePage: string) => {\r\n    dispatch(handleProjectReturn(sourcePage))\r\n  },\r\n  cleanSession: () => {\r\n    dispatch(handleCleanSession())\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  data: state.flowReducerState,\r\n  email: state.userReducerState.email,\r\n  metabaseLogin: state.flowReducerState.metabaseLogin,\r\n  metabaseLoginId: state.flowReducerState.metabaseLoginId,\r\n  uploadProgress: state.flowReducerState.uploadProgress,\r\n});\r\n\r\nexport const DatasetContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DatasetComponent);","import React, { Component, Fragment } from 'react';\r\nimport { \r\n  getDashboard,\r\n  enterSession as enterSessionManually,\r\n  browseDashboard, \r\n  finishBrowseDashboard, \r\n  getProject,\r\n  exitSession as exitSessionManually\r\n} from '../../services';\r\nimport IkiLoader from '../../components/IkiLoader';\r\nimport SnackbarMsg from '../../components/SnackbarMsg';\r\nimport IkigaiLayout from '../../components/IkiLayout';\r\nimport styles from './DashComponent.module.scss';\r\n\r\n// const captalize=(str:string)=>{\r\n//   return str.charAt(0).toUpperCase() + str.slice(1);\r\n// }\r\n\r\ninterface Props {\r\n  data: any;\r\n  match: any;\r\n  classes: any;\r\n  history: any;\r\n  email: string;\r\n  uploadProgress: any;\r\n  enterSession: (projectId: string) => void;\r\n  getDatasets: (projectId:string) => void;\r\n  fireReturnToProject: (sourcePage: string) => void;\r\n  cleanSession: () => void;\r\n  logout: () => void;\r\n}\r\n\r\ninterface State {\r\n  dashId: string;\r\n  projectId: string;\r\n  projectName:string;\r\n  snackbarOpen:boolean;\r\n  snackbarMessage:any;\r\n  snackbarType: string;\r\n  dashLoaded:boolean;\r\n  dashData:any;\r\n  dashurl:string;\r\n  loadingTxt:string;\r\n  iFrameContentLoaded:boolean;\r\n  statusDatetime:string;\r\n  statusTxt:string;\r\n  hideAutoLayoutLoading: boolean;\r\n}\r\n\r\nclass DashViewComponent extends Component<Props, State> {\r\n  loadingRetryCounter: number = 0;\r\n  state = {\r\n    dashId: '',\r\n    projectId:'',\r\n    projectName:'',\r\n    browseStatus: '',\r\n    sessionCreated: false,\r\n    createSessionDialogOpened: false,\r\n    snackbarOpen: false,\r\n    snackbarType: '',\r\n    snackbarMessage: null,\r\n    visualizationOpened: false,\r\n    dashLoaded:false,\r\n    dashurl:'',\r\n    loadingTxt:'Loading...',\r\n    iFrameContentLoaded:false,\r\n    statusDatetime:'',\r\n    statusTxt:'',\r\n    dashData:{},\r\n    hideAutoLayoutLoading: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    var urlParamDashId = this.props.match.params['id'];\r\n    var findProjectId: string = \"\";\r\n    var findProjectName: string = \"\";\r\n    this.setState({ \r\n      loadingTxt: \"Loading Dashboard...\",\r\n      dashId: urlParamDashId\r\n    });\r\n    this.props.fireReturnToProject(\"dash\");\r\n    \r\n    getDashboard(urlParamDashId).then((response: any) => {\r\n        findProjectId = response.dashboard.project_id;\r\n        \r\n        this.setState({\r\n          dashData: response.dashboard\r\n        })\r\n        getProject(findProjectId).then((response:any)=>{\r\n          findProjectName = response.project.name\r\n          this.setState({\r\n            projectName: findProjectName\r\n          })\r\n        })\r\n        this.props.getDatasets(findProjectId)\r\n        \r\n        this.initialLoading(urlParamDashId, findProjectId);\r\n    }).catch(()=>{\r\n      this.setState({\r\n        snackbarMessage: (\r\n          <Fragment>\r\n              <div className=\"msg\">Something went wrong. Please try again</div>\r\n          </Fragment>\r\n          ),\r\n          snackbarType: 'error',\r\n          snackbarOpen: true\r\n      })\r\n    })\r\n}\r\n\r\ncheckSession = async (dashboardId: string, projectId: string) => {\r\n  //await exitSession(projectId);\r\n  this.setState({ loadingTxt: \"Session expired. Re-connecting...\" })\r\n  await enterSessionManually(projectId).then((enterSessionNewID: any) =>{\r\n      //console.log(\"enterSessionNewID: \" + enterSessionNewID);\r\n      this.initialLoading(dashboardId, projectId);\r\n  });\r\n  //this.initialLoading(datasetId, projectId);\r\n}\r\n\r\nasync initialLoading(dashboardId: string, projectId: string){\r\n  var urlParamDashId = dashboardId;\r\n  var findProjectId = projectId;\r\n  this.setState({\r\n    projectId:findProjectId\r\n  })\r\n  browseDashboard(findProjectId,dashboardId).then((res:any)=>{\r\n      this.setState({ \r\n        loadingTxt: \"Working on details...\"\r\n      })\r\n      setTimeout(()=>{\r\n        this.setState({ \r\n          loadingTxt: \"Finalizing view...\",\r\n          dashLoaded: true,\r\n          dashurl: res.url\r\n        })\r\n      },3000)\r\n  }).catch((err: any) => {\r\n    if(this.loadingRetryCounter < 3 && err===501){\r\n      this.loadingRetryCounter++;\r\n      this.checkSession(urlParamDashId, findProjectId);\r\n    }else{\r\n      this.setState({\r\n        snackbarMessage: (\r\n          <Fragment>\r\n              <div className=\"msg\">Something went wrong. Please try again</div>\r\n          </Fragment>\r\n          ),\r\n          snackbarType: 'error',\r\n          snackbarOpen: true,\r\n          dashLoaded: true,\r\n          iFrameContentLoaded: true\r\n      });\r\n      setTimeout(() => {\r\n        this.props.history.push(`/dashboard/project/${projectId}`);\r\n      }, 3000)\r\n    }\r\n  });\r\n}\r\n  componentWillUnmount() {\r\n    finishBrowseDashboard(this.state.dashId,this.state.projectId).then((data)=>{\r\n      let pathName:string = '';\r\n      if(this.props.history.location.pathname) {\r\n        pathName = this.props.history.location.pathname;\r\n        var projectId = '';\r\n        if(this.state.projectId) {\r\n          projectId = this.state.projectId;\r\n        }\r\n        if(pathName === '/dashboard/projects' || pathName === '/dashboard/profile') {\r\n          exitSessionManually(projectId).then((exitSessRes: any) => {\r\n            this.props.cleanSession();\r\n          }).catch((exitSessErr: any) => {\r\n            this.props.cleanSession();\r\n          });\r\n        }\r\n      }\r\n    }).catch((err)=>{\r\n\r\n    });\r\n  }\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  handleGoBack = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    //this.props.history.goBack();\r\n    //this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n    this.props.history.push(`/dashboard/project/${this.state.projectId}`);\r\n  };\r\n\r\n  render() {\r\n    const{\r\n      dashurl,\r\n      loadingTxt,\r\n      dashLoaded,\r\n      dashData,\r\n      iFrameContentLoaded,\r\n      projectName,\r\n    } = this.state\r\n    const{\r\n      datasets,\r\n      datasetsLoaded\r\n    } = this.props.data\r\n\r\n    if (!this.state) return;\r\n    var loadingFinished = false;\r\n    if(iFrameContentLoaded && dashLoaded){\r\n      loadingFinished = true;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <IkigaiLayout\r\n          _type='sub-page'\r\n          _page='Dashboard'\r\n          _uploadProgress={this.props.uploadProgress}\r\n          _handleGoBack={(event: any) => this.handleGoBack(event)}\r\n          _content={\r\n            <>\r\n              {!this.state.hideAutoLayoutLoading &&\r\n                <IkiLoader\r\n                  loadingTxt={loadingTxt}\r\n                  fadeOut={loadingFinished}\r\n                  history={this.props.history}\r\n                  backLink={`/dashboard/project/${this.state.projectId}`}\r\n                />\r\n              }\r\n              <div className={styles.dashCentralPanel}>\r\n                <iframe\r\n                    title={\"iKigai\"}\r\n                    key={0}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className={styles.metabaseIframe}\r\n                    onLoad={() => {\r\n                      dashLoaded &&\r\n                          this.setState({ iFrameContentLoaded: true })\r\n                    }}\r\n                    src={dashurl}\r\n                    sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\r\n                ></iframe>\r\n            </div>\r\n            </>\r\n          }\r\n          _rightSidebar={\r\n            <div className=\"info-drawer-root\">\r\n              <div className=\"info-drawer-section\">\r\n                  <div className=\"info-drawer-title\">\r\n                    <span className=\"title\">Info</span>\r\n                  </div>\r\n                  <div className=\"info-drawer-title-group\">\r\n                    <div className=\"info-drawer-title-title\">Project name:</div>\r\n                    <div className=\"info-drawer-title-subtitle clip-txt\">{projectName}</div>\r\n                  </div>\r\n                  <div className=\"info-drawer-title-group\">\r\n                    <div className=\"info-drawer-title-title\">Dashboard Id:</div>\r\n                    <div className=\"info-drawer-title-subtitle clip-txt\">{dashData['dashboard_id']}</div>\r\n                  </div>\r\n                  <div className=\"info-drawer-title-group\">\r\n                    <div className=\"info-drawer-title-title\">Dashboard name:</div>\r\n                    <div className=\"info-drawer-title-subtitle clip-txt\">{dashData['name']}</div>\r\n                  </div>\r\n                  <div className=\"info-drawer-title-group\">\r\n                    <div className=\"info-drawer-title-title\">Datasets Linked:</div>\r\n                      {dashData['dataset_id'] && datasetsLoaded && dashData['dataset_id'].map((data:any, datasetIndex: number) => (\r\n                        <div className=\"info-drawer-title-subtitle clip-txt\" key={'dash-assoc-data-' + datasetIndex}>\r\n                          {datasets.filter((k:any) => {\r\n                            return k.dataset_id === data\r\n                          })[0].name}\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          _logoutHandler={this.props.logout}\r\n        />\r\n        <SnackbarMsg\r\n          snackbarOpen={this.state.snackbarOpen}\r\n          snackbarType={this.state.snackbarType}\r\n          snackbarMsg={this.state.snackbarMessage}\r\n          onSnackbarClose={this.handleSnackbarClose}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default DashViewComponent;","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { State } from '../../reducers';\r\nimport {\r\n  loginMetabaseActionStart, \r\n  getDatasetActionStart,\r\n  handleProjectReturn,\r\n  handleCleanSession,\r\n  logoutAction\r\n} from '../../actions';\r\nimport DashViewComponent from './dash-view-component';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  logout: () => {\r\n    dispatch(logoutAction());\r\n  },\r\n  enterSession: (projectId: string) => {\r\n    dispatch(loginMetabaseActionStart(projectId))\r\n  },\r\n  getDatasets: (projectId: string) => dispatch(getDatasetActionStart(projectId)),\r\n  fireReturnToProject: (sourcePage: string) => {\r\n    dispatch(handleProjectReturn(sourcePage))\r\n  },\r\n  cleanSession: () => {\r\n    dispatch(handleCleanSession())\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  data: state.flowReducerState,\r\n  email: state.userReducerState.email,\r\n  metabaseLogin: state.flowReducerState.metabaseLogin,\r\n  metabaseLoginId: state.flowReducerState.metabaseLoginId,\r\n  uploadProgress: state.flowReducerState.uploadProgress,\r\n});\r\n\r\nexport const DashViewContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DashViewComponent);\r\n","import * as React from 'react';\r\nimport IkigaiLayout from '../components/IkiLayout';\r\n\r\ntype AppdState = {\r\n  open: boolean;\r\n};\r\n\r\ntype AppProps = {\r\n  data: any;\r\n  history: any;\r\n  match: any;\r\n  classes: any;\r\n  flowsLoadedError: string;\r\n  flowsLoaded: boolean;\r\n  email: string;\r\n  uploadProgress: any;\r\n  logout: () => void;\r\n  deleteDataset: (datasetId:string) => void;\r\n};\r\n\r\nclass IkiApp extends React.Component<\r\n  AppProps,\r\n  AppdState\r\n> {\r\n  state = {\r\n    open: false\r\n  };\r\n  componentDidMount() {\r\n    //console.log('IkiApp comp props...', this.props);\r\n    /*console.log('IkiApp props...', this.props);\r\n    if(this.props.data.activeProjectId !== '') {\r\n      console.log('this.props.data.activeProjectId... ', this.props.data.activeProjectId);\r\n    }*/\r\n  }\r\n  render() {\r\n    return (\r\n        <>\r\n          <IkigaiLayout\r\n            _appData={this.props.data}\r\n            _historyData={this.props.history}\r\n            _matchData={this.props.match}\r\n            _email={this.props.email}\r\n            _uploadProgress={this.props.uploadProgress}\r\n            _logoutHandler={this.props.logout}\r\n          />\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IkiApp;\r\n","import { State } from '../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport IkiApp from './iki-app-component';\r\nimport { logoutAction, deleteDatasetActionStart } from '../actions';\r\n\r\nconst mapDispatchToProps = (disptach: Dispatch) => ({\r\n  logout: () => disptach(logoutAction()),\r\n  deleteDataset: (datasetId:string) => disptach(deleteDatasetActionStart(datasetId)),\r\n});\r\nconst mapStateToProps = (state: State) => ({\r\n  data: state.flowReducerState,\r\n  flowsLoadedError: state.flowReducerState.flowsLoaded,\r\n  flowsLoaded: state.flowReducerState.flowsLoadedError,\r\n  uploadProgress: state.flowReducerState.uploadProgress,\r\n  email: state.userReducerState.email\r\n});\r\n\r\nexport const IkiAppContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IkiApp);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Container, Typography, Paper, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype HomeProps = {\r\n  classes: any;\r\n};\r\ntype HomeState = {};\r\n\r\nconst styles = (theme: any) => {\r\n  console.log(theme);\r\n  return {\r\n    link: {\r\n      width: '100%'\r\n    },\r\n    gridRoot: {\r\n      flexGrow: 1,\r\n      marginTop: theme.spacing(10)\r\n    },\r\n    title: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      textAlign: 'center' as 'center'\r\n    },\r\n    root: {\r\n      padding: theme.spacing(5, 2)\r\n    }\r\n  };\r\n};\r\n\r\nclass HomeComponent extends Component<HomeProps, HomeState> {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1 className={this.props.classes.title}>Hello there!</h1>\r\n        <div className={this.props.classes.gridRoot}>\r\n          <Grid item xs={6}>\r\n            <Grid container justify=\"flex-start\">\r\n              <Link to=\"/dashboard\" className={this.props.classes.link}>\r\n                <Paper className={this.props.classes.root}>\r\n                  <Typography variant=\"h5\" component=\"h3\">\r\n                    Dashboard\r\n                  </Typography>\r\n                </Paper>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(HomeComponent);\r\n","import { Dispatch } from 'redux';\r\nimport { State } from '../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport HomeComponent from './home-component';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {};\r\nconst mapStateToProps = (state: State) => {};\r\n\r\nexport const HomeContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomeComponent);\r\n","import React, { Component, Fragment } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport {\r\n  CssBaseline,\r\n  Link as MaterialUiLink,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Divider,\r\n} from '@material-ui/core';\r\n//import ErrorIcon from '@material-ui/icons/Error';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport * as EmailValidator from 'email-validator';\r\n//import './login.css';\r\nimport styles from './Login.module.scss';\r\nimport { IkigaiLogo } from '../../../components/IkigaiLogo';\r\nimport IkiInput from '../../../components/IkiFormElements/IkiInput';\r\nimport IkiButton from '../../../components/IkiFormElements/IkiButton';\r\n\r\ninterface Props {\r\n  data: any;\r\n  classes: any;\r\n  history: any;\r\n  authenticate: (email: string, password: string) => void;\r\n  loginSubmitErrorMsg: string;\r\n  isLoggedIn: boolean;\r\n}\r\n\r\ninterface State {\r\n  emailValidation: boolean;\r\n  passwordValidation: boolean;\r\n  emailValue: any;\r\n  passwordValue: any;\r\n  emailErrorMsg: any;\r\n  passErrorMsg: any;\r\n  showPassword: boolean;\r\n}\r\n\r\nclass SignIn extends Component<Props, State> {\r\n  loadingInProgress: boolean = false;\r\n  state = {\r\n    emailValidation: false,\r\n    passwordValidation: false,\r\n    emailValue: '',\r\n    passwordValue: '',\r\n    emailErrorMsg: '',\r\n    passErrorMsg: '',\r\n    showPassword: true,\r\n  };\r\n\r\n  handleEmailChange = (e: any) => {\r\n    //console.log(\"get email val: \" + e.target.value)\r\n    this.setState({ emailValue: e.target.value });\r\n  };\r\n\r\n  handlePassChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get pass val: \" + e.target.value)\r\n    this.setState({ passwordValue: e.target.value });\r\n  };\r\n\r\n  handleClickShowPassword = (e: any) => {\r\n    if (this.state.showPassword === true) {\r\n      this.setState({ showPassword: false });\r\n    } else {\r\n      this.setState({ showPassword: true });\r\n    }\r\n  };\r\n\r\n  handleSignInFormSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    this.loadingInProgress = true;\r\n    e.preventDefault();\r\n\r\n    let emailIsValid = false;\r\n    let passIsValid = false;\r\n\r\n    setTimeout(() => {\r\n      if (this.state.emailValue !== '') {\r\n        //console.log(\"email with val: \" + this.state.emailValue)\r\n        if (EmailValidator.validate(this.state.emailValue) === true) {\r\n          this.setState({\r\n            emailValidation: false,\r\n            emailErrorMsg: ''\r\n          });\r\n          emailIsValid = true;\r\n        } else {\r\n          this.setState({\r\n            emailValidation: true,\r\n            emailErrorMsg: 'Invalid email'\r\n          });\r\n          this.loadingInProgress = false;\r\n        }\r\n      } else {\r\n        //console.log(\"email without val: \" + this.state.emailValue)\r\n        this.setState({\r\n          emailValidation: true,\r\n          emailErrorMsg: 'Email is required'\r\n        });\r\n        this.loadingInProgress = false;\r\n      }\r\n\r\n      if (this.state.passwordValue !== '') {\r\n        //console.log(\"email with val: \" + this.state.emailValue)\r\n        this.setState({\r\n          passwordValidation: false,\r\n          passErrorMsg: ''\r\n        });\r\n        passIsValid = true;\r\n      } else {\r\n        //console.log(\"email without val: \" + this.state.emailValue)\r\n        this.setState({\r\n          passwordValidation: true,\r\n          passErrorMsg: 'Password is required'\r\n        });\r\n        this.loadingInProgress = false;\r\n      }\r\n\r\n      if (emailIsValid === true && passIsValid === true) {\r\n        this.props.authenticate(\r\n          this.state.emailValue,\r\n          this.state.passwordValue\r\n        );\r\n        if(this.props.isLoggedIn === false){\r\n          this.loadingInProgress = false;\r\n        }\r\n      }else{\r\n        this.loadingInProgress = false;\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    if(this.state.emailErrorMsg !== '' || this.state.passErrorMsg !== ''){\r\n      this.loadingInProgress = false;\r\n    }\r\n    const {\r\n      emailValue,\r\n      passwordValue,\r\n      //emailValidation,\r\n      //passwordValidation,\r\n      emailErrorMsg,\r\n      passErrorMsg,\r\n      showPassword\r\n    } = this.state;\r\n    const { loginSubmitErrorMsg, isLoggedIn } = this.props;\r\n    if (isLoggedIn) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n    return (\r\n      <Fragment>\r\n        {this.loadingInProgress === true && <div className={styles.mask}></div>}\r\n        <Container className={styles.mainContainer} component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={styles.box}>\r\n            <div className={styles.logoHolder}>\r\n              <IkigaiLogo />\r\n            </div>\r\n            <Box mb={1}>\r\n              <Typography component=\"h1\" variant=\"h5\" className={styles.mainTitle}>\r\n                Sign in\r\n              </Typography>\r\n              <Divider className={styles.subtitleDivider} variant=\"middle\" />\r\n            </Box>\r\n            <Typography className={styles.subtitle} component=\"div\" variant=\"caption\">\r\n              Welcome back! <br /> Sign in to access IkigaiLabs dashboard\r\n            </Typography>\r\n            <form\r\n              className={styles.loginForm}\r\n              autoComplete=\"off\"\r\n              noValidate\r\n              onSubmit={(event: any) => this.handleSignInFormSubmit(event)}\r\n            >\r\n                <IkiInput \r\n                  _label=\"Email\"\r\n                  _placeholder=\"Enter Your Email address\"\r\n                  _type=\"search\"\r\n                  _autoComplete=\"new-username\"\r\n                  _value={emailValue}\r\n                  _onChange={(e: any) => this.handleEmailChange(e)}\r\n                  _error={emailErrorMsg}\r\n                  _required={true}\r\n                  _fullWidth={true}\r\n                  _autoFocus={true}\r\n                />\r\n                <IkiInput \r\n                  _label=\"Password\"\r\n                  _placeholder=\"Enter Your Password\"\r\n                  _type={showPassword ? 'password' : 'text'}\r\n                  _autoComplete=\"new-password\"\r\n                  _value={passwordValue}\r\n                  _onChange={(e: any) => this.handlePassChange(e)}\r\n                  _error={passErrorMsg}\r\n                  _required={true}\r\n                  _fullWidth={true}\r\n                  _endIcon={\r\n                    {\r\n                      _withButton: true,\r\n                      _icon: (\r\n                        <Fragment>\r\n                          {showPassword ? (\r\n                            <VisibilityOff fontSize=\"small\" />\r\n                          ) : (\r\n                            <Visibility fontSize=\"small\" />\r\n                          )}\r\n                        </Fragment>\r\n                      ),\r\n                      _position: \"end\",\r\n                      _edge: \"end\",\r\n                      _size: \"small\",\r\n                      _onClick: (e: any) =>this.handleClickShowPassword(e)\r\n                    }\r\n                }\r\n              />\r\n              {/* <Link to=\"/forgot-password\">Forgot password?</Link> */}\r\n              {loginSubmitErrorMsg !== '' && (\r\n                <Box mt={4} mb={4}>\r\n                  <div className={styles.submitError}>\r\n                    {loginSubmitErrorMsg}\r\n                  </div>\r\n                </Box>\r\n              )}\r\n              <Box mt={4}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <IkiButton\r\n                      _variant='contained'\r\n                      _color='primary'\r\n                      _label=\"Sign In\"\r\n                      _type='submit'\r\n                      _fullWidth={true}\r\n                      _loading={this.loadingInProgress}\r\n                    />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12}>\r\n                    <Link to=\"/SignUp\">Don't have an account? Sign Up</Link>\r\n                  </Grid> */}\r\n                </Grid>\r\n              </Box>\r\n            </form>\r\n          </div>\r\n          <Box className={styles.loginCopyright}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {'Copyright © '}\r\n              <MaterialUiLink color=\"inherit\" href=\"http://ikigailabs.io/\">\r\n                IkigaiLabs.io\r\n              </MaterialUiLink>{' '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import { State } from '../../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport LoginComponent from './login-component';\r\nimport { authenticateRequestStartAction } from './../../../actions';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  authenticate: (email: string, password: string) =>\r\n    dispatch(authenticateRequestStartAction(email, password))\r\n});\r\nconst mapStateToProps = (state: State) => ({\r\n  loginSubmitErrorMsg: state.userReducerState.loginResponse,\r\n  isLoggedIn: state.userReducerState.isLoggedIn\r\n});\r\n\r\nexport const LoginContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginComponent);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//import '../login/login.css';\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormHelperText,\r\n  Link as MaterialUiLink,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Divider,\r\n  InputAdornment,\r\n  IconButton,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions\r\n} from '@material-ui/core';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { signupUser } from '../../../services';\r\nimport * as EmailValidator from 'email-validator';\r\nvar passwordValidator = require('password-validator');\r\n\r\ninterface Props {\r\n  data: any;\r\n  classes: any;\r\n  history: any;\r\n  isLoggedIn: boolean;\r\n}\r\n\r\ninterface State {\r\n  emailValidation: boolean;\r\n  passwordValidation: boolean;\r\n  passwordValidation2: boolean;\r\n  emailValue: any;\r\n  passwordValue: any;\r\n  passwordValue2: any;\r\n  emailErrorMsg: any;\r\n  passErrorMsg: any;\r\n  passErrorMsg2: any;\r\n  showPassword: boolean;\r\n  showPassword2: boolean;\r\n  signupSubmitState: boolean;\r\n  signupSubmitErrorMsg: string;\r\n  signupSubmitErrorState: boolean;\r\n  signupSubmitSuccessState: boolean;\r\n  signupSubmitSuccessMsg: string;\r\n  timeRemainingInSeconds: number;\r\n  licenseDialog: boolean;\r\n  licenseChecked: boolean;\r\n  licenseErrorMsg: string;\r\n  licenseError: boolean;\r\n}\r\n\r\n// Define rules and minimum requirements for password\r\nvar passwordRules = new passwordValidator();\r\npasswordRules\r\n.is().min(8)            // Minimum length 8\r\n.is().max(100)          // Maximum length 100\r\n.has().uppercase()      // Must have uppercase letters\r\n.has().lowercase()      // Must have lowercase letters\r\n.has().digits()         // Must have digits\r\n.has().not().spaces();  // Should not have spaces\r\n\r\nclass SignUp extends Component<Props, State> {\r\n\r\n  private timer: any;\r\n\r\n  state = {\r\n    emailValidation: true,\r\n    passwordValidation: true,\r\n    passwordValidation2: true,\r\n    emailValue: '',\r\n    passwordValue: '',\r\n    passwordValue2: '',\r\n    emailErrorMsg: '',\r\n    passErrorMsg: '',\r\n    passErrorMsg2: '',\r\n    showPassword: true,\r\n    showPassword2: true,\r\n    signupSubmitState: false,\r\n    signupSubmitErrorMsg: '',\r\n    signupSubmitErrorState: false,\r\n    signupSubmitSuccessState: false,\r\n    signupSubmitSuccessMsg: '',\r\n    timeRemainingInSeconds: 10,\r\n    licenseDialog: false,\r\n    licenseChecked: false,\r\n    licenseErrorMsg: '',\r\n    licenseError: false\r\n  }\r\n\r\n  handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get email val: \" + e.target.value)\r\n    this.setState({ emailValue: e.target.value })\r\n  }\r\n\r\n  handlePassChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get pass val: \" + e.target.value)\r\n    this.setState({ passwordValue: e.target.value })\r\n  }\r\n\r\n  handlePassChange2 = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get pass val: \" + e.target.value)\r\n    this.setState({ passwordValue2: e.target.value })\r\n  }\r\n\r\n  handleClickShowPassword = () => {\r\n    if(this.state.showPassword === true){\r\n      this.setState({ showPassword: false })\r\n    }else{\r\n      this.setState({ showPassword: true })\r\n    }\r\n  }\r\n\r\n  handleClickShowPassword2 = () => {\r\n    if(this.state.showPassword2 === true){\r\n      this.setState({ showPassword2: false })\r\n    }else{\r\n      this.setState({ showPassword2: true })\r\n    }\r\n  }\r\n\r\n  handleSignUpFormSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    this.setState({ signupSubmitState: true });\r\n    e.preventDefault()\r\n\r\n    let emailIsValid = false\r\n    let passIsValid = false\r\n    let passIsValid2 = false\r\n    let licenseIsChecked = false\r\n\r\n    setTimeout(() => {\r\n      if(this.state.emailValue !== ''){\r\n        //console.log(\"email with val: \" + this.state.emailValue)\r\n        if(EmailValidator.validate(this.state.emailValue) === true){\r\n          this.setState({ \r\n            emailValidation: true,\r\n            emailErrorMsg: ''\r\n          })\r\n          emailIsValid = true\r\n        }else{\r\n          this.setState({ \r\n            emailValidation: false, \r\n            emailErrorMsg: 'Invalid email' \r\n          })\r\n        }\r\n      }else{\r\n        //console.log(\"email without val: \" + this.state.emailValue)\r\n        this.setState({ \r\n          emailValidation: false, \r\n          emailErrorMsg: 'Email is required' \r\n        })\r\n      }\r\n\r\n      if(this.state.passwordValue !== ''){\r\n        //console.log(\"email with val: \" + this.state.passwordValue)\r\n        if(passwordRules.validate(this.state.passwordValue) === true){\r\n          this.setState({ \r\n            passwordValidation: true, \r\n            passErrorMsg: ''\r\n          })\r\n          passIsValid = true\r\n        }else{\r\n          this.setState({ \r\n            passwordValidation: false, \r\n            passErrorMsg: 'Password must contain uppercase and lowercase letter, number and be 8 - 16 characters long'\r\n          })\r\n          passIsValid = false\r\n        }\r\n      }else{\r\n        //console.log(\"email without val: \" + this.state.passwordValue)\r\n        this.setState({ \r\n          passwordValidation: false,\r\n          passErrorMsg: 'Password is required'\r\n        })\r\n      }\r\n\r\n      if(this.state.passwordValue2 !== ''){\r\n        //console.log(\"email with val: \" + this.state.passwordValue2)\r\n        if(this.state.passwordValue2 === this.state.passwordValue){\r\n          this.setState({ \r\n            passwordValidation2: true, \r\n            passErrorMsg2: ''\r\n          })\r\n          passIsValid2 = true\r\n        }else{\r\n          this.setState({ \r\n            passwordValidation2: false, \r\n            passErrorMsg2: 'Passwords are not equal'\r\n          })\r\n        }\r\n      }else{\r\n        //console.log(\"email without val: \" + this.state.passwordValue2)\r\n        this.setState({ \r\n          passwordValidation2: false,\r\n          passErrorMsg2: 'Confirm password is required'\r\n        })\r\n      }\r\n\r\n      if(this.state.licenseChecked === true){\r\n        this.setState({ \r\n          licenseErrorMsg: '', \r\n          licenseError: false\r\n        })\r\n        licenseIsChecked = true\r\n      }else{\r\n        //console.log(\"email without val: \" + this.state.emailValue)\r\n        this.setState({ \r\n          licenseErrorMsg: 'You must accept Ikigai Labs License Agreement in order to continue', \r\n          licenseError: true\r\n        })\r\n        licenseIsChecked = false\r\n      }\r\n\r\n      if(emailIsValid === true && passIsValid === true && passIsValid2 === true && licenseIsChecked === true){\r\n        console.log(\"email: \" + this.state.emailValue + \", pass: \" + this.state.passwordValue);\r\n        // SIGN UP - REGISTER API CALL GOES HERE AND IF EVERYTHING OK, GOES TO LOGIN PAGE\r\n        signupUser(this.state.emailValue, this.state.passwordValue).then(res => {\r\n          if(res.status === 200){\r\n            this.setState({ signupSubmitErrorMsg: '' })\r\n            this.setState({ signupSubmitErrorState: false })\r\n            /* James changed the user flow here and instead of using signup confirmation \"complete registration\" page,\r\n            we are using direct link to aws which triggers user confirmation.\r\n            this.props.history.push('/complete-registration?e='+this.state.emailValue) */\r\n            this.setState({ signupSubmitSuccessMsg: 'Email message with instructions has been sent. Check your email inbox' })\r\n            this.setState({ signupSubmitSuccessState: true })\r\n            this.timer = setInterval(() => {\r\n              this.decrementTimeRemaining();\r\n            }, 1000);\r\n          }else if(res.status === 401){\r\n            //this.setState({ signupSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n            this.setState({ signupSubmitErrorMsg: 'You have entered an invalid username or password' })\r\n            this.setState({ signupSubmitErrorState: true })\r\n            this.setState({ signupSubmitSuccessState: false })\r\n          }else if(res.status === 404){\r\n            this.setState({ signupSubmitErrorMsg: 'Error 404: Something went wrong!' })\r\n            this.setState({ signupSubmitErrorState: true })\r\n            this.setState({ signupSubmitSuccessState: false })\r\n          }else{\r\n            this.setState({ signupSubmitErrorMsg: 'The username ' + this.state.emailValue +' already exists. Please use a different username/email.' })\r\n            this.setState({ signupSubmitErrorState: true })\r\n            this.setState({ signupSubmitSuccessState: false })\r\n          }\r\n        }).catch(err => {\r\n          if(err.status === 404) {\r\n            this.setState({ signupSubmitErrorMsg: 'Error 404: Something went wrong!' })\r\n            this.setState({ signupSubmitErrorState: true })\r\n            this.setState({ signupSubmitSuccessState: false })\r\n          } else if(err.status === 401) {\r\n            //this.setState({ signupSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n            this.setState({ signupSubmitErrorMsg: 'You have entered an invalid username or password' })\r\n            this.setState({ signupSubmitErrorState: true })\r\n            this.setState({ signupSubmitSuccessState: false })\r\n          }else{\r\n            this.setState({ signupSubmitErrorMsg: 'Error: Please contact IkigaiLabs support. Thank You for understanding.' })\r\n            this.setState({ signupSubmitErrorState: true })\r\n            this.setState({ signupSubmitSuccessState: false })\r\n          }\r\n        })\r\n        //this.props.history.push('/login')\r\n      }\r\n      this.setState({ signupSubmitState: false });\r\n    }, 1000);\r\n  }\r\n\r\n  decrementTimeRemaining = () => {\r\n    if (this.state.timeRemainingInSeconds > 0) {\r\n      this.setState({\r\n        timeRemainingInSeconds: this.state.timeRemainingInSeconds - 1\r\n      });\r\n    } else {\r\n      clearInterval(this.timer!);\r\n      this.setState({\r\n        timeRemainingInSeconds: 10\r\n      });\r\n      this.props.history.push('/login');\r\n    }\r\n  };\r\n\r\n  /* componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.decrementTimeRemaining();\r\n    }, 1000);\r\n  } */\r\n\r\n  handleLicenseDialog = (dialogState: boolean) => {\r\n    this.setState({\r\n      licenseDialog: dialogState\r\n    });\r\n  };\r\n\r\n  handleLicenseAccept = () => {\r\n    this.setState({\r\n      licenseChecked: true,\r\n      licenseError: false\r\n    });\r\n    this.handleLicenseDialog(false);\r\n  }\r\n\r\n  handleLicenseCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      licenseChecked: event.target.checked\r\n    });\r\n    if(event.target.checked === true){\r\n      this.setState({\r\n        licenseError: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      emailValue,\r\n      passwordValue,\r\n      passwordValue2,\r\n      emailValidation,\r\n      passwordValidation,\r\n      passwordValidation2,\r\n      emailErrorMsg,\r\n      passErrorMsg,\r\n      passErrorMsg2,\r\n      showPassword,\r\n      showPassword2,\r\n      signupSubmitState,\r\n      signupSubmitErrorMsg,\r\n      signupSubmitErrorState,\r\n      signupSubmitSuccessState,\r\n      signupSubmitSuccessMsg,\r\n      timeRemainingInSeconds,\r\n      licenseError,\r\n      licenseErrorMsg\r\n    } = this.state;\r\n    if (this.props.isLoggedIn) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n    return (\r\n      <Fragment>\r\n        {signupSubmitState === true &&\r\n          <div className=\"mask\"></div>\r\n        }\r\n        <Container className=\"main-container\" component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper-box\">\r\n            <Typography className=\"login-logo\" component=\"h2\" variant=\"caption\">\r\n              <span>Ikigai</span>\r\n              <span>Labs</span>\r\n            </Typography>\r\n            <Box mt={4} mb={1}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n              </Typography>\r\n              <Divider variant=\"middle\" className=\"subtitle-divider\" />\r\n            </Box>\r\n            <Typography className=\"subtitle\" component=\"div\" variant=\"caption\">\r\n              Create account\r\n            </Typography>\r\n            {signupSubmitSuccessState === false ?\r\n              <form\r\n                className=\"login-form\" \r\n                autoComplete=\"off\" \r\n                noValidate\r\n                onSubmit={this.handleSignUpFormSubmit}\r\n              >\r\n                    {emailValidation ?\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        placeholder=\"Enter Your Email address\"\r\n                        type=\"search\"\r\n                        autoComplete=\"new-username\"\r\n                        autoFocus\r\n                        value={emailValue}\r\n                        onChange={this.handleEmailChange}\r\n                        InputLabelProps={\r\n                          {\r\n                            shrink: true\r\n                          }\r\n                        }\r\n                      />\r\n                      :\r\n                      <div>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          fullWidth\r\n                          label=\"Email\"\r\n                          placeholder=\"Enter Your Email address\"\r\n                          type=\"search\"\r\n                          autoComplete=\"new-username\"\r\n                          autoFocus\r\n                          value={emailValue}\r\n                          onChange={this.handleEmailChange}\r\n                          InputLabelProps={\r\n                            {\r\n                              shrink: true\r\n                            }\r\n                          }\r\n                          error\r\n                        />\r\n                        <FormHelperText className=\"input-error\" error>\r\n                          <ErrorIcon />\r\n                          <span>{emailErrorMsg}</span>\r\n                        </FormHelperText>\r\n                      </div>\r\n                    }\r\n                    {passwordValidation ?\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        placeholder=\"Enter Your Password\"\r\n                        type={showPassword ? \"password\" : \"text\"}\r\n                        autoComplete=\"new-password\"\r\n                        value={passwordValue}\r\n                        onChange={this.handlePassChange}\r\n                        InputLabelProps={\r\n                          {\r\n                            shrink: true\r\n                          }\r\n                        }\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={this.handleClickShowPassword}\r\n                                onMouseDown={event => { event.preventDefault(); }}\r\n                                size=\"small\"\r\n                              >\r\n                                {showPassword ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    :\r\n                      <div>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          fullWidth\r\n                          label=\"Password\"\r\n                          placeholder=\"Enter Your Password\"\r\n                          type={showPassword ? \"password\" : \"text\"}\r\n                          autoComplete=\"new-password\"\r\n                          value={passwordValue}\r\n                          onChange={this.handlePassChange}\r\n                          InputLabelProps={\r\n                            {\r\n                              shrink: true\r\n                            }\r\n                          }\r\n                          error\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  edge=\"end\"\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={this.handleClickShowPassword}\r\n                                  onMouseDown={event => { event.preventDefault(); }}\r\n                                  size=\"small\"\r\n                                >\r\n                                  {showPassword ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                        <FormHelperText className=\"input-error\" error>\r\n                          <ErrorIcon />\r\n                          <span>{passErrorMsg}</span>\r\n                        </FormHelperText>\r\n                      </div>\r\n                    }\r\n                    {passwordValidation2 ?\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          fullWidth\r\n                          label=\"Confirm password\"\r\n                          placeholder=\"Confirm Your Password\"\r\n                          type={showPassword2 ? \"password\" : \"text\"}\r\n                          autoComplete=\"new-password\"\r\n                          value={passwordValue2}\r\n                          onChange={this.handlePassChange2}\r\n                          InputLabelProps={\r\n                            {\r\n                              shrink: true\r\n                            }\r\n                          }\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  edge=\"end\"\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={this.handleClickShowPassword2}\r\n                                  onMouseDown={event => { event.preventDefault(); }}\r\n                                  size=\"small\"\r\n                                >\r\n                                  {showPassword2 ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      :\r\n                        <div>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            placeholder=\"Confirm password\"\r\n                            type={showPassword2 ? \"password\" : \"text\"}\r\n                            autoComplete=\"new-password\"\r\n                            value={passwordValue2}\r\n                            onChange={this.handlePassChange2}\r\n                            InputLabelProps={\r\n                              {\r\n                                shrink: true\r\n                              }\r\n                            }\r\n                            error\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={this.handleClickShowPassword2}\r\n                                    onMouseDown={event => { event.preventDefault(); }}\r\n                                    size=\"small\"\r\n                                  >\r\n                                    {showPassword2 ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                          <FormHelperText className=\"input-error\" error>\r\n                            <ErrorIcon />\r\n                            <span>{passErrorMsg2}</span>\r\n                          </FormHelperText>\r\n                        </div>\r\n                      }\r\n                <Box mt={2} mb={2}>\r\n                  <div className={licenseError === true ? \"license-box has-error\" : \"license-box\"}>\r\n                    <Checkbox\r\n                      value=\"\"\r\n                      color=\"primary\"\r\n                      checked={this.state.licenseChecked}\r\n                      onChange={(event) => this.handleLicenseCheckbox(event)}\r\n                    />\r\n                    <div className=\"license-label-box\">\r\n                      <span className=\"label-txt\">I have read and agree to the terms of </span>\r\n                      <MaterialUiLink href=\"#\" color=\"primary\" onClick={() => this.handleLicenseDialog(true)}>\r\n                        Ikigai Labs License Agreement\r\n                      </MaterialUiLink>\r\n                    </div>\r\n                  </div>\r\n                  {licenseError === true &&\r\n                    <Grid container spacing={2} className=\"has-txt-centered\">\r\n                      <Grid item xs={12}>\r\n                        <Box mt={2}>\r\n                          <FormHelperText className=\"input-error\" error>\r\n                            <ErrorIcon />\r\n                            <span>{licenseErrorMsg}</span>\r\n                          </FormHelperText>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  }\r\n                </Box>\r\n                {signupSubmitErrorState === true &&\r\n                  <Box mt={4} mb={4}>\r\n                    <div className=\"submit-error has-txt-centered\">{signupSubmitErrorMsg}</div>\r\n                  </Box>\r\n                }\r\n                <Box mt={4}>\r\n                  <Grid container spacing={2} className=\"has-txt-centered\">\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\"button\"\r\n                        >\r\n                          {signupSubmitState === true &&\r\n                            <span className=\"btn-spinner\"></span>\r\n                          }\r\n                          <span>Get Started</span>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Link to=\"/login\">\r\n                        Already have an account? Sign in\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </form>\r\n          :\r\n              <Fragment>\r\n                <Box mt={4} mb={4}>\r\n                  <div className=\"submit-success has-txt-centered\">{signupSubmitSuccessMsg}</div>\r\n                </Box>\r\n                <Box mt={4} mb={4}>\r\n                  <span>Redirecting to Sign in page in </span>\r\n                  <strong>{timeRemainingInSeconds}</strong>\r\n                </Box>\r\n              </Fragment>\r\n          }\r\n          </div>\r\n          <Box className=\"login-copyright\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {'Copyright © '}\r\n              <MaterialUiLink color=\"inherit\" href=\"http://ikigailabs.io/\">\r\n                IkigaiLabs.io\r\n              </MaterialUiLink>{' '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n          </Typography>\r\n          </Box>\r\n        </Container>\r\n        <Dialog\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.licenseDialog}\r\n          className=\"dialog\"\r\n          fullWidth={true}\r\n          maxWidth=\"md\"\r\n          disableBackdropClick={true}\r\n        >\r\n          <DialogContent className=\"dialog-content\">\r\n            <div>\r\n              <Box className=\"dialog-title default-color\" mb={2}>\r\n                Ikigai Labs Beta License Agreement\r\n              </Box>\r\n              <Box mt={2} mb={2} className=\"license-dialog-content\">\r\n                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>IMPORTANT-READ CAREFULLY:</strong> THIS IS A LEGAL AGREEMENT BETWEEN YOU, YOUR EMPLOYEES, AGENTS AND CONTRACTORS, AND ANY OTHER ENTITY ON WHOSE BEHALF YOU ACCEPT THIS AGREEMENT (COLLECTIVELY, &ldquo;<strong>YOU</strong>&rdquo;) AND IKIGAI LABS, INC. located at 2 Embarcadero Center, 8th Floor, San Francisco, CA 94111, United States (&ldquo;<strong>iKIGA LABS</strong>&rdquo;) FOR THE IKIGAI LABS SOFTWARE AS A SERVICE PRODUCT ACCOMPANYING THIS AGREEMENT, WHICH MAY INCLUDE source code, algorithms or other code, including the underlying structure, schema, functions, methods of operation and ideas relating to the SOFTWARE AS A SERVICE PRODUCT Offering, associated MEDIA, PRINTED MATERIALS AND ONLINE OR ELECTRONIC DOCUMENTATION (COLLECTIVELY &ldquo;<strong>SAAS OFFERING</strong>&rdquo;).&nbsp; BEFORE ACCESSING THE SAAS OFFERING YOU MUST READ, ACKNOWLEDGE AND ACCEPT THE TERMS AND CONDITIONS OF THIS IKIGAI LABS BETA LICENSE AGREEMENT (&ldquo;<strong>AGREEMENT</strong>&rdquo;). BY PRESSING THE &ldquo;I ACCEPT&rdquo; BUTTON, YOU CREATE A BINDING AGREEMENT AND BY USING, DOWNLOADING, OR OTHERWISE ACCESSING ANY PART OF THE SAAS OFFERING, YOU ARE REAFFIRMING THAT YOU AGREE TO BE BOUND BY THIS AGREEMENT AND ACCEPT WITHOUT LIMITATION OR QUALIFICATION ALL OF ITS TERMS AND CONDITIONS.&nbsp; IF YOU DO NOT ACCEPT THE TERMS AND CONDITIONS OF THE AGREEMENT, DO NOT ACCESS THE SAAS OFFERING IN ANY WAY.&nbsp; If you are acquiring the SAAS OFFERING on behalf of an entity, you represent and warrant that you have the legal capacity to bind such entity to this Agreement. &nbsp;&nbsp;</p>\r\n                <ol>\r\n                  <li><strong>Scope of Agreement</strong>. You may test and evaluate the SaaS Offering under the terms and conditions of this Agreement for a period of 6 months from the date You accept this Agreement (&ldquo;<strong>Evaluation Period</strong>&rdquo;). You may conduct internal, non-commercial testing and evaluation of the Saas Offering solely for the purpose of assessing whether You desire to enter into a business relationship with Ikigai Labs (the &ldquo;<strong>Purpose</strong>&rdquo;).&nbsp; This is solely an evaluation license and in no event are You permitted to use the SaaS Offering in a production environment.&nbsp; Nothing herein obligates either party to proceed with any other transaction between them, including but not limited to licensing the SaaS Offering. Ikigai Labs is not obligated to make the SaaS Offering available as a commercial product.&nbsp;</li>\r\n                </ol>\r\n                <ol start={2}>\r\n                  <li><strong>License Grant and Restrictions</strong>.\r\n                  <ol type=\"a\" className=\"ol-level-2\">\r\n                    <li><u>License Grant</u>. Subject to the terms and conditions set forth herein, Ikigai Labs hereby grants You and Your Users a personal, nonexclusive, nontransferable, nonsublicensable, royalty-free license to (i) use and &nbsp;access the SaaS Offering solely for the Purpose, and during the Evaluation Period. &ldquo;<strong>User</strong>&rdquo; means the individual(s) in Your company who are authorized by You and Ikigai Labs to use or access the SaaS Offering subject to such individual&rsquo;s acceptance of this Agreement. You shall ensure that Users take reasonable security precautions to prevent the SaaS Offering from being seen or accessed by unauthorized individuals.&nbsp;</li>\r\n                    <li><u>Restrictions</u>. You will not use, download, install, or access the SaaS Offering except as expressly authorized by this Agreement.&nbsp; Without limiting the generality of the foregoing, You will not: (i) sell, resell, distribute, bundle or make the SaaS Offering available in any form to any third party; (ii) copy, modify, merge, disclose, reverse engineer, decompile, disassemble, translate, or otherwise attempt to derive the design, source code or underlying algorithms, file formats or programming or interoperability interfaces of the SaaS Offering unless applicable law prohibits such reverse engineering restrictions; (iii) create any derivative work based upon, the SaaS Offering; (iv) sublicense or otherwise transfer or dispose of, or assign, share, rent, lease, grant a security interest in, or otherwise transfer the SaaS Offering or Your right to use the SaaS Offering; or (v) use the SaaS Offering for any commercial purposes.&nbsp; There are no implied rights under this Agreement.</li>\r\n                    <li><u>Proprietary Rights</u>. You acknowledge and agree that Ikigai Labs is the exclusive owner of all right, title, and interest in and to the SaaS Offering (including without limitation, any software or documentation associated with the SaaS Offering and all updates, corrections, modifications, and new versions thereof) and all intellectual property rights related thereto or inherent therein, including without limitation copyright, patent, trade secret and trademark rights (collectively, &ldquo;<strong>Ikigai Labs Property</strong>&rdquo;).&nbsp; You will treat Ikigai Labs Property as proprietary and confidential information of Ikigai Labs subject to the terms and conditions of this Agreement.&nbsp; You do not acquire title to the Ikigai Labs Property or any intellectual property or other rights related thereto, whether by implication, estoppel or otherwise, except for the limited evaluation license granted hereunder.</li>\r\n                    <li><u>Open Source</u>. If any open source software is incorporated into the SaaS Offering, Your rights with regard to the open source software will be governed by the applicable open source license.</li>\r\n                    <li><u>Proprietary Notices</u>. You will not remove any copyright, patent, trademark or other proprietary or restrictive notice or legend contained or included in the SaaS Offering and You will reproduce and copy all such notices and legends on all copies of any such SaaS Offering that Ikigai Labs expressly and in writing permits you to make.</li>\r\n                  </ol>\r\n                  </li>\r\n                </ol>\r\n                <ol start={3}>\r\n                  <li><strong>Evaluation and Feedback</strong>.\r\n                  <ol type=\"a\" className=\"ol-level-2\">\r\n                    <li><u>Evaluation</u>. You will cooperate and consult with Ikigai Labs in the evaluation of the SaaS Offering based on Your operation, use, and testing of the SaaS Offering.&nbsp;</li>\r\n                    <li><u>Feedback</u>. You (i) will promptly provide feedback to Ikigai Labs based on the evaluation results for the SaaS Offering including, without limitation, any flaws, errors, bugs or other problems You find in the SaaS Offering; and (ii) may provide to Ikigai Labs Your suggested improvements or modifications of the SaaS Offering, and all related know-how, created under this Agreement regarding improvement or modification of the SaaS Offering, during the course of or as a result of this Agreement (collectively, &ldquo;<strong>Feedback</strong>&rdquo;).&nbsp; Ikigai Labs owns all right, title, and interest in and to the Feedback, all improvements or modifications of the SaaS Offering by whomsoever made, and all intellectual property rights inherent therein or related to the foregoing.&nbsp; You hereby assign to Ikigai Labs all right, title and interest in and to the Feedback.&nbsp; You will do all acts reasonably required to perfect and enforce such rights.&nbsp; All such Feedback will be deemed to be Ikigai Labs&rsquo;s Confidential Information and will be subject to the restrictions set forth herein.</li>\r\n                  </ol>\r\n                  </li>\r\n                  <li>\r\n                    <strong>Term and Termination</strong>.\r\n                    <ol type=\"a\" className=\"ol-level-2\">\r\n                      <li><u>Term</u>. This Agreement will terminate upon the expiration of the Evaluation Period unless terminated earlier in accordance with this section (&ldquo;<strong>Term</strong>&rdquo;).</li>\r\n                      <li><u>Termination</u>. Either party may terminate this Agreement at any time by giving notice to the other party.&nbsp;</li>\r\n                      <li><u>Effect of Termination</u>. Upon expiration or termination of this Agreement for any reason, You will immediately and permanently discontinue all use of the SaaS Offering, return to Ikigai Labs the SaaS Offering and all property (of whatever description or nature) belonging to Ikigai Labs or destroy the same, and certify to Ikigai Labs, in writing, that all copies and partial copies thereof have been returned or completely destroyed and are no longer being used.</li>\r\n                      <li><u>Survival</u>. Section c (Proprietary Rights), Section 3.b (Feedback), Section 4c (Effect of Termination), Section 4(d) (Survival), Section 5 (Confidentiality), Section 6 (No Warranties; Disclaimer), Section 7 (Limitation of Liability), and Section 9 (Miscellaneous) will survive any expiration or termination of this Agreement.</li>\r\n                    </ol>\r\n                  </li>\r\n                  <li><strong>Confidentiality</strong>.\r\n                    <ol type=\"a\" className=\"ol-level-2\">\r\n                      <li><u>Confidential Information</u>. All information marked as confidential, or that a reasonable person could infer as confidential from the circumstances, including business, technical, financial or other information disclosed by Ikigai Labs to You pursuant to this Agreement, is Ikigai Labs&rsquo; confidential information (collectively, &ldquo;<strong>Confidential Information</strong>&rdquo;).&nbsp; The SaaS Offering, and all Feedback, including without limitation, any security vulnerability or run-time errors identified by the SaaS Offering or You while using the SaaS Offering will be deemed to be Ikigai Labs&rsquo;s Confidential Information.&nbsp; You will not disclose any information about the SaaS Offering, its design and performance specifications, its code, and the existence of the evaluation and its results to any third party, except as expressly authorized in writing by Ikigai Labs. You will hold in confidence and will not use or disclose to any third party any Ikigai Labs Confidential Information.&nbsp; You may only disclose Ikigai Labs&rsquo; Confidential Information to Users who have a legitimate &ldquo;need to know,&rdquo; have been advised of the obligations of confidentiality under this Agreement and are bound to You in writing to obligations of confidentiality no less stringent than those set out in this Agreement. &nbsp;You may only use Ikigai Labs&rsquo; Confidential Information as necessary to perform Your obligations or exercise Your rights under this Agreement and for no other purpose. You will be liable for any breach of this Agreement by Users.</li>\r\n                      <li><u>Exclusions</u>. You will not be obligated under this section with respect to Confidential Information that You can document: (i) is or has become readily publicly available without restriction through no fault attributable to You or Your personnel, (ii) is received, without restriction, from a third party lawfully in possession of such information and lawfully empowered to disclose such information, or (iii) was rightfully in Your possession without restriction prior to its disclosure by Ikigai Labs.</li>\r\n                      <li><u>Injunctive Relief</u>. Due to the unique nature of Ikigai Labs&rsquo; Confidential Information, any breach by You of this Section&nbsp;5 will cause Ikigai Labs irreparable harm for which recovery of damages would be inadequate and Ikigai Labs will be entitled to injunctions and other appropriate equitable relief, without the requirement of posting a bond, in addition to whatever remedies it may have at law.</li>\r\n                    </ol>\r\n                  </li>\r\n                  <li><strong>NO WARRANTIES; DISCLAIMER</strong>. THE SAAS OFFERING IS PROVIDED &ldquo;AS IS.&rdquo; IKIGAI LABS MAKES NO WARRANTIES OF ANY KIND WITH RESPECT TO THE SAAS OFFERING, EXPRESS OR IMPLIED, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT AND ANY IMPLIED OBLIGATION TO INDEMNIFY FOR INFRINGEMENT.&nbsp; IKIGAI LABS DOES NOT WARRANT THAT THE OPERATION OF THE SAAS OFFERING WILL BE UNINTERRUPTED, FAULT-TOLERANT, OR ERROR-FREE, THAT ANY SAAS OFFERING ERRORS WILL BE CORRECTED, THAT THE SAAS OFFERING WILL EVER BE COMPLETED OR COMMERCIALLY AVAILABLE, THAT THE SAAS OFFERING WILL SATISFY YOUR REQUIREMENTS OR THAT THE SAAS OFFERING WILL OPERATE IN COMBINATION WITH OTHER SOFTWARE OR HARDWARE OR WITH YOUR INFORMATION TECHNOLOGY ENVIRONMENT. &nbsp;IKIGAI LABS MAY CHANGE THE SAAS OFFERING AND THE TECHNICAL SPECIFICATIONS, AND ANY OTHER INFORMATION AND MATERIALS AVAILABLE IN CONNECTION WITH YOUR USE OF THE SAAS OFFERING AT ANY TIME AND WITHOUT NOTICE. IKIGAI LABS IS NOT RESPONSIBLE FOR ANY MISUSE OF THE SAAS OFFERING BY YOU OR USERS, INCLUDING WITHOUT LIMITATION ANY WILLFUL OR MALICIOUS ACTS BY YOU OR A USER, OR ANY OTHER ACT OR OMISSION BY YOU OR A USER IN VIOLATION OF THE TERMS OF THIS AGREEMENT OR USE OF THE SAAS OFFERING OTHER THAN AS PROVIDED IN THIS AGREEMENT.</li>\r\n                  <li><strong>LIMITATION OF LIABILITY</strong>. IN NO EVENT WILL IKIGAI LABS BE LIABLE FOR ANY DAMAGES TO YOU, INCLUDING LOSS OF OR BREACH OF DATA, LOST PROFITS, LOSS OF GOODWILL OR OTHER SPECIAL, INCIDENTAL, CONSEQUENTIAL, OR INDIRECT DAMAGES ARISING FROM THE USE OF THE SAAS OFFERING OR ACCOMPANYING MATERIALS, HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY.&nbsp; THIS LIMITATION WILL APPLY EVEN IF IKIGAI LABS HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&nbsp; IN NO EVENT WILL IKIGAI LABS&rsquo; AGGREGATE LIABILITY TO YOU UNDER THIS AGREEMENT EXCEED $100. THE PARTIES ACKNOWLEDGE THAT THIS IS A REASONABLE ALLOCATION OF RISK.&nbsp;</li>\r\n                </ol>\r\n                <ol start={8}>\r\n                  <li><strong>DATA</strong>. You have the sole responsibility for adequate protection and backup of Your data used in connection with the SaaS Offering, and You will not have any claim against Ikigai Labs for lost data, BREACH OF DATA, work delays, or lost profits resulting from the use of the SaaS Offering.</li>\r\n                </ol>\r\n                <ol start={9}>\r\n                  <li>\r\n                    <strong>Miscellaneous</strong>.\r\n                    <ol type=\"a\" className=\"ol-level-2\">\r\n                      <li><u>Assignment</u>. You may not assign or otherwise transfer any of Your rights or obligations under this Agreement to any third party (whether by operation of law or otherwise) without the prior written consent of Ikigai Labs.&nbsp; Any attempted or purported assignment or delegation by You without such required consent will be deemed null and void and deemed a material breach of this Agreement.</li>\r\n                      <li><u>Entire Agreement; Severability; and Waiver</u>. This Agreement sets forth the entire agreement and understanding of the parties relating to the subject matter herein and merges and supercedes all prior or contemporaneous oral or written discussions between them.&nbsp; If any provision of this Agreement is held by a court of competent jurisdiction to be illegal, invalid, or unenforceable, that provision will be limited or eliminated to the minimum extent necessary so that this Agreement otherwise remains in full force and effect and enforceable.&nbsp; No waiver of any of the provisions of this Agreement will be deemed or constitute a waiver of any other provision, whether or not similar, nor will any waiver constitute a continuing waiver.&nbsp;</li>\r\n                      <li><u>Modification</u>. Ikigai Labs may modify the terms and conditions of this Agreement from time to time by providing You an updated copy of this Agreement. You understand that Ikigai Labs reserves the right to make such modifications.&nbsp; Your continued access to or use of the SaaS Offering after any such modification will constitute Your consent to the modification.</li>\r\n                      <li><u>Governing Law</u>. This Agreement is governed by the law of California, U.S.A without regard to its conflict of laws&rsquo; provisions and any legal action or proceeding relating to this Agreement will be brought exclusively in the state or federal courts located in Santa Clara County. Notwithstanding the foregoing, Ikigai Labs will at all times have the right to commence proceedings in any other court of its choice with the appropriate jurisdiction for interim injunctive relief. In any judicial proceeding arising out of this Agreement, the prevailing party will be entitled to recover all reasonable expenses associated with such proceeding (including, without limitation, reasonable costs and fees of attorneys and other professionals).&nbsp;</li>\r\n                      <li><u>Independent Contractors</u>. The parties are independent contractors, and nothing in this Agreement will be construed to create a joint venture or partnership or otherwise give rise to fiduciary obligations between the parties. Neither party has the right or authority to assume or create any obligations or to make any representation, warranties or commitments on behalf of the other party, whether express or implied, or to bind the other party in any respect whatsoever.</li>\r\n                      <li><u>No Export</u>. Under no circumstances will You remove or export from the United States or allow the export or re-export of the SaaS Offering or anything related thereto, or any direct product thereof, in violation of any restrictions, laws or regulations of the United States Department of Commerce, the United States Department of Treasury Office of Foreign Assets Control, or any other United States or foreign agency or authority.</li>\r\n                      <li><u>Government End-Users</u>. Elements of the SaaS Offering are commercial computer software. If the user or licensee of the SaaS Offering is an agency, department, or other entity of the United States Government, the use, duplication, reproduction, release, modification, disclosure, or transfer of the SaaS Offering or any related documentation of any kind, including technical data and manuals, is restricted by a license agreement or by the terms of this Agreement in accordance with Federal Acquisition Regulation 12.212 for civilian purposes and Defense Federal Acquisition Regulation Supplement 227.7202 for military purposes. The SaaS Offering was developed fully at private expense.&nbsp; All other use is prohibited.</li>\r\n                      <li><u>Notice</u>. You will deliver all notices to Ikigai Labs required or permitted under this Agreement in writing and (i) personally, (ii) by certified, registered or express U.S. mail, postage prepaid, or (iii) by Federal Express or other similar commercial delivery service, to the following address: WeWork c/o Vinayak Ramesh, 2 Embarcadero Center, 8th Floor, San Francisco, CA 94111 United States, Attention: Vinayak Ramesh.&nbsp; Ikigai Labs will deliver notices to You to the physical or email address You provide upon Your registration.&nbsp; A printed version of this Agreement and of any notices given in electronic form will be admissible in judicial or administrative proceedings based upon or relating to this Agreement to the same extent and subject to the same conditions as other business documents and records originally generated and maintained in printed form.</li>\r\n                    </ol>\r\n                  </li>\r\n                </ol>\r\n                <p>&nbsp;</p>\r\n              </Box>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions className=\"footer\">\r\n            <Button\r\n              color=\"default\"\r\n              className=\"button\"\r\n              onClick={() => this.handleLicenseDialog(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"button\"\r\n              onClick={() => this.handleLicenseAccept()}\r\n            >\r\n              I accept\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormHelperText,\r\n  Link as MaterialUiLink,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport * as EmailValidator from 'email-validator';\r\nimport { initiateForgotPassword } from '../../../services';\r\n//import '../login/login.css';\r\n\r\ninterface Props {\r\n  data: any;\r\n  classes: any;\r\n  history: any;\r\n}\r\n\r\ninterface State {\r\n  emailValidation: boolean;\r\n  emailValue: any;\r\n  emailErrorMsg: any;\r\n  fpassSubmitErrorState: boolean;\r\n  fpassSubmitErrorMsg: string;\r\n  fpassSubmitSuccessState: boolean;\r\n  fpassSubmitSuccessMsg: string;\r\n  fpassSubmitState: boolean;\r\n  timeRemainingInSeconds: number;\r\n}\r\n\r\nclass FPass extends Component<Props, State> {\r\n\r\n  private timer: any;\r\n  \r\n  state = {\r\n    emailValidation: true,\r\n    emailValue: '',\r\n    emailErrorMsg: '',\r\n    fpassSubmitErrorState: false,\r\n    fpassSubmitErrorMsg: '',\r\n    fpassSubmitSuccessState: false,\r\n    fpassSubmitSuccessMsg: '',\r\n    fpassSubmitState: false,\r\n    timeRemainingInSeconds: 10\r\n  }\r\n\r\n  handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get email val: \" + e.target.value)\r\n    this.setState({ emailValue: e.target.value })\r\n  }\r\n\r\n  handleFPassFormSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    this.setState({ fpassSubmitState: true });\r\n    e.preventDefault()\r\n\r\n    let emailIsValid = false\r\n\r\n    setTimeout(() => {\r\n      if(this.state.emailValue !== ''){\r\n        //console.log(\"email with val: \" + this.state.emailValue)\r\n        if(EmailValidator.validate(this.state.emailValue) === true){\r\n          this.setState({ \r\n            emailValidation: true,\r\n            emailErrorMsg: ''\r\n          })\r\n          emailIsValid = true\r\n        }else{\r\n          this.setState({ \r\n            emailValidation: false, \r\n            emailErrorMsg: 'Invalid email' \r\n          })\r\n        }\r\n      }else{\r\n        //console.log(\"email without val: \" + this.state.emailValue)\r\n        this.setState({ \r\n          emailValidation: false, \r\n          emailErrorMsg: 'Email is required' \r\n        })\r\n      }\r\n\r\n      if(emailIsValid === true){\r\n        // FORGOT PASSWORD / INITIATE-FORGOT-PASSWORD API CALL GOES HERE AND IF EVERYTHING OK, GOES TO LOGIN\r\n        initiateForgotPassword(this.state.emailValue).then(res => {\r\n          if(res.status === 200){\r\n            this.setState({ fpassSubmitErrorMsg: '' })\r\n            this.setState({ fpassSubmitErrorState: false })\r\n            //this.setState({ fpassSubmitSuccessMsg: 'Email message with instructions has been sent. Please, click on button bellow to Reset password' })\r\n            this.setState({ fpassSubmitSuccessMsg: 'Email message with instructions has been sent' })\r\n            this.setState({ fpassSubmitSuccessState: true })\r\n            this.timer = setInterval(() => {\r\n              this.decrementTimeRemaining();\r\n            }, 1000);\r\n          }else if(res.status === 401){\r\n            //this.setState({ fpassSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n            this.setState({ fpassSubmitErrorMsg: 'You have entered an invalid email/username' })\r\n            this.setState({ fpassSubmitErrorState: true })\r\n          }else if(res.status === 404){\r\n            this.setState({ fpassSubmitErrorMsg: 'Error 404: Something went wrong!' })\r\n            this.setState({ fpassSubmitErrorState: true })\r\n          }else{\r\n            this.setState({ fpassSubmitErrorMsg: 'Email not found' })\r\n            this.setState({ fpassSubmitErrorState: true })\r\n          }\r\n        }).catch(err => {\r\n          if(err.response.status === 404) {\r\n            this.setState({ fpassSubmitErrorMsg: 'Error 404: Something went wrong!' })\r\n            this.setState({ fpassSubmitErrorState: true })\r\n          } else if(err.response.status === 401) {\r\n            //this.setState({ fpassSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n            this.setState({ fpassSubmitErrorMsg: 'You have entered an invalid email/username' })\r\n            this.setState({ fpassSubmitErrorState: true })\r\n          }else{\r\n            this.setState({ fpassSubmitErrorMsg: 'Email not found' })\r\n            this.setState({ fpassSubmitErrorState: true })\r\n          }\r\n        })\r\n        //this.props.history.push('/login')\r\n      }\r\n      this.setState({ fpassSubmitState: false });\r\n    }, 1000);\r\n  }\r\n\r\n  decrementTimeRemaining = () => {\r\n    if (this.state.timeRemainingInSeconds > 0) {\r\n      this.setState({\r\n        timeRemainingInSeconds: this.state.timeRemainingInSeconds - 1\r\n      });\r\n    } else {\r\n      clearInterval(this.timer!);\r\n      this.setState({\r\n        timeRemainingInSeconds: 10\r\n      });\r\n      this.props.history.push(\"/reset-password?e=\" + this.state.emailValue);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      emailValue,\r\n      emailValidation,\r\n      emailErrorMsg,\r\n      fpassSubmitErrorState,\r\n      fpassSubmitErrorMsg,\r\n      fpassSubmitSuccessState,\r\n      fpassSubmitSuccessMsg,\r\n      fpassSubmitState,\r\n      timeRemainingInSeconds\r\n    } = this.state;\r\n    return (\r\n      <Fragment>\r\n        {fpassSubmitState === true &&\r\n          <div className=\"mask\"></div>\r\n        }\r\n        <Container className=\"main-container\" component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper-box\">\r\n            <Typography className=\"login-logo\" component=\"h2\" variant=\"caption\">\r\n              <span>Ikigai</span>\r\n              <span>Labs</span>\r\n            </Typography>\r\n            <Box mt={4} mb={1}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Forgot Password\r\n              </Typography>\r\n              <Divider variant=\"middle\" className=\"subtitle-divider\" />\r\n            </Box>\r\n            <Typography className=\"subtitle\" component=\"div\" variant=\"caption\">\r\n              Lost your password? <br />\r\n              Please enter your username or email address. You will receive a link to create a new password via email.\r\n            </Typography>\r\n            {fpassSubmitSuccessState === false ?\r\n              <form \r\n                className=\"login-form\" \r\n                autoComplete=\"off\" \r\n                noValidate\r\n                onSubmit={this.handleFPassFormSubmit}\r\n              >\r\n                {emailValidation ?\r\n                  <TextField\r\n                    id=\"fpass-email\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    InputLabelProps={\r\n                      {\r\n                        shrink: true\r\n                      }\r\n                    }\r\n                    placeholder=\"Enter Your Email address\"\r\n                    type=\"search\"\r\n                    autoComplete=\"new-username\"\r\n                    autoFocus\r\n                    value={emailValue}\r\n                    onChange={this.handleEmailChange}\r\n                  />\r\n                :\r\n                  <div>\r\n                    <TextField\r\n                      id=\"fpass-email\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Email\"\r\n                      InputLabelProps={\r\n                        {\r\n                          shrink: true\r\n                        }\r\n                      }\r\n                      placeholder=\"Enter Your Email address\"\r\n                      type=\"search\"\r\n                      autoComplete=\"new-username\"\r\n                      autoFocus\r\n                      value={emailValue}\r\n                      onChange={this.handleEmailChange}\r\n                      error\r\n                    />\r\n                    <FormHelperText className=\"input-error\" error>\r\n                      <ErrorIcon />\r\n                      <span>{emailErrorMsg}</span>\r\n                    </FormHelperText>\r\n                  </div>\r\n                }\r\n                {fpassSubmitErrorState === true &&\r\n                  <Box mt={4} mb={4}>\r\n                    <div className=\"submit-error has-txt-centered\">{fpassSubmitErrorMsg}</div>\r\n                  </Box>\r\n                }\r\n                <Box mt={4}>\r\n                  <Grid container spacing={2} className=\"has-txt-centered\">\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\"button\"\r\n                          fullWidth\r\n                        >\r\n                          {fpassSubmitState === true &&\r\n                            <span className=\"btn-spinner\"></span>\r\n                          }\r\n                          <span>Send reset email</span>\r\n                        </Button>\r\n                        <div><br/></div>\r\n                        <Link to=\"/login\">\r\n                          or go back to Sign in page\r\n                        </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </form>\r\n            :\r\n              <React.Fragment>\r\n                <Box mt={4} mb={4}>\r\n                  <div className=\"submit-success has-txt-centered\">{fpassSubmitSuccessMsg}</div>\r\n                </Box>\r\n                <Box mt={4} mb={4}>\r\n                  <span>Redirecting to Reset password page in </span>\r\n                  <strong>{timeRemainingInSeconds}</strong>\r\n                </Box>\r\n              </React.Fragment>\r\n            }\r\n          </div>\r\n          <Box className=\"login-copyright\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {'Copyright © '}\r\n              <MaterialUiLink color=\"inherit\" href=\"http://ikigailabs.io/\">\r\n                IkigaiLabs.io\r\n              </MaterialUiLink>{' '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n    }\r\n}\r\n\r\nexport default FPass;","import { State } from '../../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport SignupComponent from './signup-component';\r\n\r\nconst mapDispatchToProps = (disptach: Dispatch) => ({});\r\nconst mapStateToProps = (state: State) => ({\r\n  isLoggedIn: state.userReducerState.isLoggedIn\r\n});\r\n\r\nexport const SignupContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignupComponent);\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormHelperText,\r\n  Link as MaterialUiLink,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { completeUserRegistration } from '../../../services';\r\n//import '../login/login.css';\r\n\r\ninterface Props {\r\n  data: any;\r\n  classes: any;\r\n  history: any;\r\n}\r\n\r\ninterface State {\r\n  codeValidation: boolean;\r\n  codeValue: any;\r\n  codeErrorMsg: any;\r\n  userEmail: any;\r\n  confirmCodeSubmitErrorMsg: string;\r\n  confirmCodeSubmitErrorState: boolean;\r\n\r\n}\r\n\r\nclass SignupConfirm extends Component<Props, State> {\r\n\r\n  state = {\r\n    codeValidation: true,\r\n    codeValue: '',\r\n    codeErrorMsg: '',\r\n    userEmail: '',\r\n    confirmCodeSubmitErrorMsg: '',\r\n    confirmCodeSubmitErrorState: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({ userEmail: '' })\r\n    let getURL: any = window.location.search;\r\n    //console.log(\"getURL: \" + getURL);\r\n    if(getURL !== ''){\r\n      let urlParam: any = new URLSearchParams(getURL);\r\n      //console.log(\"urlParam: \" + urlParam);\r\n      if(urlParam !== ''){\r\n        let userEmail: any = urlParam.get('e');\r\n        //console.log(\"userEmail: \" + userEmail);\r\n        if(userEmail !== ''){\r\n          let userEmailConverted: any = encodeURIComponent(userEmail).replace('%20','+');\r\n          let userEmailDecoded: any = decodeURIComponent(userEmailConverted);\r\n          //console.log(\"email: \" + userEmail);\r\n          this.getUserEmail(userEmailDecoded)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUserEmail = (eParam: string) => {\r\n    this.setState({ userEmail: eParam })\r\n  }\r\n\r\n  preparePageContent = () => {\r\n    const {\r\n      codeValue,\r\n      codeValidation,\r\n      codeErrorMsg,\r\n      userEmail,\r\n      confirmCodeSubmitErrorMsg,\r\n      confirmCodeSubmitErrorState\r\n    } = this.state;\r\n    if(this.state.userEmail !== ''){\r\n      return(\r\n        <Container className=\"main-container\" component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper-box\">\r\n            <Typography className=\"login-logo\" component=\"h2\" variant=\"caption\">\r\n              <span>Ikigai</span>\r\n              <span>Labs</span>\r\n            </Typography>\r\n            <Box mt={4} mb={1}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Complete registration\r\n              </Typography>\r\n              <Divider variant=\"middle\" className=\"subtitle-divider\" />\r\n            </Box>\r\n            <Typography className=\"subtitle\" component=\"div\" variant=\"caption\">\r\n              Please enter confirmation code you received on your email\r\n            </Typography>\r\n            <Box mt={1} mb={1}>\r\n              <strong>{userEmail}</strong>\r\n            </Box>\r\n            <form \r\n              className=\"login-form\" \r\n              autoComplete=\"off\" \r\n              noValidate\r\n              onSubmit={this.handleSConfirmFormSubmit}\r\n            >\r\n              {codeValidation ?\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirmation code\"\r\n                  InputLabelProps={\r\n                    {\r\n                      shrink: true\r\n                    }\r\n                  }\r\n                  placeholder=\"Enter Confirmation code\"\r\n                  type=\"search\"\r\n                  autoComplete=\"new-username\"\r\n                  autoFocus\r\n                  value={codeValue}\r\n                  onChange={this.handleCodeChange}\r\n                />\r\n              :\r\n                <div>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Confirmation code\"\r\n                    InputLabelProps={\r\n                      {\r\n                        shrink: true\r\n                      }\r\n                    }\r\n                    placeholder=\"Enter Confirmation code\"\r\n                    type=\"search\"\r\n                    autoComplete=\"new-username\"\r\n                    autoFocus\r\n                    value={codeValue}\r\n                    onChange={this.handleCodeChange}\r\n                    error\r\n                  />\r\n                  <FormHelperText className=\"input-error\" error>\r\n                    <ErrorIcon />\r\n                    <span>{codeErrorMsg}</span>\r\n                  </FormHelperText>\r\n                </div>\r\n              }\r\n              {confirmCodeSubmitErrorState === true &&\r\n                <Box mt={4} mb={4}>\r\n                  <div className=\"submit-error has-txt-centered\">{confirmCodeSubmitErrorMsg}</div>\r\n                </Box>\r\n              }\r\n              <Box mt={4}>\r\n                <Grid container spacing={2} className=\"has-txt-centered\">\r\n                  <Grid item xs={12}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\"button\"\r\n                      fullWidth\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Link to=\"/login\">\r\n                      or go back to Sign in page\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </form>\r\n          </div>\r\n          <Box className=\"login-copyright\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {'Copyright © '}\r\n              <MaterialUiLink color=\"inherit\" href=\"http://ikigailabs.io/\">\r\n                IkigaiLabs.io\r\n              </MaterialUiLink>{' '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      )\r\n    }else{\r\n      return(\r\n        <Container className=\"main-container\" component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper-box\">\r\n            <Typography className=\"login-logo\" component=\"h2\" variant=\"caption\">\r\n              IkigaiLabs\r\n            </Typography>\r\n            <Box mt={4} mb={1}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Complete registration\r\n              </Typography>\r\n              <Divider variant=\"middle\" className=\"subtitle-divider\" />\r\n            </Box>\r\n            <Typography className=\"subtitle\" component=\"div\" variant=\"caption\">\r\n              Please enter confirmation code you received on your email\r\n            </Typography>\r\n            <Box mt={4}>\r\n              <div className=\"submit-error has-txt-left\">\r\n                <Box mb={1}>Something went wrong, there are two possibilities:</Box>\r\n                <ol className=\"error-list\">\r\n                  <li>Confirmation code has expired</li>\r\n                  <li>You haven't used link from email to reach this page</li>\r\n                </ol>\r\n              </div>\r\n            </Box>\r\n            <Box mt={4} mb={2}>\r\n              <Link to=\"/SignUp\">\r\n                Don't have an account? Sign Up\r\n              </Link>\r\n            </Box>\r\n          </div>\r\n          <Box className=\"login-copyright\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {'Copyright © '}\r\n              <MaterialUiLink color=\"inherit\" href=\"http://ikigailabs.io/\">\r\n                IkigaiLabs.io\r\n              </MaterialUiLink>{' '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n\r\n  handleCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get email val: \" + e.target.value)\r\n    this.setState({ codeValue: e.target.value })\r\n  }\r\n\r\n  handleSConfirmFormSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n\r\n    let codeIsValid = false\r\n\r\n    if(this.state.codeValue !== ''){\r\n      codeIsValid = true\r\n      this.setState({ \r\n        codeValidation: true, \r\n        codeErrorMsg: '' \r\n      })\r\n    }else{\r\n      codeIsValid = false\r\n      this.setState({ \r\n        codeValidation: false, \r\n        codeErrorMsg: 'Confirmation code is required' \r\n      })\r\n    }\r\n\r\n    if(codeIsValid === true){\r\n      // COMPLETE REGISTRATION / CONFIRM-SIGN-UP API CALL GOES HERE AND IF EVERYTHING OK, GOES TO DASHBOARD\r\n      completeUserRegistration(this.state.userEmail, this.state.codeValue).then(res => {\r\n        if(res.status === 200){\r\n          this.setState({ confirmCodeSubmitErrorMsg: '' })\r\n          this.setState({ confirmCodeSubmitErrorState: false })\r\n          this.props.history.push('/dashboard')\r\n        }else if(res.status === 401){\r\n          //this.setState({ confirmCodeSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n          this.setState({ confirmCodeSubmitErrorMsg: 'Unable to complete registration.' })\r\n          this.setState({ confirmCodeSubmitErrorState: true })\r\n        }else if(res.status === 404){\r\n          this.setState({ confirmCodeSubmitErrorMsg: 'Error: Something went wrong.' })\r\n          this.setState({ confirmCodeSubmitErrorState: true })\r\n        }else{\r\n          this.setState({ confirmCodeSubmitErrorMsg: 'Unable to complete registration.' })\r\n          this.setState({ confirmCodeSubmitErrorState: true })\r\n        }\r\n      }).catch(err => {\r\n        if(err.response.status === 404) {\r\n          this.setState({ confirmCodeSubmitErrorMsg: 'Unable to complete registration.' })\r\n          this.setState({ confirmCodeSubmitErrorState: true })\r\n        } else if(err.response.status === 401) {\r\n          //this.setState({ confirmCodeSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n          this.setState({ confirmCodeSubmitErrorMsg: 'Error: Something went wrong.' })\r\n          this.setState({ confirmCodeSubmitErrorState: true })\r\n        }else{\r\n          this.setState({ confirmCodeSubmitErrorMsg: 'Unable to complete registration.' })\r\n          this.setState({ confirmCodeSubmitErrorState: true })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.preparePageContent()\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignupConfirm;","import { State } from '../../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport FPassComponent from './fpass-component';\r\n\r\nconst mapDispatchToProps = (disptach: Dispatch) => ({});\r\nconst mapStateToProps = (state: State) => ({});\r\n\r\nexport const FPassContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FPassComponent);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormHelperText,\r\n  Link as MaterialUiLink,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Divider,\r\n  InputAdornment,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { confirmForgotPassword } from '../../../services';\r\n//import '../login/login.css';\r\nvar passwordValidator = require('password-validator');\r\n\r\ninterface Props {\r\n  data: any;\r\n  classes: any;\r\n  history: any;\r\n}\r\n\r\ninterface State {\r\n  codeValidation: boolean;\r\n  codeValue: any;\r\n  codeErrorMsg: any;\r\n  userEmail: any;\r\n  verificationCodeSubmitErrorMsg: string;\r\n  verificationCodeSubmitErrorState: boolean;\r\n  passwordValidation: boolean;\r\n  passwordValidation2: boolean;\r\n  passwordValue: any;\r\n  passwordValue2: any;\r\n  passErrorMsg: any;\r\n  passErrorMsg2: any;\r\n  showPassword: boolean;\r\n  showPassword2: boolean;\r\n  resetpassSubmitErrorMsg: string;\r\n  resetpassSubmitErrorState: boolean;\r\n  resetpassSubmitSuccessState: boolean;\r\n  resetpassSubmitSuccessMsg: string;\r\n  rpassSubmitState: boolean;\r\n  timeRemainingInSeconds: number;\r\n}\r\n\r\n// Define rules and minimum requirements for password\r\nvar passwordRules = new passwordValidator();\r\npasswordRules\r\n.is().min(8)            // Minimum length 8\r\n.is().max(100)          // Maximum length 100\r\n.has().uppercase()      // Must have uppercase letters\r\n.has().lowercase()      // Must have lowercase letters\r\n.has().digits()         // Must have digits\r\n.has().not().spaces();  // Should not have spaces\r\n\r\nclass ResetPassword extends Component<Props, State> {\r\n\r\n  private timer: any;\r\n\r\n  state = {\r\n    codeValidation: true,\r\n    codeValue: '',\r\n    codeErrorMsg: '',\r\n    userEmail: '',\r\n    verificationCodeSubmitErrorMsg: '',\r\n    verificationCodeSubmitErrorState: false,\r\n    passwordValidation: true,\r\n    passwordValidation2: true,\r\n    passwordValue: '',\r\n    passwordValue2: '',\r\n    passErrorMsg: '',\r\n    passErrorMsg2: '',\r\n    showPassword: true,\r\n    showPassword2: true,\r\n    resetpassSubmitErrorMsg: '',\r\n    resetpassSubmitErrorState: false,\r\n    resetpassSubmitSuccessState: false,\r\n    resetpassSubmitSuccessMsg: '',\r\n    rpassSubmitState: false,\r\n    timeRemainingInSeconds: 10\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({ userEmail: '' })\r\n    let getURL: any = window.location.search;\r\n    //console.log(\"getURL: \" + getURL);\r\n    if(getURL !== ''){\r\n      let urlParam: any = new URLSearchParams(getURL);\r\n      //console.log(\"urlParam: \" + urlParam);\r\n      if(urlParam !== ''){\r\n        let userEmail: any = urlParam.get('e');\r\n        //console.log(\"userEmail: \" + userEmail);\r\n        if(userEmail !== ''){\r\n          let userEmailConverted: any = encodeURIComponent(userEmail).replace('%20','+');\r\n          let userEmailDecoded: any = decodeURIComponent(userEmailConverted);\r\n          //console.log(\"email: \" + userEmail);\r\n          this.getUserEmail(userEmailDecoded)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getUserEmail = (eParam: string) => {\r\n    this.setState({ userEmail: eParam })\r\n  }\r\n\r\n  handlePassChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get pass val: \" + e.target.value)\r\n    this.setState({ passwordValue: e.target.value })\r\n  }\r\n\r\n  handlePassChange2 = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get pass val: \" + e.target.value)\r\n    this.setState({ passwordValue2: e.target.value })\r\n  }\r\n\r\n  handleClickShowPassword = () => {\r\n    if(this.state.showPassword === true){\r\n      this.setState({ showPassword: false })\r\n    }else{\r\n      this.setState({ showPassword: true })\r\n    }\r\n  }\r\n\r\n  handleClickShowPassword2 = () => {\r\n    if(this.state.showPassword2 === true){\r\n      this.setState({ showPassword2: false })\r\n    }else{\r\n      this.setState({ showPassword2: true })\r\n    }\r\n  }\r\n\r\n  decrementTimeRemaining = () => {\r\n    if (this.state.timeRemainingInSeconds > 0) {\r\n      this.setState({\r\n        timeRemainingInSeconds: this.state.timeRemainingInSeconds - 1\r\n      });\r\n    } else {\r\n      clearInterval(this.timer!);\r\n      this.setState({\r\n        timeRemainingInSeconds: 10\r\n      });\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  preparePageContent = () => {\r\n    const {\r\n      codeValue,\r\n      codeValidation,\r\n      codeErrorMsg,\r\n      userEmail,\r\n      verificationCodeSubmitErrorMsg,\r\n      verificationCodeSubmitErrorState,\r\n      passwordValidation,\r\n      passwordValidation2,\r\n      passwordValue,\r\n      passwordValue2,\r\n      passErrorMsg,\r\n      passErrorMsg2,\r\n      showPassword,\r\n      showPassword2,\r\n      resetpassSubmitErrorMsg,\r\n      resetpassSubmitErrorState,\r\n      resetpassSubmitSuccessState,\r\n      resetpassSubmitSuccessMsg,\r\n      rpassSubmitState,\r\n      timeRemainingInSeconds\r\n    } = this.state;\r\n    if(this.state.userEmail !== ''){\r\n      return(\r\n        <Fragment>\r\n          {rpassSubmitState === true &&\r\n            <div className=\"mask\"></div>\r\n          }\r\n          <Container className=\"main-container\" component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className=\"paper-box\">\r\n              <Typography className=\"login-logo\" component=\"h2\" variant=\"caption\">\r\n                <span>Ikigai</span>\r\n                <span>Labs</span>\r\n              </Typography>\r\n              <Box mt={4} mb={1}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                Reset password\r\n                </Typography>\r\n                <Divider variant=\"middle\" className=\"subtitle-divider\" />\r\n              </Box>\r\n              <Typography className=\"subtitle\" component=\"div\" variant=\"caption\">\r\n                Please enter verification code you received on your email\r\n              </Typography>\r\n              <Box mt={1} mb={1}>\r\n                <strong>{userEmail}</strong>\r\n              </Box>\r\n              {resetpassSubmitSuccessState === false ?\r\n                <form \r\n                  className=\"login-form\" \r\n                  autoComplete=\"off\" \r\n                  noValidate\r\n                  onSubmit={this.handleSConfirmFormSubmit}\r\n                >\r\n                  {codeValidation ?\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      label=\"Verification code\"\r\n                      InputLabelProps={\r\n                        {\r\n                          shrink: true\r\n                        }\r\n                      }\r\n                      placeholder=\"Enter verification code\"\r\n                      type=\"search\"\r\n                      autoComplete=\"new-username\"\r\n                      autoFocus\r\n                      value={codeValue}\r\n                      onChange={this.handleCodeChange}\r\n                    />\r\n                  :\r\n                    <div>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Verification code\"\r\n                        InputLabelProps={\r\n                          {\r\n                            shrink: true\r\n                          }\r\n                        }\r\n                        placeholder=\"Enter verification code\"\r\n                        type=\"search\"\r\n                        autoComplete=\"new-username\"\r\n                        autoFocus\r\n                        value={codeValue}\r\n                        onChange={this.handleCodeChange}\r\n                        error\r\n                      />\r\n                      <FormHelperText className=\"input-error\" error>\r\n                        <ErrorIcon />\r\n                        <span>{codeErrorMsg}</span>\r\n                      </FormHelperText>\r\n                    </div>\r\n                  }\r\n                  {passwordValidation ?\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"New password\"\r\n                        InputLabelProps={\r\n                          {\r\n                            shrink: true\r\n                          }\r\n                        }\r\n                        placeholder=\"Enter new password\"\r\n                        type={showPassword ? \"password\" : \"text\"}\r\n                        autoComplete=\"new-password\"\r\n                        value={passwordValue}\r\n                        onChange={this.handlePassChange}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={this.handleClickShowPassword}\r\n                                onMouseDown={event => { event.preventDefault(); }}\r\n                                size=\"small\"\r\n                              >\r\n                                {showPassword ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                              </IconButton>\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    :\r\n                      <div>\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          fullWidth\r\n                          label=\"New password\"\r\n                          InputLabelProps={\r\n                            {\r\n                              shrink: true\r\n                            }\r\n                          }\r\n                          placeholder=\"Enter new password\"\r\n                          type={showPassword ? \"password\" : \"text\"}\r\n                          autoComplete=\"new-password\"\r\n                          value={passwordValue}\r\n                          onChange={this.handlePassChange}\r\n                          error\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  edge=\"end\"\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={this.handleClickShowPassword}\r\n                                  onMouseDown={event => { event.preventDefault(); }}\r\n                                  size=\"small\"\r\n                                >\r\n                                  {showPassword ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                        <FormHelperText className=\"input-error\" error>\r\n                          <ErrorIcon />\r\n                          <span>{passErrorMsg}</span>\r\n                        </FormHelperText>\r\n                      </div>\r\n                    }\r\n                    {passwordValidation2 ?\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          fullWidth\r\n                          label=\"Confirm password\"\r\n                          InputLabelProps={\r\n                            {\r\n                              shrink: true\r\n                            }\r\n                          }\r\n                          placeholder=\"Enter new password again\"\r\n                          type={showPassword2 ? \"password\" : \"text\"}\r\n                          autoComplete=\"new-password\"\r\n                          value={passwordValue2}\r\n                          onChange={this.handlePassChange2}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  edge=\"end\"\r\n                                  aria-label=\"toggle password visibility\"\r\n                                  onClick={this.handleClickShowPassword2}\r\n                                  onMouseDown={event => { event.preventDefault(); }}\r\n                                  size=\"small\"\r\n                                >\r\n                                  {showPassword2 ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      :\r\n                        <div>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Confirm password\"\r\n                            InputLabelProps={\r\n                              {\r\n                                shrink: true\r\n                              }\r\n                            }\r\n                            placeholder=\"Enter new password again\"\r\n                            type={showPassword2 ? \"password\" : \"text\"}\r\n                            autoComplete=\"new-password\"\r\n                            value={passwordValue2}\r\n                            onChange={this.handlePassChange2}\r\n                            error\r\n                            InputProps={{\r\n                              endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                  <IconButton\r\n                                    edge=\"end\"\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={this.handleClickShowPassword2}\r\n                                    onMouseDown={event => { event.preventDefault(); }}\r\n                                    size=\"small\"\r\n                                  >\r\n                                    {showPassword2 ? <VisibilityOff fontSize=\"small\" /> : <Visibility fontSize=\"small\" />}\r\n                                  </IconButton>\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                          <FormHelperText className=\"input-error\" error>\r\n                            <ErrorIcon />\r\n                            <span>{passErrorMsg2}</span>\r\n                          </FormHelperText>\r\n                        </div>\r\n                      }\r\n                  {resetpassSubmitErrorState === true &&\r\n                    <Box mt={4} mb={4}>\r\n                      <div className=\"submit-error has-txt-centered\">{resetpassSubmitErrorMsg}</div>\r\n                    </Box>\r\n                  }\r\n                  {verificationCodeSubmitErrorState === true &&\r\n                    <Box mt={4} mb={4}>\r\n                      <div className=\"submit-error has-txt-centered\">{verificationCodeSubmitErrorMsg}</div>\r\n                    </Box>\r\n                  }\r\n                  <Box mt={4}>\r\n                    <Grid container spacing={2} className=\"has-txt-centered\">\r\n                          <Grid item xs={12}>\r\n                            <Button\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              className=\"button\"\r\n                              fullWidth\r\n                            >\r\n                              {rpassSubmitState === true &&\r\n                                <span className=\"btn-spinner\"></span>\r\n                              }\r\n                              <span>Reset</span>\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Link to=\"/login\">\r\n                              or go back to Sign in page\r\n                            </Link>\r\n                          </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </form>\r\n              :\r\n                <Fragment>\r\n                  <Box mt={4} mb={4}>\r\n                    <div className=\"submit-success has-txt-centered\">{resetpassSubmitSuccessMsg}</div>\r\n                  </Box>\r\n                  <Box mt={4} mb={4}>\r\n                    <span>Redirecting to Sign in page in </span>\r\n                    <strong>{timeRemainingInSeconds}</strong>\r\n                  </Box>\r\n                </Fragment>\r\n              }\r\n            </div>\r\n            <Box className=\"login-copyright\">\r\n              <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {'Copyright © '}\r\n                <MaterialUiLink color=\"inherit\" href=\"http://ikigailabs.io/\">\r\n                  IkigaiLabs.io\r\n                </MaterialUiLink>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n              </Typography>\r\n            </Box>\r\n          </Container>\r\n        </Fragment>\r\n      )\r\n    }else{\r\n      return(\r\n        <Container className=\"main-container\" component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper-box\">\r\n            <Typography className=\"login-logo\" component=\"h2\" variant=\"caption\">\r\n              <span>Ikigai</span>\r\n              <span>Labs</span>\r\n            </Typography>\r\n            <Box mt={4} mb={1}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Reset password\r\n              </Typography>\r\n              <Divider variant=\"middle\" className=\"subtitle-divider\" />\r\n            </Box>\r\n            <Typography className=\"subtitle\" component=\"div\" variant=\"caption\">\r\n              Please enter verification code you received on your email\r\n            </Typography>\r\n            <Box mt={4}>\r\n              <div className=\"submit-error has-txt-left\">\r\n                <Box mb={1}>Something went wrong, there are two possibilities:</Box>\r\n                <ol className=\"error-list\">\r\n                  <li>You haven't submited \"Forgot password\" form</li>\r\n                  <li>Verification code has expired</li>\r\n                </ol>\r\n              </div>\r\n            </Box>\r\n            <Box mt={4} mb={2}>\r\n              <Link to=\"/forgot-password\">\r\n                Go to \"Forgot password\" page\r\n              </Link>\r\n            </Box>\r\n          </div>\r\n          <Box className=\"login-copyright\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n              {'Copyright © '}\r\n              <MaterialUiLink color=\"inherit\" href=\"http://ikigailabs.io/\">\r\n                IkigaiLabs.io\r\n              </MaterialUiLink>{' '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n\r\n  handleCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    //console.log(\"get email val: \" + e.target.value)\r\n    this.setState({ codeValue: e.target.value })\r\n  }\r\n\r\n  handleSConfirmFormSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    this.setState({ rpassSubmitState: true });\r\n    e.preventDefault()\r\n\r\n    let codeIsValid = false\r\n    let passIsValid = false\r\n    let passIsValid2 = false\r\n\r\n    setTimeout(() => {\r\n      if(this.state.codeValue !== ''){\r\n        codeIsValid = true\r\n        this.setState({ \r\n          codeValidation: true, \r\n          codeErrorMsg: '' \r\n        })\r\n      }else{\r\n        codeIsValid = false\r\n        this.setState({ \r\n          codeValidation: false, \r\n          codeErrorMsg: 'Verification code is required' \r\n        })\r\n      }\r\n\r\n      if(this.state.passwordValue !== ''){\r\n        //console.log(\"email with val: \" + this.state.passwordValue)\r\n        if(passwordRules.validate(this.state.passwordValue) === true){\r\n          this.setState({ \r\n            passwordValidation: true, \r\n            passErrorMsg: ''\r\n          })\r\n          passIsValid = true\r\n        }else{\r\n          this.setState({ \r\n            passwordValidation: false, \r\n            passErrorMsg: 'Password must contain uppercase and lowercase letter, number and be 8 - 16 characters long'\r\n          })\r\n          passIsValid = false\r\n        }\r\n      }else{\r\n        //console.log(\"email without val: \" + this.state.passwordValue)\r\n        this.setState({ \r\n          passwordValidation: false,\r\n          passErrorMsg: 'Password is required'\r\n        })\r\n      }\r\n\r\n      if(this.state.passwordValue2 !== ''){\r\n        //console.log(\"email with val: \" + this.state.passwordValue2)\r\n        if(this.state.passwordValue2 === this.state.passwordValue){\r\n          this.setState({ \r\n            passwordValidation2: true, \r\n            passErrorMsg2: ''\r\n          })\r\n          passIsValid2 = true\r\n        }else{\r\n          this.setState({ \r\n            passwordValidation2: false, \r\n            passErrorMsg2: 'Passwords are not equal'\r\n          })\r\n          passIsValid2 = false\r\n        }\r\n      }else{\r\n        //console.log(\"email without val: \" + this.state.passwordValue2)\r\n        this.setState({ \r\n          passwordValidation2: false,\r\n          passErrorMsg2: 'Confirm password is required'\r\n        })\r\n      }\r\n\r\n      if(codeIsValid === true && passIsValid === true && passIsValid2 === true){\r\n        // COMPLETE REGISTRATION / CONFIRM-SIGN-UP API CALL GOES HERE AND IF EVERYTHING OK, GOES TO DASHBOARD\r\n        confirmForgotPassword(this.state.userEmail, this.state.codeValue, this.state.passwordValue).then(res => {\r\n          if(res.status === 200){\r\n            this.setState({ verificationCodeSubmitErrorMsg: '' })\r\n            this.setState({ verificationCodeSubmitErrorState: false })\r\n            this.setState({ resetpassSubmitSuccessMsg: 'Congratulations. You have successfully created new password.' })\r\n            this.setState({ resetpassSubmitSuccessState: true })\r\n            this.timer = setInterval(() => {\r\n              this.decrementTimeRemaining();\r\n            }, 1000);\r\n          }else if(res.status === 401){\r\n            //this.setState({ verificationCodeSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n            this.setState({ verificationCodeSubmitErrorMsg: 'Unable to reset password.' })\r\n            this.setState({ verificationCodeSubmitErrorState: true })\r\n          }else if(res.status === 404){\r\n            this.setState({ verificationCodeSubmitErrorMsg: 'Error: Something went wrong.' })\r\n            this.setState({ verificationCodeSubmitErrorState: true })\r\n          }else{\r\n            this.setState({ verificationCodeSubmitErrorMsg: 'Unable to reset password.' })\r\n            this.setState({ verificationCodeSubmitErrorState: true })\r\n          }\r\n        }).catch(err => {\r\n          if(err.response.status === 404) {\r\n            this.setState({ verificationCodeSubmitErrorMsg: 'Unable to reset password.' })\r\n            this.setState({ verificationCodeSubmitErrorState: true })\r\n          } else if(err.response.status === 401) {\r\n            //this.setState({ verificationCodeSubmitErrorMsg: 'Error 401: Something went wrong!' })\r\n            this.setState({ verificationCodeSubmitErrorMsg: 'Error: Something went wrong.' })\r\n            this.setState({ verificationCodeSubmitErrorState: true })\r\n          }else{\r\n            this.setState({ verificationCodeSubmitErrorMsg: 'Unable to reset password.' })\r\n            this.setState({ verificationCodeSubmitErrorState: true })\r\n          }\r\n        })\r\n      }\r\n      this.setState({ rpassSubmitState: false });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.preparePageContent()\r\n    )\r\n  }\r\n}\r\n\r\nexport default ResetPassword;","import { State } from '../../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport SignupConfirmComponent from './sconfirm-component';\r\n\r\nconst mapDispatchToProps = (disptach: Dispatch) => {};\r\nconst mapStateToProps = (state: State) => {};\r\n\r\nexport const SignupConfirmContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignupConfirmComponent);\r\n","import { State } from '../../../reducers';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport ResetPasswordComponent from './resetpass-component';\r\n\r\nconst mapDispatchToProps = (disptach: Dispatch) => ({});\r\nconst mapStateToProps = (state: State) => ({});\r\n\r\nexport const ResetPasswordContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResetPasswordComponent);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = (params: any) => {\r\n  const { component: Component, loggedin, redirectTo, ...rest } = params;\r\n  //console.log(rest, Component);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props: any) => {\r\n        return loggedin === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from 'react';\r\n//import SnackbarMsg from './components/SnackbarMsg';\r\n//import './App.scss';\r\n//import './themes/index.scss';\r\nimport {\r\n  FlowDiagramContainer,\r\n  DatasetContainer,\r\n  IkiAppContainer,\r\n  LoginContainer,\r\n  //SignupContainer,\r\n  //FPassContainer,\r\n  //ResetPasswordContainer,\r\n  DashViewContainer\r\n} from './routes';\r\n\r\nimport ProtectedRoute from './components/protected-route';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Dispatch } from 'redux';\r\nimport { checkForLoginCookieActionStart, softLogoutAction } from './actions';\r\nimport { connect } from 'react-redux';\r\nimport { State } from './reducers';\r\nimport { _axios } from './common';\r\n\r\n//import Fab from \"@material-ui/core/Fab\";\r\n\r\n//import PublishIcon from \"@material-ui/icons/Publish\";\r\n//import { Button, Popover } from '@material-ui/core';\r\n//import LinearProgress from '@material-ui/core/LinearProgress';\r\n//import ReplayIcon from '@material-ui/icons/Replay';\r\n//import ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n//import red from '@material-ui/core/colors/red';\r\n//import DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// Check if production or development mode\r\nif(process.env.NODE_ENV){\r\n  console.log(\"process.env.NODE_ENV: \" + process.env.NODE_ENV);\r\n}\r\n\r\ntype AppProps = {\r\n  checkForLoginCookie: () => void;\r\n  checkForLoginComplete: boolean;\r\n  isLoggedIn: boolean;\r\n  softLogout: () => void;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  checkForLoginCookie: () => dispatch(checkForLoginCookieActionStart()),\r\n  softLogout: () => dispatch(softLogoutAction())\r\n});\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  checkForLoginComplete: state.userReducerState.checkForLoginCookieComplete,\r\n  isLoggedIn: state.userReducerState.isLoggedIn,\r\n});\r\n\r\nclass AppComponent extends Component<AppProps> {\r\n  state = { \r\n    winWidth: 0, \r\n    winHeight: 0,\r\n    internetSnackbarAppearance: '',\r\n    internetSnackbarOpen: false,\r\n    internetSnackbarDuration: '',\r\n    internetSnackbarType: '',\r\n    internetSnackbarMsg: '',\r\n    showProgress:false,\r\n  };\r\n  componentDidMount() {\r\n    //Intercept responses and if the API throws error and the status code is 401 logout user.\r\n    _axios.interceptors.response.use(\r\n      response => {\r\n        return response;\r\n      },\r\n      error => {\r\n        if (error.response) {\r\n          const { status } = error.response;\r\n          if (status === 401) {\r\n            //Soft logout just logs out the user without calling the logout API but just clearing the cookies.\r\n            this.props.softLogout();\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    //Check if login cookie exists and navigate to dashboard if it exists.\r\n    this.props.checkForLoginCookie();\r\n    console.log(_axios.interceptors.response);\r\n    window.addEventListener('resize', this.windowDimensions);\r\n    this.windowDimensions();\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.windowDimensions);\r\n  }\r\n  windowDimensions = () => {\r\n    this.setState({\r\n      winWidth: window.innerWidth,\r\n      winHeight: window.innerHeight\r\n    });\r\n  };\r\n  getMobileResizeMessage() {\r\n    if (this.state.winWidth < 1024) {\r\n      return (\r\n        <div className=\"mobile-wrap-container\">\r\n          <div className=\"mobile-wrap\">\r\n            <div className=\"logo\">\r\n              <span className=\"ikigai\">Ikigai</span>\r\n              <span className=\"labs\">Labs</span>\r\n            </div>\r\n            <div className=\"icon-holder-wrap\">\r\n              <div className=\"icon-holder\">\r\n                <i className=\"zmdi zmdi-smartphone-android\"></i>\r\n              </div>\r\n              <div className=\"icon-holder\">\r\n                <i className=\"zmdi small zmdi-long-arrow-right\"></i>\r\n              </div>\r\n              <div className=\"icon-holder\">\r\n                <i className=\"zmdi zmdi-desktop-windows\"></i>\r\n              </div>\r\n            </div>\r\n            <div className=\"txt-holder\">\r\n              <div>Please use a device with a larger screen </div>\r\n              <div> or maximize your browser window</div>\r\n              <div>Thank you</div>\r\n            </div>\r\n            <div className=\"copyright\">\r\n              <span>{'Copyright © IkigaiLabs, '}</span>\r\n              <span>{new Date().getFullYear()}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    // this.checkInternetConnection();\r\n    if (!this.props.checkForLoginComplete) {\r\n      return (\r\n        <div className=\"loader-wrapper\">\r\n          <div className=\"loader\"></div>\r\n          <div className=\"loader-txt\">Loading...</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {this.getMobileResizeMessage()}\r\n          <Switch>\r\n            <Route path=\"/login\" component={LoginContainer}></Route>\r\n            {/* <Route path=\"/signup\" component={SignupContainer}></Route>\r\n            <Route path=\"/forgot-password\" component={FPassContainer}></Route>\r\n            <Route\r\n              path=\"/reset-password\"\r\n              component={ResetPasswordContainer}\r\n            ></Route> */}\r\n            {/* <Route path=\"/complete-registration\" component={SignupConfirmContainer}></Route> */}\r\n            {/* <Route path=\"/dashboard\" component={IkiAppContainer}></Route> */}\r\n            <ProtectedRoute\r\n              path=\"/dashboard\"\r\n              loggedin={this.props.isLoggedIn}\r\n              redirectTo=\"/login\"\r\n              component={IkiAppContainer}\r\n            ></ProtectedRoute>\r\n            <ProtectedRoute\r\n              path=\"/flow/:id\"\r\n              loggedin={this.props.isLoggedIn}\r\n              redirectTo=\"/login\"\r\n              component={FlowDiagramContainer}\r\n            ></ProtectedRoute>\r\n            <ProtectedRoute\r\n              path=\"/dash/:id\"\r\n              loggedin={this.props.isLoggedIn}\r\n              redirectTo=\"/login\"\r\n              component={DashViewContainer}\r\n            ></ProtectedRoute>\r\n            <ProtectedRoute\r\n             path=\"/dataset/:id\"\r\n             loggedin={this.props.isLoggedIn}\r\n             redirectTo=\"/login\"\r\n             component={DatasetContainer}\r\n             ></ProtectedRoute>\r\n            <Route path=\"/\" component={LoginContainer}></Route>\r\n          </Switch>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppComponent);\r\n\r\n//export  App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport './themes/index.scss';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\n//import { createMuiTheme } from '@material-ui/core/styles';\r\n//import { ThemeProvider } from '@material-ui/styles';\r\n//import MomentUtils from '@date-io/moment';\r\n//import { MuiPickersUtilsProvider } from 'material-ui-pickers';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { history } from './history';\r\n//import './assets/vendors/style';\r\n//import indigoTheme from './themes/indigoTheme';\r\nimport { store } from './store';\r\n\r\n//const theme = createMuiTheme(indigoTheme);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n        <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawerHolder\":\"Navigation_drawerHolder__rCAJO\",\"goBack\":\"Navigation_goBack__1uWfx\",\"goBackIcon\":\"Navigation_goBackIcon__3KnKs\",\"minimized\":\"Navigation_minimized__2RgId\",\"toggleNavButton\":\"Navigation_toggleNavButton__14A0b\",\"filterSidebar\":\"Navigation_filterSidebar__1VVGc\",\"pureBg\":\"Navigation_pureBg__nfL9P\",\"infoDrawerHolder\":\"Navigation_infoDrawerHolder__mCPEo\",\"logoutBtn\":\"Navigation_logoutBtn__1DYvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3RbPw\",\"header\":\"Dialog_header__2eU25\",\"title\":\"Dialog_title__1QKvc\",\"subtitle\":\"Dialog_subtitle__2sQu4\",\"content\":\"Dialog_content__4Eh_w\",\"footer\":\"Dialog_footer__Ci00Z\",\"center\":\"Dialog_center__24gh9\",\"delete\":\"Dialog_delete__3pZYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1VWlY\",\"title\":\"Alert_title__2V9p7\",\"descr\":\"Alert_descr__H5g0z\",\"buttons\":\"Alert_buttons__3EK_h\",\"MuiAlert-standardWarning\":\"Alert_MuiAlert-standardWarning__1hup9\",\"MuiAlert-message\":\"Alert_MuiAlert-message__1yVeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputHolder\":\"Input_inputHolder__3ZZk3\",\"input\":\"Input_input__1H8Oh\",\"startIcon\":\"Input_startIcon__2fdZj\",\"has-startIcon\":\"Input_has-startIcon__3BZ0C\",\"of-filter-type\":\"Input_of-filter-type__1dF-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputChipHolder\":\"ChipInput_inputChipHolder__1WPvy\",\"inputChip\":\"ChipInput_inputChip__1Nbyh\",\"startIcon\":\"ChipInput_startIcon__2LNKq\",\"has-startIcon\":\"ChipInput_has-startIcon__GBhMJ\",\"of-filter-type\":\"ChipInput_of-filter-type__32JDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navMenuHolderScrollbar\":\"SideMenu_navMenuHolderScrollbar__3E0DF\",\"minimized\":\"SideMenu_minimized__1JIUg\",\"navMenuHolder\":\"SideMenu_navMenuHolder__3dEmA\",\"navMenu\":\"SideMenu_navMenu__2DjF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumb\":\"Breadcrumb_breadcrumb__3v2a7\",\"path\":\"Breadcrumb_path__1-3ne\",\"title\":\"Breadcrumb_title__mnwb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootCanvas\":\"FlowComponent_rootCanvas__vdyw5\",\"dropArea\":\"FlowComponent_dropArea__2cYwP\",\"interactiveFrame\":\"FlowComponent_interactiveFrame__7Jy6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centralPanel\":\"DatasetComponent_centralPanel__1Gwsv\",\"metabaseIframe\":\"DatasetComponent_metabaseIframe__YKjqB\",\"gobackPopupContainer\":\"DatasetComponent_gobackPopupContainer__2XzwN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1j_1J\",\"buttonsHolder\":\"Header_buttonsHolder__YLjcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashCentralPanel\":\"DashComponent_dashCentralPanel__E_npk\",\"metabaseIframe\":\"DashComponent_metabaseIframe__3yBBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1iUsX\",\"left\":\"Button_left__18cVi\",\"warning\":\"Button_warning__2AZvW\",\"btnSpinner\":\"Button_btnSpinner__3ht6S\",\"load3\":\"Button_load3__FZ__I\",\"alternate\":\"Button_alternate__3KKLt\",\"on-error\":\"Button_on-error__2z7Fa\",\"spin\":\"Button_spin__1P5gG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textDivider\":\"Divider_textDivider__25ESA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocompleteHolder\":\"Autocomplete_autocompleteHolder__3VsvL\",\"autocomplete\":\"Autocomplete_autocomplete__1iwuZ\",\"startIcon\":\"Autocomplete_startIcon__3WCwh\",\"has-startIcon\":\"Autocomplete_has-startIcon__2Yq5y\",\"of-filter-type\":\"Autocomplete_of-filter-type__3WD8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginLogo\":\"Logo_loginLogo__jYFKW\",\"small\":\"Logo_small__mzSWB\",\"normal\":\"Logo_normal__35MV7\",\"big\":\"Logo_big__1sLH7\",\"primary\":\"Logo_primary__2jpfJ\",\"white\":\"Logo_white__3OP3z\",\"minimized\":\"Logo_minimized__10BGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interactiveWrap\":\"Preview_interactiveWrap__3sxwk\",\"show\":\"Preview_show__2MUL4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peekWrap\":\"Peek_peekWrap__3vf-L\",\"show\":\"Peek_show__D6OXR\",\"max\":\"Peek_max__3_HR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"ButtonGroup_buttonGroup__12m5e\",\"primary\":\"ButtonGroup_primary__1b9kQ\",\"secondary\":\"ButtonGroup_secondary__1RHb6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__1QJlK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"Content_contentArea__c6vZz\",\"minimized\":\"Content_minimized__3KTYE\",\"dataset\":\"Content_dataset__1M-r3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"ContentOverlay_contentArea__2x-Qo\",\"minimized\":\"ContentOverlay_minimized__wgKmx\",\"dataset\":\"ContentOverlay_dataset__10P9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customNode\":\"Node_customNode__29gWY\",\"buttonGroup\":\"Node_buttonGroup__30jSo\",\"customNodeCard\":\"Node_customNodeCard__2NJ6k\",\"circlePort\":\"Node_circlePort__1zKjQ\",\"error\":\"Node_error__29EoI\",\"customNodeName\":\"Node_customNodeName__F8txa\",\"facetNameHolder\":\"Node_facetNameHolder__1fYXr\",\"facetName\":\"Node_facetName__u_wiJ\",\"customNodeHeader\":\"Node_customNodeHeader__2ktKq\",\"customNodeChainGroup\":\"Node_customNodeChainGroup__B2afJ\",\"customNodeTitle\":\"Node_customNodeTitle__2WhCb\",\"errorList\":\"Node_errorList__vhPs6\",\"errorMessage\":\"Node_errorMessage__2o-6d\",\"errorMessageTitle\":\"Node_errorMessageTitle__15nb7\",\"nodeErrorIcon\":\"Node_nodeErrorIcon__raDwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBox\":\"ItemBox_itemBox__2-6bN\",\"uploading\":\"ItemBox_uploading__35Ub0\",\"uploadingDatabox\":\"ItemBox_uploadingDatabox__1x2Ol\",\"clicked\":\"ItemBox_clicked__2whGR\",\"header\":\"ItemBox_header__fMuMc\",\"icon\":\"ItemBox_icon__fBzvr\",\"type\":\"ItemBox_type__1o8dO\",\"menu\":\"ItemBox_menu__1vFnP\",\"content\":\"ItemBox_content__1vGky\",\"link\":\"ItemBox_link__6lcLF\",\"title\":\"ItemBox_title__2oHLb\",\"faded1\":\"ItemBox_faded1__357d2\",\"newSection\":\"ItemBox_newSection__1W0St\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Login_mainContainer__1_CTT\",\"box\":\"Login_box__1n5IH\",\"mask\":\"Login_mask__2Er-S\",\"mainTitle\":\"Login_mainTitle__dix-Q\",\"subtitle\":\"Login_subtitle__3XYas\",\"subtitleDivider\":\"Login_subtitleDivider__EZt1P\",\"loginForm\":\"Login_loginForm__3Op2V\",\"submitError\":\"Login_submitError__282da\",\"loginCopyright\":\"Login_loginCopyright__-wSbQ\",\"license-box\":\"Login_license-box__1kt2G\",\"label-txt\":\"Login_label-txt__AKual\",\"license-label-box\":\"Login_license-label-box__1-_oY\",\"has-error\":\"Login_has-error__3DWHS\",\"MuiIconButton-root\":\"Login_MuiIconButton-root__1M9Bb\",\"license-dialog-content\":\"Login_license-dialog-content__1wrRq\",\"ol-level-2\":\"Login_ol-level-2__2QrEY\"};"],"sourceRoot":""}